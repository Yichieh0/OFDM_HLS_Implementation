// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="CP_insertion_CP_insertion,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.896000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1266,HLS_SYN_LUT=1257,HLS_VERSION=2021_1}" *)

module CP_insertion (
// synthesis translate_off
    kernel_block,
// synthesis translate_on
        ap_clk,
        ap_rst_n,
        data_in_TDATA,
        data_in_TVALID,
        data_in_TREADY,
        data_in_TKEEP,
        data_in_TSTRB,
        data_in_TUSER,
        data_in_TLAST,
        data_in_TID,
        data_in_TDEST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TREADY,
        data_out_TKEEP,
        data_out_TSTRB,
        data_out_TUSER,
        data_out_TLAST,
        data_out_TID,
        data_out_TDEST
);

parameter    ap_ST_fsm_state1 = 53'd1;
parameter    ap_ST_fsm_state2 = 53'd2;
parameter    ap_ST_fsm_state3 = 53'd4;
parameter    ap_ST_fsm_state4 = 53'd8;
parameter    ap_ST_fsm_state5 = 53'd16;
parameter    ap_ST_fsm_state6 = 53'd32;
parameter    ap_ST_fsm_state7 = 53'd64;
parameter    ap_ST_fsm_state8 = 53'd128;
parameter    ap_ST_fsm_state9 = 53'd256;
parameter    ap_ST_fsm_state10 = 53'd512;
parameter    ap_ST_fsm_state11 = 53'd1024;
parameter    ap_ST_fsm_state12 = 53'd2048;
parameter    ap_ST_fsm_state13 = 53'd4096;
parameter    ap_ST_fsm_state14 = 53'd8192;
parameter    ap_ST_fsm_state15 = 53'd16384;
parameter    ap_ST_fsm_state16 = 53'd32768;
parameter    ap_ST_fsm_state17 = 53'd65536;
parameter    ap_ST_fsm_state18 = 53'd131072;
parameter    ap_ST_fsm_state19 = 53'd262144;
parameter    ap_ST_fsm_state20 = 53'd524288;
parameter    ap_ST_fsm_state21 = 53'd1048576;
parameter    ap_ST_fsm_state22 = 53'd2097152;
parameter    ap_ST_fsm_state23 = 53'd4194304;
parameter    ap_ST_fsm_state24 = 53'd8388608;
parameter    ap_ST_fsm_state25 = 53'd16777216;
parameter    ap_ST_fsm_state26 = 53'd33554432;
parameter    ap_ST_fsm_state27 = 53'd67108864;
parameter    ap_ST_fsm_state28 = 53'd134217728;
parameter    ap_ST_fsm_state29 = 53'd268435456;
parameter    ap_ST_fsm_state30 = 53'd536870912;
parameter    ap_ST_fsm_state31 = 53'd1073741824;
parameter    ap_ST_fsm_state32 = 53'd2147483648;
parameter    ap_ST_fsm_state33 = 53'd4294967296;
parameter    ap_ST_fsm_state34 = 53'd8589934592;
parameter    ap_ST_fsm_state35 = 53'd17179869184;
parameter    ap_ST_fsm_state36 = 53'd34359738368;
parameter    ap_ST_fsm_state37 = 53'd68719476736;
parameter    ap_ST_fsm_state38 = 53'd137438953472;
parameter    ap_ST_fsm_state39 = 53'd274877906944;
parameter    ap_ST_fsm_state40 = 53'd549755813888;
parameter    ap_ST_fsm_state41 = 53'd1099511627776;
parameter    ap_ST_fsm_state42 = 53'd2199023255552;
parameter    ap_ST_fsm_state43 = 53'd4398046511104;
parameter    ap_ST_fsm_state44 = 53'd8796093022208;
parameter    ap_ST_fsm_state45 = 53'd17592186044416;
parameter    ap_ST_fsm_state46 = 53'd35184372088832;
parameter    ap_ST_fsm_state47 = 53'd70368744177664;
parameter    ap_ST_fsm_state48 = 53'd140737488355328;
parameter    ap_ST_fsm_state49 = 53'd281474976710656;
parameter    ap_ST_fsm_state50 = 53'd562949953421312;
parameter    ap_ST_fsm_state51 = 53'd1125899906842624;
parameter    ap_ST_fsm_state52 = 53'd2251799813685248;
parameter    ap_ST_fsm_state53 = 53'd4503599627370496;

// synthesis translate_off
output kernel_block;
// synthesis translate_on
input   ap_clk;
input   ap_rst_n;
input  [63:0] data_in_TDATA;
input   data_in_TVALID;
output   data_in_TREADY;
input  [7:0] data_in_TKEEP;
input  [7:0] data_in_TSTRB;
input  [0:0] data_in_TUSER;
input  [0:0] data_in_TLAST;
input  [0:0] data_in_TID;
input  [0:0] data_in_TDEST;
output  [63:0] data_out_TDATA;
output   data_out_TVALID;
input   data_out_TREADY;
output  [7:0] data_out_TKEEP;
output  [7:0] data_out_TSTRB;
output  [0:0] data_out_TUSER;
output  [0:0] data_out_TLAST;
output  [0:0] data_out_TID;
output  [0:0] data_out_TDEST;

 reg    ap_rst_n_inv;
wire   [31:0] mul_fu_165_p2;
(* fsm_encoding = "none" *) reg   [52:0] ap_CS_fsm;
wire    ap_CS_fsm_state16;
wire   [31:0] sub50_fu_198_p2;
reg   [31:0] sub50_reg_251;
wire    ap_CS_fsm_state51;
wire   [38:0] tmp_7_fu_205_p3;
reg   [38:0] tmp_7_reg_256;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_done;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_idle;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_ready;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TREADY;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_in_TREADY;
wire   [63:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TDATA;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID;
wire   [7:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TKEEP;
wire   [7:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TSTRB;
wire   [0:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TUSER;
wire   [0:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TLAST;
wire   [0:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TID;
wire   [0:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TDEST;
wire   [31:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_pilot_width_3_out;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_pilot_width_3_out_ap_vld;
wire  signed [31:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_sym_num_2_out;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_sym_num_2_out_ap_vld;
wire   [31:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_CP_length_5_out;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_CP_length_5_out_ap_vld;
wire  signed [31:0] grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_DATA_LEN_1_out;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_DATA_LEN_1_out_ap_vld;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_done;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_idle;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_ready;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TREADY;
wire   [63:0] grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TDATA;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID;
wire   [7:0] grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TKEEP;
wire   [7:0] grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TSTRB;
wire   [0:0] grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TUSER;
wire   [0:0] grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TLAST;
wire   [0:0] grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TID;
wire   [0:0] grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TDEST;
wire    grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_in_TREADY;
reg    grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start_reg;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state4;
wire   [8:0] grp_fu_153_p0;
wire   [7:0] grp_fu_153_p2;
wire   [7:0] empty_33_fu_171_p1;
wire  signed [8:0] div_cast_cast_fu_175_p1;
wire  signed [8:0] sub19_fu_179_p2;
wire   [31:0] grp_fu_189_p2;
reg    grp_fu_153_ap_start;
wire    grp_fu_153_ap_done;
reg    grp_fu_189_ap_start;
wire    grp_fu_189_ap_done;
reg   [52:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
reg    ap_ST_fsm_state52_blk;
reg    ap_ST_fsm_state53_blk;
wire    regslice_both_data_out_V_data_V_U_apdone_blk;
wire    ap_CS_fsm_state53;
wire    regslice_both_data_in_V_data_V_U_apdone_blk;
wire   [63:0] data_in_TDATA_int_regslice;
wire    data_in_TVALID_int_regslice;
reg    data_in_TREADY_int_regslice;
wire    regslice_both_data_in_V_data_V_U_ack_in;
wire    regslice_both_data_in_V_keep_V_U_apdone_blk;
wire   [7:0] data_in_TKEEP_int_regslice;
wire    regslice_both_data_in_V_keep_V_U_vld_out;
wire    regslice_both_data_in_V_keep_V_U_ack_in;
wire    regslice_both_data_in_V_strb_V_U_apdone_blk;
wire   [7:0] data_in_TSTRB_int_regslice;
wire    regslice_both_data_in_V_strb_V_U_vld_out;
wire    regslice_both_data_in_V_strb_V_U_ack_in;
wire    regslice_both_data_in_V_user_V_U_apdone_blk;
wire   [0:0] data_in_TUSER_int_regslice;
wire    regslice_both_data_in_V_user_V_U_vld_out;
wire    regslice_both_data_in_V_user_V_U_ack_in;
wire    regslice_both_data_in_V_last_V_U_apdone_blk;
wire   [0:0] data_in_TLAST_int_regslice;
wire    regslice_both_data_in_V_last_V_U_vld_out;
wire    regslice_both_data_in_V_last_V_U_ack_in;
wire    regslice_both_data_in_V_id_V_U_apdone_blk;
wire   [0:0] data_in_TID_int_regslice;
wire    regslice_both_data_in_V_id_V_U_vld_out;
wire    regslice_both_data_in_V_id_V_U_ack_in;
wire    regslice_both_data_in_V_dest_V_U_apdone_blk;
wire   [0:0] data_in_TDEST_int_regslice;
wire    regslice_both_data_in_V_dest_V_U_vld_out;
wire    regslice_both_data_in_V_dest_V_U_ack_in;
reg   [63:0] data_out_TDATA_int_regslice;
reg    data_out_TVALID_int_regslice;
wire    data_out_TREADY_int_regslice;
wire    regslice_both_data_out_V_data_V_U_vld_out;
wire    regslice_both_data_out_V_keep_V_U_apdone_blk;
reg   [7:0] data_out_TKEEP_int_regslice;
wire    regslice_both_data_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_data_out_V_keep_V_U_vld_out;
wire    regslice_both_data_out_V_strb_V_U_apdone_blk;
reg   [7:0] data_out_TSTRB_int_regslice;
wire    regslice_both_data_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_data_out_V_strb_V_U_vld_out;
wire    regslice_both_data_out_V_user_V_U_apdone_blk;
reg   [0:0] data_out_TUSER_int_regslice;
wire    regslice_both_data_out_V_user_V_U_ack_in_dummy;
wire    regslice_both_data_out_V_user_V_U_vld_out;
wire    regslice_both_data_out_V_last_V_U_apdone_blk;
reg   [0:0] data_out_TLAST_int_regslice;
wire    regslice_both_data_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_data_out_V_last_V_U_vld_out;
wire    regslice_both_data_out_V_id_V_U_apdone_blk;
reg   [0:0] data_out_TID_int_regslice;
wire    regslice_both_data_out_V_id_V_U_ack_in_dummy;
wire    regslice_both_data_out_V_id_V_U_vld_out;
wire    regslice_both_data_out_V_dest_V_U_apdone_blk;
reg   [0:0] data_out_TDEST_int_regslice;
wire    regslice_both_data_out_V_dest_V_U_ack_in_dummy;
wire    regslice_both_data_out_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 53'd1;
#0 grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start_reg = 1'b0;
#0 grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start_reg = 1'b0;
end

CP_insertion_CP_insertion_Pipeline_VITIS_LOOP_30_1 grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start),
    .ap_done(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_done),
    .ap_idle(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_idle),
    .ap_ready(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_ready),
    .data_in_TVALID(data_in_TVALID_int_regslice),
    .data_out_TREADY(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TREADY),
    .data_in_TDATA(data_in_TDATA_int_regslice),
    .data_in_TREADY(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_in_TREADY),
    .data_in_TKEEP(data_in_TKEEP_int_regslice),
    .data_in_TSTRB(data_in_TSTRB_int_regslice),
    .data_in_TUSER(data_in_TUSER_int_regslice),
    .data_in_TLAST(data_in_TLAST_int_regslice),
    .data_in_TID(data_in_TID_int_regslice),
    .data_in_TDEST(data_in_TDEST_int_regslice),
    .data_out_TDATA(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TDATA),
    .data_out_TVALID(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID),
    .data_out_TKEEP(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TKEEP),
    .data_out_TSTRB(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TSTRB),
    .data_out_TUSER(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TUSER),
    .data_out_TLAST(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TLAST),
    .data_out_TID(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TID),
    .data_out_TDEST(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TDEST),
    .pilot_width_3_out(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_pilot_width_3_out),
    .pilot_width_3_out_ap_vld(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_pilot_width_3_out_ap_vld),
    .sym_num_2_out(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_sym_num_2_out),
    .sym_num_2_out_ap_vld(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_sym_num_2_out_ap_vld),
    .CP_length_5_out(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_CP_length_5_out),
    .CP_length_5_out_ap_vld(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_CP_length_5_out_ap_vld),
    .DATA_LEN_1_out(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_DATA_LEN_1_out),
    .DATA_LEN_1_out_ap_vld(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_DATA_LEN_1_out_ap_vld)
);

CP_insertion_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3 grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start),
    .ap_done(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_done),
    .ap_idle(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_idle),
    .ap_ready(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_ready),
    .data_in_TVALID(data_in_TVALID_int_regslice),
    .data_out_TREADY(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TREADY),
    .bound(tmp_7_reg_256),
    .data_out_TDATA(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TDATA),
    .data_out_TVALID(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID),
    .data_out_TKEEP(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TKEEP),
    .data_out_TSTRB(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TSTRB),
    .data_out_TUSER(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TUSER),
    .data_out_TLAST(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TLAST),
    .data_out_TID(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TID),
    .data_out_TDEST(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TDEST),
    .data_in_TDATA(data_in_TDATA_int_regslice),
    .data_in_TREADY(grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_in_TREADY),
    .data_in_TKEEP(data_in_TKEEP_int_regslice),
    .data_in_TSTRB(data_in_TSTRB_int_regslice),
    .data_in_TUSER(data_in_TUSER_int_regslice),
    .data_in_TLAST(data_in_TLAST_int_regslice),
    .data_in_TID(data_in_TID_int_regslice),
    .data_in_TDEST(data_in_TDEST_int_regslice),
    .sub50(sub50_reg_251)
);

CP_insertion_sdiv_9ns_32ns_8_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
sdiv_9ns_32ns_8_13_seq_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_153_ap_start),
    .done(grp_fu_153_ap_done),
    .din0(grp_fu_153_p0),
    .din1(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_pilot_width_3_out),
    .ce(1'b1),
    .dout(grp_fu_153_p2)
);

CP_insertion_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U37(
    .din0(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_sym_num_2_out),
    .din1(grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_DATA_LEN_1_out),
    .dout(mul_fu_165_p2)
);

CP_insertion_sdiv_32ns_9s_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 32 ))
sdiv_32ns_9s_32_36_seq_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_189_ap_start),
    .done(grp_fu_189_ap_done),
    .din0(mul_fu_165_p2),
    .din1(sub19_fu_179_p2),
    .ce(1'b1),
    .dout(grp_fu_189_p2)
);

CP_insertion_regslice_both #(
    .DataWidth( 64 ))
regslice_both_data_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TDATA),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_data_V_U_ack_in),
    .data_out(data_in_TDATA_int_regslice),
    .vld_out(data_in_TVALID_int_regslice),
    .ack_out(data_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_in_V_data_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 8 ))
regslice_both_data_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TKEEP),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_keep_V_U_ack_in),
    .data_out(data_in_TKEEP_int_regslice),
    .vld_out(regslice_both_data_in_V_keep_V_U_vld_out),
    .ack_out(data_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_in_V_keep_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 8 ))
regslice_both_data_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TSTRB),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_strb_V_U_ack_in),
    .data_out(data_in_TSTRB_int_regslice),
    .vld_out(regslice_both_data_in_V_strb_V_U_vld_out),
    .ack_out(data_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_in_V_strb_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_in_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TUSER),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_user_V_U_ack_in),
    .data_out(data_in_TUSER_int_regslice),
    .vld_out(regslice_both_data_in_V_user_V_U_vld_out),
    .ack_out(data_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_in_V_user_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TLAST),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_last_V_U_ack_in),
    .data_out(data_in_TLAST_int_regslice),
    .vld_out(regslice_both_data_in_V_last_V_U_vld_out),
    .ack_out(data_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_in_V_last_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_in_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TID),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_id_V_U_ack_in),
    .data_out(data_in_TID_int_regslice),
    .vld_out(regslice_both_data_in_V_id_V_U_vld_out),
    .ack_out(data_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_in_V_id_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_in_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TDEST),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_dest_V_U_ack_in),
    .data_out(data_in_TDEST_int_regslice),
    .vld_out(regslice_both_data_in_V_dest_V_U_vld_out),
    .ack_out(data_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_in_V_dest_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 64 ))
regslice_both_data_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_out_TDATA_int_regslice),
    .vld_in(data_out_TVALID_int_regslice),
    .ack_in(data_out_TREADY_int_regslice),
    .data_out(data_out_TDATA),
    .vld_out(regslice_both_data_out_V_data_V_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_data_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 8 ))
regslice_both_data_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_out_TKEEP_int_regslice),
    .vld_in(data_out_TVALID_int_regslice),
    .ack_in(regslice_both_data_out_V_keep_V_U_ack_in_dummy),
    .data_out(data_out_TKEEP),
    .vld_out(regslice_both_data_out_V_keep_V_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_keep_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 8 ))
regslice_both_data_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_out_TSTRB_int_regslice),
    .vld_in(data_out_TVALID_int_regslice),
    .ack_in(regslice_both_data_out_V_strb_V_U_ack_in_dummy),
    .data_out(data_out_TSTRB),
    .vld_out(regslice_both_data_out_V_strb_V_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_strb_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_out_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_out_TUSER_int_regslice),
    .vld_in(data_out_TVALID_int_regslice),
    .ack_in(regslice_both_data_out_V_user_V_U_ack_in_dummy),
    .data_out(data_out_TUSER),
    .vld_out(regslice_both_data_out_V_user_V_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_user_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_out_TLAST_int_regslice),
    .vld_in(data_out_TVALID_int_regslice),
    .ack_in(regslice_both_data_out_V_last_V_U_ack_in_dummy),
    .data_out(data_out_TLAST),
    .vld_out(regslice_both_data_out_V_last_V_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_last_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_out_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_out_TID_int_regslice),
    .vld_in(data_out_TVALID_int_regslice),
    .ack_in(regslice_both_data_out_V_id_V_U_ack_in_dummy),
    .data_out(data_out_TID),
    .vld_out(regslice_both_data_out_V_id_V_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_id_V_U_apdone_blk)
);

CP_insertion_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_out_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_out_TDEST_int_regslice),
    .vld_in(data_out_TVALID_int_regslice),
    .ack_in(regslice_both_data_out_V_dest_V_U_ack_in_dummy),
    .data_out(data_out_TDEST),
    .vld_out(regslice_both_data_out_V_dest_V_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start_reg <= 1'b1;
        end else if ((grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_ready == 1'b1)) begin
            grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state51)) begin
            grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start_reg <= 1'b1;
        end else if ((grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_ready == 1'b1)) begin
            grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        sub50_reg_251 <= sub50_fu_198_p2;
        tmp_7_reg_256[38 : 7] <= tmp_7_fu_205_p3[38 : 7];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

assign ap_ST_fsm_state1_blk = 1'b0;

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

always @ (*) begin
    if ((grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_done == 1'b0)) begin
        ap_ST_fsm_state52_blk = 1'b1;
    end else begin
        ap_ST_fsm_state52_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_data_out_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state53_blk = 1'b1;
    end else begin
        ap_ST_fsm_state53_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        data_in_TREADY_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_in_TREADY;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        data_in_TREADY_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_in_TREADY;
    end else begin
        data_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & (grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID == 1'b1))) begin
        data_out_TDATA_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TDATA;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID == 1'b1))) begin
        data_out_TDATA_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TDATA;
    end else begin
        data_out_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & (grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID == 1'b1))) begin
        data_out_TDEST_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TDEST;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID == 1'b1))) begin
        data_out_TDEST_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TDEST;
    end else begin
        data_out_TDEST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & (grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID == 1'b1))) begin
        data_out_TID_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TID;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID == 1'b1))) begin
        data_out_TID_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TID;
    end else begin
        data_out_TID_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & (grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID == 1'b1))) begin
        data_out_TKEEP_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TKEEP;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID == 1'b1))) begin
        data_out_TKEEP_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TKEEP;
    end else begin
        data_out_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & (grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID == 1'b1))) begin
        data_out_TLAST_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TLAST;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID == 1'b1))) begin
        data_out_TLAST_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TLAST;
    end else begin
        data_out_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & (grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID == 1'b1))) begin
        data_out_TSTRB_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TSTRB;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID == 1'b1))) begin
        data_out_TSTRB_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TSTRB;
    end else begin
        data_out_TSTRB_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & (grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID == 1'b1))) begin
        data_out_TUSER_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TUSER;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID == 1'b1))) begin
        data_out_TUSER_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TUSER;
    end else begin
        data_out_TUSER_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        data_out_TVALID_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TVALID;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        data_out_TVALID_int_regslice = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TVALID;
    end else begin
        data_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_153_ap_start = 1'b1;
    end else begin
        grp_fu_153_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_189_ap_start = 1'b1;
    end else begin
        grp_fu_189_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((regslice_both_data_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_in_TREADY = regslice_both_data_in_V_data_V_U_ack_in;

assign data_out_TVALID = regslice_both_data_out_V_data_V_U_vld_out;

assign div_cast_cast_fu_175_p1 = $signed(empty_33_fu_171_p1);

assign empty_33_fu_171_p1 = grp_fu_153_p2[7:0];

assign grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start = grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_ap_start_reg;

assign grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_data_out_TREADY = (data_out_TREADY_int_regslice & ap_CS_fsm_state3);

assign grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start = grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_ap_start_reg;

assign grp_CP_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_116_data_out_TREADY = (data_out_TREADY_int_regslice & ap_CS_fsm_state52);

assign grp_fu_153_p0 = 32'd64;

assign sub19_fu_179_p2 = ($signed(9'd64) - $signed(div_cast_cast_fu_175_p1));

assign sub50_fu_198_p2 = (32'd64 - grp_CP_insertion_Pipeline_VITIS_LOOP_30_1_fu_80_CP_length_5_out);

assign tmp_7_fu_205_p3 = {{grp_fu_189_p2}, {7'd0}};

always @ (posedge ap_clk) begin
    tmp_7_reg_256[6:0] <= 7'b0000000;
end


// synthesis translate_off
`include "CP_insertion_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //CP_insertion

