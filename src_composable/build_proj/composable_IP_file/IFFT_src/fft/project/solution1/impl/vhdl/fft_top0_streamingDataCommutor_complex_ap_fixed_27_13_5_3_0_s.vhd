-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_top0_streamingDataCommutor_complex_ap_fixed_27_13_5_3_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fftOutData_local_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fftOutData_local_empty_n : IN STD_LOGIC;
    fftOutData_local_read : OUT STD_LOGIC;
    fftOutData_local2_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    fftOutData_local2_full_n : IN STD_LOGIC;
    fftOutData_local2_write : OUT STD_LOGIC );
end;


architecture behav of fft_top0_streamingDataCommutor_complex_ap_fixed_27_13_5_3_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln231_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal fifo_has_next_sample_nbreadreq_fu_108_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal delay_line_stall_2_load_reg_507 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_stall_2_load_reg_507_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln297_reg_555 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_has_next_sample_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_has_next_sample_reg_498_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op71_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal control_count_V_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal control_bits_V_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal sample_in_read_count_V_2 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal delay_line_stall_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal delayline_Array_14_ce0 : STD_LOGIC;
    signal delayline_Array_14_we0 : STD_LOGIC;
    signal delayline_Array_14_q0 : STD_LOGIC_VECTOR (54 downto 0);
    signal control_delayline_Array_2_ce0 : STD_LOGIC;
    signal control_delayline_Array_2_we0 : STD_LOGIC;
    signal control_delayline_Array_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delayline_Array_2_ce0 : STD_LOGIC;
    signal delayline_Array_2_we0 : STD_LOGIC;
    signal delayline_Array_2_q0 : STD_LOGIC_VECTOR (54 downto 0);
    signal fftOutData_local_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fftOutData_local2_blk_n : STD_LOGIC;
    signal t17_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_fu_215_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_reg_502 : STD_LOGIC_VECTOR (5 downto 0);
    signal delay_line_stall_2_load_load_fu_221_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_fu_225_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_ln231_reg_531 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln231_reg_531_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln79_fu_403_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln79_reg_535 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln79_1_fu_411_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln79_1_reg_540 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln130_fu_447_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln130_reg_545 : STD_LOGIC_VECTOR (26 downto 0);
    signal lshr_ln130_s_reg_550 : STD_LOGIC_VECTOR (26 downto 0);
    signal and_ln297_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_t17_phi_fu_148_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_arrayidx_0_01_load_0_i365_reg_158 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_phi_reg_pp0_iter1_arrayidx_0_01_load_0_i365_reg_158 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_phi_reg_pp0_iter0_arrayidx_0_11_load_0_i364_reg_169 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_phi_reg_pp0_iter1_arrayidx_0_11_load_0_i364_reg_169 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_valid_0_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_valid_0_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204 : STD_LOGIC_VECTOR (26 downto 0);
    signal xor_ln251_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln870_fu_285_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln256_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_s_fu_315_p4 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln66_fu_361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_6_fu_427_p4 : STD_LOGIC_VECTOR (54 downto 0);
    signal temp_tagged_mux_chain_input_sample_M_real_V_1_fu_335_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_tagged_mux_chain_input_sample_M_imag_V_1_fu_339_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_tagged_mux_chain_input_valid_1_fu_349_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln79_fu_399_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln68_2_fu_391_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln68_1_fu_383_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln68_fu_375_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln79_2_fu_419_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal valid_flag_fu_461_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln174_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_478_p7 : STD_LOGIC_VECTOR (122 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_185 : BOOLEAN;
    signal ap_condition_77 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component fft_top0_streamingDataCommutor_complex_ap_fixed_27_13_5_3_0_s_delayline_Array_14 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (54 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (54 downto 0) );
    end component;


    component fft_top0_streamingDataCommutor_complex_ap_fixed_22_7_5_3_0_s_control_delayline_Array_4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    delayline_Array_14_U : component fft_top0_streamingDataCommutor_complex_ap_fixed_27_13_5_3_0_s_delayline_Array_14
    generic map (
        DataWidth => 55,
        AddressRange => 1,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv1_0,
        ce0 => delayline_Array_14_ce0,
        we0 => delayline_Array_14_we0,
        d0 => p_s_fu_315_p4,
        q0 => delayline_Array_14_q0);

    control_delayline_Array_2_U : component fft_top0_streamingDataCommutor_complex_ap_fixed_22_7_5_3_0_s_control_delayline_Array_4
    generic map (
        DataWidth => 32,
        AddressRange => 1,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv1_0,
        ce0 => control_delayline_Array_2_ce0,
        we0 => control_delayline_Array_2_we0,
        d0 => zext_ln66_fu_361_p1,
        q0 => control_delayline_Array_2_q0);

    delayline_Array_2_U : component fft_top0_streamingDataCommutor_complex_ap_fixed_27_13_5_3_0_s_delayline_Array_14
    generic map (
        DataWidth => 55,
        AddressRange => 1,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv1_0,
        ce0 => delayline_Array_2_ce0,
        we0 => delayline_Array_2_we0,
        d0 => p_6_fu_427_p4,
        q0 => delayline_Array_2_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln231_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_arrayidx_0_01_load_0_i365_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_77)) then
                if (((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_0) and (delay_line_stall_2_load_load_fu_221_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_arrayidx_0_01_load_0_i365_reg_158 <= ap_const_lv27_0;
                elsif ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_arrayidx_0_01_load_0_i365_reg_158 <= fftOutData_local_dout(90 downto 64);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_arrayidx_0_01_load_0_i365_reg_158 <= ap_phi_reg_pp0_iter0_arrayidx_0_01_load_0_i365_reg_158;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_arrayidx_0_11_load_0_i364_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_77)) then
                if (((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_0) and (delay_line_stall_2_load_load_fu_221_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_arrayidx_0_11_load_0_i364_reg_169 <= ap_const_lv27_0;
                elsif ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_arrayidx_0_11_load_0_i364_reg_169 <= fftOutData_local_dout(122 downto 96);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_arrayidx_0_11_load_0_i364_reg_169 <= ap_phi_reg_pp0_iter0_arrayidx_0_11_load_0_i364_reg_169;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_77)) then
                if (((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_0) and (delay_line_stall_2_load_load_fu_221_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204 <= ap_const_lv27_0;
                elsif ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204 <= fftOutData_local_dout(58 downto 32);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204 <= ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_77)) then
                if (((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_0) and (delay_line_stall_2_load_load_fu_221_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193 <= ap_const_lv27_0;
                elsif ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193 <= trunc_ln145_fu_225_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193 <= ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_valid_0_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_77)) then
                if (((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_0) and (delay_line_stall_2_load_load_fu_221_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_valid_0_reg_180 <= ap_const_lv1_0;
                elsif ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_valid_0_reg_180 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_valid_0_reg_180 <= ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_valid_0_reg_180;
                end if;
            end if; 
        end if;
    end process;

    t17_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln231_reg_531 = ap_const_lv1_0))) then 
                t17_reg_144 <= t_reg_502;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln231_reg_531 = ap_const_lv1_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                t17_reg_144 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((fifo_has_next_sample_reg_498 = ap_const_lv1_1) or (delay_line_stall_2_load_reg_507 = ap_const_lv1_0)))) then
                and_ln297_reg_555 <= and_ln297_fu_469_p2;
                lshr_ln130_s_reg_550 <= delayline_Array_2_q0(53 downto 27);
                select_ln79_1_reg_540 <= select_ln79_1_fu_411_p3;
                select_ln79_reg_535 <= select_ln79_fu_403_p3;
                trunc_ln130_reg_545 <= trunc_ln130_fu_447_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                control_bits_V_2 <= control_count_V_2;
                control_count_V_2 <= xor_ln251_fu_269_p2;
                delay_line_stall_2 <= icmp_ln256_fu_291_p2;
                sample_in_read_count_V_2 <= add_ln870_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                delay_line_stall_2_load_reg_507 <= delay_line_stall_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                delay_line_stall_2_load_reg_507_pp0_iter1_reg <= delay_line_stall_2_load_reg_507;
                fifo_has_next_sample_reg_498 <= fifo_has_next_sample_nbreadreq_fu_108_p3;
                fifo_has_next_sample_reg_498_pp0_iter1_reg <= fifo_has_next_sample_reg_498;
                icmp_ln231_reg_531 <= icmp_ln231_fu_309_p2;
                icmp_ln231_reg_531_pp0_iter1_reg <= icmp_ln231_reg_531;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                t_reg_502 <= t_fu_215_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln870_fu_285_p2 <= std_logic_vector(unsigned(sample_in_read_count_V_2) + unsigned(ap_const_lv5_1));
    and_ln297_fu_469_p2 <= (valid_flag_fu_461_p3 and select_ln79_2_fu_419_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, fftOutData_local_empty_n, fifo_has_next_sample_nbreadreq_fu_108_p3, fftOutData_local2_full_n, ap_predicate_op71_write_state4, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op71_write_state4 = ap_const_boolean_1) and (fftOutData_local2_full_n = ap_const_logic_0)) or ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (fftOutData_local_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, fftOutData_local_empty_n, fifo_has_next_sample_nbreadreq_fu_108_p3, fftOutData_local2_full_n, ap_predicate_op71_write_state4, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op71_write_state4 = ap_const_boolean_1) and (fftOutData_local2_full_n = ap_const_logic_0)) or ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (fftOutData_local_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, fftOutData_local_empty_n, fifo_has_next_sample_nbreadreq_fu_108_p3, fftOutData_local2_full_n, ap_predicate_op71_write_state4, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op71_write_state4 = ap_const_boolean_1) and (fftOutData_local2_full_n = ap_const_logic_0)) or ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (fftOutData_local_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(fftOutData_local_empty_n, fifo_has_next_sample_nbreadreq_fu_108_p3)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (fftOutData_local_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(fftOutData_local2_full_n, ap_predicate_op71_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((ap_predicate_op71_write_state4 = ap_const_boolean_1) and (fftOutData_local2_full_n = ap_const_logic_0));
    end process;


    ap_condition_185_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_185 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_77_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_77 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln231_reg_531_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln231_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_t17_phi_fu_148_p6_assign_proc : process(t17_reg_144, t_reg_502, icmp_ln231_reg_531, ap_condition_185)
    begin
        if ((ap_const_boolean_1 = ap_condition_185)) then
            if ((icmp_ln231_reg_531 = ap_const_lv1_1)) then 
                ap_phi_mux_t17_phi_fu_148_p6 <= ap_const_lv6_0;
            elsif ((icmp_ln231_reg_531 = ap_const_lv1_0)) then 
                ap_phi_mux_t17_phi_fu_148_p6 <= t_reg_502;
            else 
                ap_phi_mux_t17_phi_fu_148_p6 <= t17_reg_144;
            end if;
        else 
            ap_phi_mux_t17_phi_fu_148_p6 <= t17_reg_144;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_arrayidx_0_01_load_0_i365_reg_158 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_arrayidx_0_11_load_0_i364_reg_169 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_temp_tagged_mux_chain_input_valid_0_reg_180 <= "X";

    ap_predicate_op71_write_state4_assign_proc : process(delay_line_stall_2_load_reg_507_pp0_iter1_reg, and_ln297_reg_555, fifo_has_next_sample_reg_498_pp0_iter1_reg)
    begin
                ap_predicate_op71_write_state4 <= (((fifo_has_next_sample_reg_498_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln297_reg_555)) or ((delay_line_stall_2_load_reg_507_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln297_reg_555)));
    end process;


    ap_ready_assign_proc : process(ap_start, icmp_ln231_fu_309_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (icmp_ln231_fu_309_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    control_delayline_Array_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, delay_line_stall_2_load_reg_507, fifo_has_next_sample_reg_498, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_has_next_sample_reg_498 = ap_const_lv1_1) or (delay_line_stall_2_load_reg_507 = ap_const_lv1_0)))) then 
            control_delayline_Array_2_ce0 <= ap_const_logic_1;
        else 
            control_delayline_Array_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    control_delayline_Array_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, delay_line_stall_2_load_reg_507, fifo_has_next_sample_reg_498, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_has_next_sample_reg_498 = ap_const_lv1_1) or (delay_line_stall_2_load_reg_507 = ap_const_lv1_0)))) then 
            control_delayline_Array_2_we0 <= ap_const_logic_1;
        else 
            control_delayline_Array_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_stall_2_load_load_fu_221_p1 <= delay_line_stall_2;

    delayline_Array_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, delay_line_stall_2_load_reg_507, fifo_has_next_sample_reg_498, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_has_next_sample_reg_498 = ap_const_lv1_1) or (delay_line_stall_2_load_reg_507 = ap_const_lv1_0)))) then 
            delayline_Array_14_ce0 <= ap_const_logic_1;
        else 
            delayline_Array_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delayline_Array_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, delay_line_stall_2_load_reg_507, fifo_has_next_sample_reg_498, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_has_next_sample_reg_498 = ap_const_lv1_1) or (delay_line_stall_2_load_reg_507 = ap_const_lv1_0)))) then 
            delayline_Array_14_we0 <= ap_const_logic_1;
        else 
            delayline_Array_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delayline_Array_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, delay_line_stall_2_load_reg_507, fifo_has_next_sample_reg_498, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_has_next_sample_reg_498 = ap_const_lv1_1) or (delay_line_stall_2_load_reg_507 = ap_const_lv1_0)))) then 
            delayline_Array_2_ce0 <= ap_const_logic_1;
        else 
            delayline_Array_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delayline_Array_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, delay_line_stall_2_load_reg_507, fifo_has_next_sample_reg_498, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_has_next_sample_reg_498 = ap_const_lv1_1) or (delay_line_stall_2_load_reg_507 = ap_const_lv1_0)))) then 
            delayline_Array_2_we0 <= ap_const_logic_1;
        else 
            delayline_Array_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fftOutData_local2_blk_n_assign_proc : process(fftOutData_local2_full_n, ap_predicate_op71_write_state4, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op71_write_state4 = ap_const_boolean_1))) then 
            fftOutData_local2_blk_n <= fftOutData_local2_full_n;
        else 
            fftOutData_local2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fftOutData_local2_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_478_p7),128));

    fftOutData_local2_write_assign_proc : process(ap_predicate_op71_write_state4, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op71_write_state4 = ap_const_boolean_1))) then 
            fftOutData_local2_write <= ap_const_logic_1;
        else 
            fftOutData_local2_write <= ap_const_logic_0;
        end if; 
    end process;


    fftOutData_local_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, fftOutData_local_empty_n, fifo_has_next_sample_nbreadreq_fu_108_p3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fftOutData_local_blk_n <= fftOutData_local_empty_n;
        else 
            fftOutData_local_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutData_local_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, fifo_has_next_sample_nbreadreq_fu_108_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (fifo_has_next_sample_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fftOutData_local_read <= ap_const_logic_1;
        else 
            fftOutData_local_read <= ap_const_logic_0;
        end if; 
    end process;

    fifo_has_next_sample_nbreadreq_fu_108_p3 <= (0=>(fftOutData_local_empty_n), others=>'-');
    icmp_ln231_fu_309_p2 <= "1" when (ap_phi_mux_t17_phi_fu_148_p6 = ap_const_lv6_21) else "0";
    icmp_ln256_fu_291_p2 <= "0" when (sample_in_read_count_V_2 = ap_const_lv5_1F) else "1";
    p_6_fu_427_p4 <= ((select_ln68_2_fu_391_p3 & select_ln68_1_fu_383_p3) & select_ln68_fu_375_p3);
    p_s_fu_315_p4 <= ((ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_valid_0_reg_180 & ap_phi_reg_pp0_iter1_arrayidx_0_11_load_0_i364_reg_169) & ap_phi_reg_pp0_iter1_arrayidx_0_01_load_0_i365_reg_158);
    select_ln68_1_fu_383_p3 <= 
        temp_tagged_mux_chain_input_sample_M_imag_V_1_fu_339_p4 when (control_bits_V_2(0) = '1') else 
        ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204;
    select_ln68_2_fu_391_p3 <= 
        temp_tagged_mux_chain_input_valid_1_fu_349_p3 when (control_bits_V_2(0) = '1') else 
        ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_valid_0_reg_180;
    select_ln68_fu_375_p3 <= 
        temp_tagged_mux_chain_input_sample_M_real_V_1_fu_335_p1 when (control_bits_V_2(0) = '1') else 
        ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193;
    select_ln79_1_fu_411_p3 <= 
        temp_tagged_mux_chain_input_sample_M_imag_V_1_fu_339_p4 when (trunc_ln79_fu_399_p1(0) = '1') else 
        ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_imag_V_0_reg_204;
    select_ln79_2_fu_419_p3 <= 
        temp_tagged_mux_chain_input_valid_1_fu_349_p3 when (trunc_ln79_fu_399_p1(0) = '1') else 
        ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_valid_0_reg_180;
    select_ln79_fu_403_p3 <= 
        temp_tagged_mux_chain_input_sample_M_real_V_1_fu_335_p1 when (trunc_ln79_fu_399_p1(0) = '1') else 
        ap_phi_reg_pp0_iter1_temp_tagged_mux_chain_input_sample_M_real_V_0_reg_193;
    t_fu_215_p2 <= std_logic_vector(unsigned(ap_phi_mux_t17_phi_fu_148_p6) + unsigned(ap_const_lv6_1));
    temp_tagged_mux_chain_input_sample_M_imag_V_1_fu_339_p4 <= delayline_Array_14_q0(53 downto 27);
    temp_tagged_mux_chain_input_sample_M_real_V_1_fu_335_p1 <= delayline_Array_14_q0(27 - 1 downto 0);
    temp_tagged_mux_chain_input_valid_1_fu_349_p3 <= delayline_Array_14_q0(54 downto 54);
    tmp_fu_478_p7 <= (((((select_ln79_1_reg_540 & ap_const_lv5_0) & select_ln79_reg_535) & zext_ln174_fu_475_p1) & ap_const_lv5_0) & trunc_ln130_reg_545);
    trunc_ln130_fu_447_p1 <= delayline_Array_2_q0(27 - 1 downto 0);
    trunc_ln145_fu_225_p1 <= fftOutData_local_dout(27 - 1 downto 0);
    trunc_ln79_fu_399_p1 <= control_delayline_Array_2_q0(1 - 1 downto 0);
    valid_flag_fu_461_p3 <= delayline_Array_2_q0(54 downto 54);
    xor_ln251_fu_269_p2 <= (control_count_V_2 xor ap_const_lv1_1);
    zext_ln174_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln130_s_reg_550),32));
    zext_ln66_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(control_bits_V_2),32));
end behav;
