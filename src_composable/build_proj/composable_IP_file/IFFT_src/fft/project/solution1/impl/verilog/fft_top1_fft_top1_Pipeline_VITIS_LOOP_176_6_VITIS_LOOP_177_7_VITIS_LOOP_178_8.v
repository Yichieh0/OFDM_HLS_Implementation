// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_top1_fft_top1_Pipeline_VITIS_LOOP_176_6_VITIS_LOOP_177_7_VITIS_LOOP_178_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_outData_V_M_real_V_0_dout,
        p_outData_V_M_real_V_0_empty_n,
        p_outData_V_M_real_V_0_read,
        p_outData_V_M_imag_V_0_dout,
        p_outData_V_M_imag_V_0_empty_n,
        p_outData_V_M_imag_V_0_read,
        p_outData_V_M_real_V_1_dout,
        p_outData_V_M_real_V_1_empty_n,
        p_outData_V_M_real_V_1_read,
        p_outData_V_M_imag_V_1_dout,
        p_outData_V_M_imag_V_1_empty_n,
        p_outData_V_M_imag_V_1_read,
        data_out_TREADY,
        zext_ln161,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TKEEP,
        data_out_TSTRB,
        data_out_TUSER,
        data_out_TLAST,
        data_out_TID,
        data_out_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [26:0] p_outData_V_M_real_V_0_dout;
input   p_outData_V_M_real_V_0_empty_n;
output   p_outData_V_M_real_V_0_read;
input  [26:0] p_outData_V_M_imag_V_0_dout;
input   p_outData_V_M_imag_V_0_empty_n;
output   p_outData_V_M_imag_V_0_read;
input  [26:0] p_outData_V_M_real_V_1_dout;
input   p_outData_V_M_real_V_1_empty_n;
output   p_outData_V_M_real_V_1_read;
input  [26:0] p_outData_V_M_imag_V_1_dout;
input   p_outData_V_M_imag_V_1_empty_n;
output   p_outData_V_M_imag_V_1_read;
input   data_out_TREADY;
input  [38:0] zext_ln161;
output  [63:0] data_out_TDATA;
output   data_out_TVALID;
output  [7:0] data_out_TKEEP;
output  [7:0] data_out_TSTRB;
output  [0:0] data_out_TUSER;
output  [0:0] data_out_TLAST;
output  [0:0] data_out_TID;
output  [0:0] data_out_TDEST;

reg ap_idle;
reg p_outData_V_M_real_V_0_read;
reg p_outData_V_M_imag_V_0_read;
reg p_outData_V_M_real_V_1_read;
reg p_outData_V_M_imag_V_1_read;
reg data_out_TVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    io_acc_block_signal_op53;
reg   [0:0] icmp_ln176_reg_434;
reg   [0:0] trunc_ln145_reg_438;
reg    ap_predicate_op53_read_state3;
wire    io_acc_block_signal_op57;
reg    ap_predicate_op57_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln176_fu_205_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    data_out_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    p_outData_V_M_real_V_0_blk_n;
reg    p_outData_V_M_imag_V_0_blk_n;
reg    p_outData_V_M_real_V_1_blk_n;
reg    p_outData_V_M_imag_V_1_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] trunc_ln145_fu_260_p1;
reg   [26:0] ap_phi_mux_p_04_0_0_0_0_phi_fu_172_p4;
wire   [26:0] ap_phi_reg_pp0_iter2_p_04_0_0_0_0_reg_169;
reg   [26:0] ap_phi_mux_p_15_0_0_0_0_phi_fu_181_p4;
wire   [26:0] ap_phi_reg_pp0_iter2_p_15_0_0_0_0_reg_178;
reg   [31:0] p_Val2_s_fu_96;
wire   [31:0] fft_out_real_V_fu_352_p5;
reg   [31:0] p_Val2_1_fu_100;
wire   [31:0] fft_out_imag_V_fu_364_p5;
reg   [1:0] i_fu_104;
wire   [1:0] add_ln178_fu_267_p2;
wire    ap_loop_init;
reg   [8:0] indvar_flatten18_fu_108;
wire   [8:0] select_ln177_fu_279_p3;
reg   [38:0] indvar_flatten34_fu_112;
wire   [38:0] add_ln176_fu_210_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln177_fu_222_p2;
wire   [0:0] icmp_ln178_fu_234_p2;
wire   [0:0] xor_ln118_fu_228_p2;
wire   [0:0] and_ln118_fu_240_p2;
wire   [0:0] or_ln118_fu_246_p2;
wire   [1:0] select_ln118_fu_252_p3;
wire   [8:0] add_ln177_fu_273_p2;
wire   [18:0] trunc_ln740_fu_328_p1;
wire   [18:0] trunc_ln740_1_fu_340_p1;
wire   [19:0] read_Tout1_in_r_V_fu_332_p3;
wire   [19:0] read_Tout1_in_i_V_fu_344_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft_top1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_104 <= 2'd0;
        end else if (((icmp_ln176_fu_205_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_104 <= add_ln178_fu_267_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten18_fu_108 <= 9'd0;
        end else if (((icmp_ln176_fu_205_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten18_fu_108 <= select_ln177_fu_279_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten34_fu_112 <= 39'd0;
        end else if (((icmp_ln176_fu_205_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten34_fu_112 <= add_ln176_fu_210_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln176_reg_434 <= icmp_ln176_fu_205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_1_fu_100 <= fft_out_imag_V_fu_364_p5;
        p_Val2_s_fu_96 <= fft_out_real_V_fu_352_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_fu_205_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln145_reg_438 <= trunc_ln145_fu_260_p1;
    end
end

always @ (*) begin
    if (((icmp_ln176_fu_205_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln176_reg_434 == 1'd0)) begin
        if ((trunc_ln145_reg_438 == 1'd0)) begin
            ap_phi_mux_p_04_0_0_0_0_phi_fu_172_p4 = p_outData_V_M_real_V_0_dout;
        end else if ((trunc_ln145_reg_438 == 1'd1)) begin
            ap_phi_mux_p_04_0_0_0_0_phi_fu_172_p4 = p_outData_V_M_real_V_1_dout;
        end else begin
            ap_phi_mux_p_04_0_0_0_0_phi_fu_172_p4 = ap_phi_reg_pp0_iter2_p_04_0_0_0_0_reg_169;
        end
    end else begin
        ap_phi_mux_p_04_0_0_0_0_phi_fu_172_p4 = ap_phi_reg_pp0_iter2_p_04_0_0_0_0_reg_169;
    end
end

always @ (*) begin
    if ((icmp_ln176_reg_434 == 1'd0)) begin
        if ((trunc_ln145_reg_438 == 1'd0)) begin
            ap_phi_mux_p_15_0_0_0_0_phi_fu_181_p4 = p_outData_V_M_imag_V_0_dout;
        end else if ((trunc_ln145_reg_438 == 1'd1)) begin
            ap_phi_mux_p_15_0_0_0_0_phi_fu_181_p4 = p_outData_V_M_imag_V_1_dout;
        end else begin
            ap_phi_mux_p_15_0_0_0_0_phi_fu_181_p4 = ap_phi_reg_pp0_iter2_p_15_0_0_0_0_reg_178;
        end
    end else begin
        ap_phi_mux_p_15_0_0_0_0_phi_fu_181_p4 = ap_phi_reg_pp0_iter2_p_15_0_0_0_0_reg_178;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_out_TDATA_blk_n = data_out_TREADY;
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_out_TVALID = 1'b1;
    end else begin
        data_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op53_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_outData_V_M_imag_V_0_blk_n = p_outData_V_M_imag_V_0_empty_n;
    end else begin
        p_outData_V_M_imag_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op53_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_outData_V_M_imag_V_0_read = 1'b1;
    end else begin
        p_outData_V_M_imag_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op57_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_outData_V_M_imag_V_1_blk_n = p_outData_V_M_imag_V_1_empty_n;
    end else begin
        p_outData_V_M_imag_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op57_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_outData_V_M_imag_V_1_read = 1'b1;
    end else begin
        p_outData_V_M_imag_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op53_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_outData_V_M_real_V_0_blk_n = p_outData_V_M_real_V_0_empty_n;
    end else begin
        p_outData_V_M_real_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op53_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_outData_V_M_real_V_0_read = 1'b1;
    end else begin
        p_outData_V_M_real_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op57_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_outData_V_M_real_V_1_blk_n = p_outData_V_M_real_V_1_empty_n;
    end else begin
        p_outData_V_M_real_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op57_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_outData_V_M_real_V_1_read = 1'b1;
    end else begin
        p_outData_V_M_real_V_1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln176_fu_210_p2 = (indvar_flatten34_fu_112 + 39'd1);

assign add_ln177_fu_273_p2 = (indvar_flatten18_fu_108 + 9'd1);

assign add_ln178_fu_267_p2 = (select_ln118_fu_252_p3 + 2'd1);

assign and_ln118_fu_240_p2 = (xor_ln118_fu_228_p2 & icmp_ln178_fu_234_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((data_out_TREADY == 1'b0) | ((ap_predicate_op57_read_state3 == 1'b1) & (io_acc_block_signal_op57 == 1'b0)) | ((ap_predicate_op53_read_state3 == 1'b1) & (io_acc_block_signal_op53 == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((data_out_TREADY == 1'b0) | ((ap_predicate_op57_read_state3 == 1'b1) & (io_acc_block_signal_op57 == 1'b0)) | ((ap_predicate_op53_read_state3 == 1'b1) & (io_acc_block_signal_op53 == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((data_out_TREADY == 1'b0) | ((ap_predicate_op57_read_state3 == 1'b1) & (io_acc_block_signal_op57 == 1'b0)) | ((ap_predicate_op53_read_state3 == 1'b1) & (io_acc_block_signal_op53 == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((data_out_TREADY == 1'b0) | ((ap_predicate_op57_read_state3 == 1'b1) & (io_acc_block_signal_op57 == 1'b0)) | ((ap_predicate_op53_read_state3 == 1'b1) & (io_acc_block_signal_op53 == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter2_p_04_0_0_0_0_reg_169 = 'bx;

assign ap_phi_reg_pp0_iter2_p_15_0_0_0_0_reg_178 = 'bx;

always @ (*) begin
    ap_predicate_op53_read_state3 = ((trunc_ln145_reg_438 == 1'd0) & (icmp_ln176_reg_434 == 1'd0));
end

always @ (*) begin
    ap_predicate_op57_read_state3 = ((trunc_ln145_reg_438 == 1'd1) & (icmp_ln176_reg_434 == 1'd0));
end

assign data_out_TDATA = {{fft_out_real_V_fu_352_p5}, {fft_out_imag_V_fu_364_p5}};

assign data_out_TDEST = 1'd0;

assign data_out_TID = 1'd0;

assign data_out_TKEEP = 8'd0;

assign data_out_TLAST = 1'd0;

assign data_out_TSTRB = 8'd0;

assign data_out_TUSER = 1'd0;

assign fft_out_imag_V_fu_364_p5 = {{p_Val2_1_fu_100[31:20]}, {read_Tout1_in_i_V_fu_344_p3}};

assign fft_out_real_V_fu_352_p5 = {{p_Val2_s_fu_96[31:20]}, {read_Tout1_in_r_V_fu_332_p3}};

assign icmp_ln176_fu_205_p2 = ((indvar_flatten34_fu_112 == zext_ln161) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_222_p2 = ((indvar_flatten18_fu_108 == 9'd128) ? 1'b1 : 1'b0);

assign icmp_ln178_fu_234_p2 = ((i_fu_104 == 2'd2) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op53 = (p_outData_V_M_real_V_0_empty_n & p_outData_V_M_imag_V_0_empty_n);

assign io_acc_block_signal_op57 = (p_outData_V_M_real_V_1_empty_n & p_outData_V_M_imag_V_1_empty_n);

assign or_ln118_fu_246_p2 = (icmp_ln177_fu_222_p2 | and_ln118_fu_240_p2);

assign read_Tout1_in_i_V_fu_344_p3 = {{trunc_ln740_1_fu_340_p1}, {1'd0}};

assign read_Tout1_in_r_V_fu_332_p3 = {{trunc_ln740_fu_328_p1}, {1'd0}};

assign select_ln118_fu_252_p3 = ((or_ln118_fu_246_p2[0:0] == 1'b1) ? 2'd0 : i_fu_104);

assign select_ln177_fu_279_p3 = ((icmp_ln177_fu_222_p2[0:0] == 1'b1) ? 9'd1 : add_ln177_fu_273_p2);

assign trunc_ln145_fu_260_p1 = select_ln118_fu_252_p3[0:0];

assign trunc_ln740_1_fu_340_p1 = ap_phi_mux_p_15_0_0_0_0_phi_fu_181_p4[18:0];

assign trunc_ln740_fu_328_p1 = ap_phi_mux_p_04_0_0_0_0_phi_fu_172_p4[18:0];

assign xor_ln118_fu_228_p2 = (icmp_ln177_fu_222_p2 ^ 1'd1);

endmodule //fft_top1_fft_top1_Pipeline_VITIS_LOOP_176_6_VITIS_LOOP_177_7_VITIS_LOOP_178_8
