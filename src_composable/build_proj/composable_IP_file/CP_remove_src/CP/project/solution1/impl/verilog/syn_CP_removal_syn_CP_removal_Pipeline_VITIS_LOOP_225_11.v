// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module syn_CP_removal_syn_CP_removal_Pipeline_VITIS_LOOP_225_11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_in_TVALID,
        i_op_assign_1,
        data_in_TDATA,
        data_in_TREADY,
        data_in_TKEEP,
        data_in_TSTRB,
        data_in_TUSER,
        data_in_TLAST,
        data_in_TID,
        data_in_TDEST,
        data_temp_real_V_address0,
        data_temp_real_V_ce0,
        data_temp_real_V_we0,
        data_temp_real_V_d0,
        data_temp_imag_V_address0,
        data_temp_imag_V_ce0,
        data_temp_imag_V_we0,
        data_temp_imag_V_d0
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   data_in_TVALID;
input  [31:0] i_op_assign_1;
input  [63:0] data_in_TDATA;
output   data_in_TREADY;
input  [7:0] data_in_TKEEP;
input  [7:0] data_in_TSTRB;
input  [0:0] data_in_TUSER;
input  [0:0] data_in_TLAST;
input  [0:0] data_in_TID;
input  [0:0] data_in_TDEST;
output  [7:0] data_temp_real_V_address0;
output   data_temp_real_V_ce0;
output   data_temp_real_V_we0;
output  [19:0] data_temp_real_V_d0;
output  [7:0] data_temp_imag_V_address0;
output   data_temp_imag_V_ce0;
output   data_temp_imag_V_we0;
output  [19:0] data_temp_imag_V_d0;

reg ap_idle;
reg data_in_TREADY;
reg data_temp_real_V_ce0;
reg data_temp_real_V_we0;
reg data_temp_imag_V_ce0;
reg data_temp_imag_V_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln225_fu_124_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    data_in_TDATA_blk_n;
wire   [63:0] i_cast29_fu_136_p1;
reg   [7:0] i_fu_58;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_i_2;
wire   [7:0] add_ln225_fu_130_p2;
wire   [31:0] i_cast_fu_120_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
reg    ap_condition_140;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

syn_CP_removal_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_140)) begin
        if ((icmp_ln225_fu_124_p2 == 1'd0)) begin
            i_fu_58 <= add_ln225_fu_130_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_58 <= 8'd0;
        end
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0)))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (icmp_ln225_fu_124_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_2 = 8'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_58;
    end
end

always @ (*) begin
    if (((icmp_ln225_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        data_in_TDATA_blk_n = data_in_TVALID;
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (icmp_ln225_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_in_TREADY = 1'b1;
    end else begin
        data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        data_temp_imag_V_ce0 = 1'b1;
    end else begin
        data_temp_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (icmp_ln225_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_temp_imag_V_we0 = 1'b1;
    end else begin
        data_temp_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        data_temp_real_V_ce0 = 1'b1;
    end else begin
        data_temp_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (icmp_ln225_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_temp_real_V_we0 = 1'b1;
    end else begin
        data_temp_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln225_fu_130_p2 = (ap_sig_allocacmp_i_2 + 8'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0)));
end

always @ (*) begin
    ap_condition_140 = (~((ap_start_int == 1'b0) | ((icmp_ln225_fu_124_p2 == 1'd0) & (data_in_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign data_temp_imag_V_address0 = i_cast29_fu_136_p1;

assign data_temp_imag_V_d0 = data_in_TDATA[19:0];

assign data_temp_real_V_address0 = i_cast29_fu_136_p1;

assign data_temp_real_V_d0 = {{data_in_TDATA[51:32]}};

assign i_cast29_fu_136_p1 = ap_sig_allocacmp_i_2;

assign i_cast_fu_120_p1 = ap_sig_allocacmp_i_2;

assign icmp_ln225_fu_124_p2 = ((i_cast_fu_120_p1 == i_op_assign_1) ? 1'b1 : 1'b0);

endmodule //syn_CP_removal_syn_CP_removal_Pipeline_VITIS_LOOP_225_11
