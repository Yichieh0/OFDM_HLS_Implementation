-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity syn_CP_removal_syn_CP_removal_Pipeline_VITIS_LOOP_105_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    i_op_assign_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    phi_real_temp_V_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    phi_real_temp_V_0_ce0 : OUT STD_LOGIC;
    phi_real_temp_V_0_we0 : OUT STD_LOGIC;
    phi_real_temp_V_0_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    phi_real_temp_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    phi_real_temp_V_1_ce0 : OUT STD_LOGIC;
    phi_real_temp_V_1_we0 : OUT STD_LOGIC;
    phi_real_temp_V_1_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    phi_real_temp_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    phi_real_temp_V_2_ce0 : OUT STD_LOGIC;
    phi_real_temp_V_2_we0 : OUT STD_LOGIC;
    phi_real_temp_V_2_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    phi_real_temp_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    phi_real_temp_V_3_ce0 : OUT STD_LOGIC;
    phi_real_temp_V_3_we0 : OUT STD_LOGIC;
    phi_real_temp_V_3_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    phi_imag_temp_V_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    phi_imag_temp_V_0_ce0 : OUT STD_LOGIC;
    phi_imag_temp_V_0_we0 : OUT STD_LOGIC;
    phi_imag_temp_V_0_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    phi_imag_temp_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    phi_imag_temp_V_1_ce0 : OUT STD_LOGIC;
    phi_imag_temp_V_1_we0 : OUT STD_LOGIC;
    phi_imag_temp_V_1_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    phi_imag_temp_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    phi_imag_temp_V_2_ce0 : OUT STD_LOGIC;
    phi_imag_temp_V_2_we0 : OUT STD_LOGIC;
    phi_imag_temp_V_2_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    phi_imag_temp_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    phi_imag_temp_V_3_ce0 : OUT STD_LOGIC;
    phi_imag_temp_V_3_we0 : OUT STD_LOGIC;
    phi_imag_temp_V_3_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    power_temp_V_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    power_temp_V_0_ce0 : OUT STD_LOGIC;
    power_temp_V_0_we0 : OUT STD_LOGIC;
    power_temp_V_0_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    power_temp_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    power_temp_V_1_ce0 : OUT STD_LOGIC;
    power_temp_V_1_we0 : OUT STD_LOGIC;
    power_temp_V_1_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    power_temp_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    power_temp_V_2_ce0 : OUT STD_LOGIC;
    power_temp_V_2_we0 : OUT STD_LOGIC;
    power_temp_V_2_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    power_temp_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    power_temp_V_3_ce0 : OUT STD_LOGIC;
    power_temp_V_3_we0 : OUT STD_LOGIC;
    power_temp_V_3_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    power_temp_2_V_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    power_temp_2_V_0_ce0 : OUT STD_LOGIC;
    power_temp_2_V_0_we0 : OUT STD_LOGIC;
    power_temp_2_V_0_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    power_temp_2_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    power_temp_2_V_1_ce0 : OUT STD_LOGIC;
    power_temp_2_V_1_we0 : OUT STD_LOGIC;
    power_temp_2_V_1_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    power_temp_2_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    power_temp_2_V_2_ce0 : OUT STD_LOGIC;
    power_temp_2_V_2_we0 : OUT STD_LOGIC;
    power_temp_2_V_2_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    power_temp_2_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    power_temp_2_V_3_ce0 : OUT STD_LOGIC;
    power_temp_2_V_3_we0 : OUT STD_LOGIC;
    power_temp_2_V_3_d0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
end;


architecture behav of syn_CP_removal_syn_CP_removal_Pipeline_VITIS_LOOP_105_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv28_2 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000010";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv65_19999999A : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000110011001100110011001100110011010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln105_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln106_fu_365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal phi_urem_fu_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_urem_fu_400_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal phi_mul_fu_76 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln106_fu_349_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal i_1_fu_80 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln105_fu_337_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_355_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal next_urem_fu_388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component syn_CP_removal_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component syn_CP_removal_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_1_fu_80 <= ap_const_lv32_0;
                elsif (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_1_fu_80 <= add_ln105_fu_337_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_mul_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    phi_mul_fu_76 <= ap_const_lv65_0;
                elsif (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    phi_mul_fu_76 <= add_ln106_fu_349_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_urem_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    phi_urem_fu_72 <= ap_const_lv32_0;
                elsif (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    phi_urem_fu_72 <= idx_urem_fu_400_p3;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln105_fu_337_p2 <= std_logic_vector(unsigned(i_1_fu_80) + unsigned(ap_const_lv32_1));
    add_ln106_fu_349_p2 <= std_logic_vector(unsigned(phi_mul_fu_76) + unsigned(ap_const_lv65_19999999A));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln105_fu_332_p2)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_394_p2 <= "1" when (unsigned(next_urem_fu_388_p2) < unsigned(ap_const_lv32_14)) else "0";
    icmp_ln105_fu_332_p2 <= "1" when (i_1_fu_80 = i_op_assign_1) else "0";
    idx_urem_fu_400_p3 <= 
        next_urem_fu_388_p2 when (empty_fu_394_p2(0) = '1') else 
        ap_const_lv32_0;
    next_urem_fu_388_p2 <= std_logic_vector(unsigned(phi_urem_fu_72) + unsigned(ap_const_lv32_1));
    phi_imag_temp_V_0_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    phi_imag_temp_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_imag_temp_V_0_ce0 <= ap_const_logic_1;
        else 
            phi_imag_temp_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_imag_temp_V_0_d0 <= ap_const_lv27_0;

    phi_imag_temp_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_imag_temp_V_0_we0 <= ap_const_logic_1;
        else 
            phi_imag_temp_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_imag_temp_V_1_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    phi_imag_temp_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_imag_temp_V_1_ce0 <= ap_const_logic_1;
        else 
            phi_imag_temp_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_imag_temp_V_1_d0 <= ap_const_lv27_0;

    phi_imag_temp_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_imag_temp_V_1_we0 <= ap_const_logic_1;
        else 
            phi_imag_temp_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_imag_temp_V_2_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    phi_imag_temp_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_imag_temp_V_2_ce0 <= ap_const_logic_1;
        else 
            phi_imag_temp_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_imag_temp_V_2_d0 <= ap_const_lv27_0;

    phi_imag_temp_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_imag_temp_V_2_we0 <= ap_const_logic_1;
        else 
            phi_imag_temp_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_imag_temp_V_3_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    phi_imag_temp_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_imag_temp_V_3_ce0 <= ap_const_logic_1;
        else 
            phi_imag_temp_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_imag_temp_V_3_d0 <= ap_const_lv27_0;

    phi_imag_temp_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if ((not((trunc_ln_fu_355_p4 = ap_const_lv28_0)) and not((trunc_ln_fu_355_p4 = ap_const_lv28_1)) and not((trunc_ln_fu_355_p4 = ap_const_lv28_2)) and (icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_imag_temp_V_3_we0 <= ap_const_logic_1;
        else 
            phi_imag_temp_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_real_temp_V_0_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    phi_real_temp_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_real_temp_V_0_ce0 <= ap_const_logic_1;
        else 
            phi_real_temp_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_real_temp_V_0_d0 <= ap_const_lv27_0;

    phi_real_temp_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_real_temp_V_0_we0 <= ap_const_logic_1;
        else 
            phi_real_temp_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_real_temp_V_1_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    phi_real_temp_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_real_temp_V_1_ce0 <= ap_const_logic_1;
        else 
            phi_real_temp_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_real_temp_V_1_d0 <= ap_const_lv27_0;

    phi_real_temp_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_real_temp_V_1_we0 <= ap_const_logic_1;
        else 
            phi_real_temp_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_real_temp_V_2_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    phi_real_temp_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_real_temp_V_2_ce0 <= ap_const_logic_1;
        else 
            phi_real_temp_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_real_temp_V_2_d0 <= ap_const_lv27_0;

    phi_real_temp_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_real_temp_V_2_we0 <= ap_const_logic_1;
        else 
            phi_real_temp_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_real_temp_V_3_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    phi_real_temp_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_real_temp_V_3_ce0 <= ap_const_logic_1;
        else 
            phi_real_temp_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_real_temp_V_3_d0 <= ap_const_lv27_0;

    phi_real_temp_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if ((not((trunc_ln_fu_355_p4 = ap_const_lv28_0)) and not((trunc_ln_fu_355_p4 = ap_const_lv28_1)) and not((trunc_ln_fu_355_p4 = ap_const_lv28_2)) and (icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phi_real_temp_V_3_we0 <= ap_const_logic_1;
        else 
            phi_real_temp_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_2_V_0_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    power_temp_2_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_2_V_0_ce0 <= ap_const_logic_1;
        else 
            power_temp_2_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_2_V_0_d0 <= ap_const_lv27_0;

    power_temp_2_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_2_V_0_we0 <= ap_const_logic_1;
        else 
            power_temp_2_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_2_V_1_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    power_temp_2_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_2_V_1_ce0 <= ap_const_logic_1;
        else 
            power_temp_2_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_2_V_1_d0 <= ap_const_lv27_0;

    power_temp_2_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_2_V_1_we0 <= ap_const_logic_1;
        else 
            power_temp_2_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_2_V_2_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    power_temp_2_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_2_V_2_ce0 <= ap_const_logic_1;
        else 
            power_temp_2_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_2_V_2_d0 <= ap_const_lv27_0;

    power_temp_2_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_2_V_2_we0 <= ap_const_logic_1;
        else 
            power_temp_2_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_2_V_3_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    power_temp_2_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_2_V_3_ce0 <= ap_const_logic_1;
        else 
            power_temp_2_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_2_V_3_d0 <= ap_const_lv27_0;

    power_temp_2_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if ((not((trunc_ln_fu_355_p4 = ap_const_lv28_0)) and not((trunc_ln_fu_355_p4 = ap_const_lv28_1)) and not((trunc_ln_fu_355_p4 = ap_const_lv28_2)) and (icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_2_V_3_we0 <= ap_const_logic_1;
        else 
            power_temp_2_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_V_0_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    power_temp_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_V_0_ce0 <= ap_const_logic_1;
        else 
            power_temp_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_V_0_d0 <= ap_const_lv27_0;

    power_temp_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_V_0_we0 <= ap_const_logic_1;
        else 
            power_temp_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_V_1_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    power_temp_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_V_1_ce0 <= ap_const_logic_1;
        else 
            power_temp_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_V_1_d0 <= ap_const_lv27_0;

    power_temp_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_V_1_we0 <= ap_const_logic_1;
        else 
            power_temp_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_V_2_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    power_temp_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_V_2_ce0 <= ap_const_logic_1;
        else 
            power_temp_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_V_2_d0 <= ap_const_lv27_0;

    power_temp_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if (((icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln_fu_355_p4 = ap_const_lv28_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_V_2_we0 <= ap_const_logic_1;
        else 
            power_temp_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_V_3_address0 <= zext_ln106_fu_365_p1(5 - 1 downto 0);

    power_temp_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_V_3_ce0 <= ap_const_logic_1;
        else 
            power_temp_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    power_temp_V_3_d0 <= ap_const_lv27_0;

    power_temp_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln105_fu_332_p2, ap_block_pp0_stage0_11001, trunc_ln_fu_355_p4)
    begin
        if ((not((trunc_ln_fu_355_p4 = ap_const_lv28_0)) and not((trunc_ln_fu_355_p4 = ap_const_lv28_1)) and not((trunc_ln_fu_355_p4 = ap_const_lv28_2)) and (icmp_ln105_fu_332_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            power_temp_V_3_we0 <= ap_const_logic_1;
        else 
            power_temp_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln_fu_355_p4 <= phi_mul_fu_76(64 downto 37);
    zext_ln106_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_urem_fu_72),64));
end behav;
