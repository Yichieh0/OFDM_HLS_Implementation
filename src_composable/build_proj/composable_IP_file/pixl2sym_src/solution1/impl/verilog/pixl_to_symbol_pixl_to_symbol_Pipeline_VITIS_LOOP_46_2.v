// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pixl_to_symbol_pixl_to_symbol_Pipeline_VITIS_LOOP_46_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_in_TVALID,
        data_out_TREADY,
        shl_ln,
        qam_num_2_reload,
        data_in_TDATA,
        data_in_TREADY,
        data_in_TKEEP,
        data_in_TSTRB,
        data_in_TUSER,
        data_in_TLAST,
        data_in_TID,
        data_in_TDEST,
        conv_i_i188,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TKEEP,
        data_out_TSTRB,
        data_out_TUSER,
        data_out_TLAST,
        data_out_TID,
        data_out_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   data_in_TVALID;
input   data_out_TREADY;
input  [31:0] shl_ln;
input  [31:0] qam_num_2_reload;
input  [63:0] data_in_TDATA;
output   data_in_TREADY;
input  [7:0] data_in_TKEEP;
input  [7:0] data_in_TSTRB;
input  [0:0] data_in_TUSER;
input  [0:0] data_in_TLAST;
input  [0:0] data_in_TID;
input  [0:0] data_in_TDEST;
input  [31:0] conv_i_i188;
output  [63:0] data_out_TDATA;
output   data_out_TVALID;
output  [7:0] data_out_TKEEP;
output  [7:0] data_out_TSTRB;
output  [0:0] data_out_TUSER;
output  [0:0] data_out_TLAST;
output  [0:0] data_out_TID;
output  [0:0] data_out_TDEST;

reg ap_idle;
reg data_in_TREADY;
reg[63:0] data_out_TDATA;
reg data_out_TVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_idle_pp0;
wire   [0:0] icmp_ln46_fu_205_p2;
wire   [1:0] empty_fu_217_p1;
reg    ap_predicate_op105_read_state1;
wire   [0:0] empty_10_fu_221_p1;
reg    ap_predicate_op111_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_state59_pp0_stage0_iter58;
wire    ap_block_state60_pp0_stage0_iter59;
wire    ap_block_state61_pp0_stage0_iter60;
wire    ap_block_state62_pp0_stage0_iter61;
wire    ap_block_state63_pp0_stage0_iter62;
wire    ap_block_state64_pp0_stage0_iter63;
wire    ap_block_state65_pp0_stage0_iter64;
wire    ap_block_state66_pp0_stage0_iter65;
wire    ap_block_state67_pp0_stage0_iter66;
wire    ap_block_state68_pp0_stage0_iter67;
reg   [1:0] empty_reg_287;
reg   [1:0] empty_reg_287_pp0_iter67_reg;
reg    ap_predicate_op523_write_state69;
reg    ap_predicate_op526_write_state69;
reg    ap_predicate_op529_write_state69;
reg    ap_predicate_op534_write_state69;
reg   [0:0] empty_10_reg_291;
reg   [0:0] empty_10_reg_291_pp0_iter67_reg;
reg    ap_predicate_op537_write_state69;
reg    ap_predicate_op542_write_state69;
reg    ap_block_state69_pp0_stage0_iter68;
reg    ap_block_state69_io;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    data_in_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    data_out_TDATA_blk_n;
reg   [63:0] reg_173;
reg    ap_block_pp0_stage0_11001;
wire  signed [63:0] conv_i_i188_cast_fu_189_p1;
reg  signed [63:0] conv_i_i188_cast_reg_276;
reg   [1:0] empty_reg_287_pp0_iter1_reg;
reg   [1:0] empty_reg_287_pp0_iter2_reg;
reg   [1:0] empty_reg_287_pp0_iter3_reg;
reg   [1:0] empty_reg_287_pp0_iter4_reg;
reg   [1:0] empty_reg_287_pp0_iter5_reg;
reg   [1:0] empty_reg_287_pp0_iter6_reg;
reg   [1:0] empty_reg_287_pp0_iter7_reg;
reg   [1:0] empty_reg_287_pp0_iter8_reg;
reg   [1:0] empty_reg_287_pp0_iter9_reg;
reg   [1:0] empty_reg_287_pp0_iter10_reg;
reg   [1:0] empty_reg_287_pp0_iter11_reg;
reg   [1:0] empty_reg_287_pp0_iter12_reg;
reg   [1:0] empty_reg_287_pp0_iter13_reg;
reg   [1:0] empty_reg_287_pp0_iter14_reg;
reg   [1:0] empty_reg_287_pp0_iter15_reg;
reg   [1:0] empty_reg_287_pp0_iter16_reg;
reg   [1:0] empty_reg_287_pp0_iter17_reg;
reg   [1:0] empty_reg_287_pp0_iter18_reg;
reg   [1:0] empty_reg_287_pp0_iter19_reg;
reg   [1:0] empty_reg_287_pp0_iter20_reg;
reg   [1:0] empty_reg_287_pp0_iter21_reg;
reg   [1:0] empty_reg_287_pp0_iter22_reg;
reg   [1:0] empty_reg_287_pp0_iter23_reg;
reg   [1:0] empty_reg_287_pp0_iter24_reg;
reg   [1:0] empty_reg_287_pp0_iter25_reg;
reg   [1:0] empty_reg_287_pp0_iter26_reg;
reg   [1:0] empty_reg_287_pp0_iter27_reg;
reg   [1:0] empty_reg_287_pp0_iter28_reg;
reg   [1:0] empty_reg_287_pp0_iter29_reg;
reg   [1:0] empty_reg_287_pp0_iter30_reg;
reg   [1:0] empty_reg_287_pp0_iter31_reg;
reg   [1:0] empty_reg_287_pp0_iter32_reg;
reg   [1:0] empty_reg_287_pp0_iter33_reg;
reg   [1:0] empty_reg_287_pp0_iter34_reg;
reg   [1:0] empty_reg_287_pp0_iter35_reg;
reg   [1:0] empty_reg_287_pp0_iter36_reg;
reg   [1:0] empty_reg_287_pp0_iter37_reg;
reg   [1:0] empty_reg_287_pp0_iter38_reg;
reg   [1:0] empty_reg_287_pp0_iter39_reg;
reg   [1:0] empty_reg_287_pp0_iter40_reg;
reg   [1:0] empty_reg_287_pp0_iter41_reg;
reg   [1:0] empty_reg_287_pp0_iter42_reg;
reg   [1:0] empty_reg_287_pp0_iter43_reg;
reg   [1:0] empty_reg_287_pp0_iter44_reg;
reg   [1:0] empty_reg_287_pp0_iter45_reg;
reg   [1:0] empty_reg_287_pp0_iter46_reg;
reg   [1:0] empty_reg_287_pp0_iter47_reg;
reg   [1:0] empty_reg_287_pp0_iter48_reg;
reg   [1:0] empty_reg_287_pp0_iter49_reg;
reg   [1:0] empty_reg_287_pp0_iter50_reg;
reg   [1:0] empty_reg_287_pp0_iter51_reg;
reg   [1:0] empty_reg_287_pp0_iter52_reg;
reg   [1:0] empty_reg_287_pp0_iter53_reg;
reg   [1:0] empty_reg_287_pp0_iter54_reg;
reg   [1:0] empty_reg_287_pp0_iter55_reg;
reg   [1:0] empty_reg_287_pp0_iter56_reg;
reg   [1:0] empty_reg_287_pp0_iter57_reg;
reg   [1:0] empty_reg_287_pp0_iter58_reg;
reg   [1:0] empty_reg_287_pp0_iter59_reg;
reg   [1:0] empty_reg_287_pp0_iter60_reg;
reg   [1:0] empty_reg_287_pp0_iter61_reg;
reg   [1:0] empty_reg_287_pp0_iter62_reg;
reg   [1:0] empty_reg_287_pp0_iter63_reg;
reg   [1:0] empty_reg_287_pp0_iter64_reg;
reg   [1:0] empty_reg_287_pp0_iter65_reg;
reg   [1:0] empty_reg_287_pp0_iter66_reg;
reg   [0:0] empty_10_reg_291_pp0_iter1_reg;
reg   [0:0] empty_10_reg_291_pp0_iter2_reg;
reg   [0:0] empty_10_reg_291_pp0_iter3_reg;
reg   [0:0] empty_10_reg_291_pp0_iter4_reg;
reg   [0:0] empty_10_reg_291_pp0_iter5_reg;
reg   [0:0] empty_10_reg_291_pp0_iter6_reg;
reg   [0:0] empty_10_reg_291_pp0_iter7_reg;
reg   [0:0] empty_10_reg_291_pp0_iter8_reg;
reg   [0:0] empty_10_reg_291_pp0_iter9_reg;
reg   [0:0] empty_10_reg_291_pp0_iter10_reg;
reg   [0:0] empty_10_reg_291_pp0_iter11_reg;
reg   [0:0] empty_10_reg_291_pp0_iter12_reg;
reg   [0:0] empty_10_reg_291_pp0_iter13_reg;
reg   [0:0] empty_10_reg_291_pp0_iter14_reg;
reg   [0:0] empty_10_reg_291_pp0_iter15_reg;
reg   [0:0] empty_10_reg_291_pp0_iter16_reg;
reg   [0:0] empty_10_reg_291_pp0_iter17_reg;
reg   [0:0] empty_10_reg_291_pp0_iter18_reg;
reg   [0:0] empty_10_reg_291_pp0_iter19_reg;
reg   [0:0] empty_10_reg_291_pp0_iter20_reg;
reg   [0:0] empty_10_reg_291_pp0_iter21_reg;
reg   [0:0] empty_10_reg_291_pp0_iter22_reg;
reg   [0:0] empty_10_reg_291_pp0_iter23_reg;
reg   [0:0] empty_10_reg_291_pp0_iter24_reg;
reg   [0:0] empty_10_reg_291_pp0_iter25_reg;
reg   [0:0] empty_10_reg_291_pp0_iter26_reg;
reg   [0:0] empty_10_reg_291_pp0_iter27_reg;
reg   [0:0] empty_10_reg_291_pp0_iter28_reg;
reg   [0:0] empty_10_reg_291_pp0_iter29_reg;
reg   [0:0] empty_10_reg_291_pp0_iter30_reg;
reg   [0:0] empty_10_reg_291_pp0_iter31_reg;
reg   [0:0] empty_10_reg_291_pp0_iter32_reg;
reg   [0:0] empty_10_reg_291_pp0_iter33_reg;
reg   [0:0] empty_10_reg_291_pp0_iter34_reg;
reg   [0:0] empty_10_reg_291_pp0_iter35_reg;
reg   [0:0] empty_10_reg_291_pp0_iter36_reg;
reg   [0:0] empty_10_reg_291_pp0_iter37_reg;
reg   [0:0] empty_10_reg_291_pp0_iter38_reg;
reg   [0:0] empty_10_reg_291_pp0_iter39_reg;
reg   [0:0] empty_10_reg_291_pp0_iter40_reg;
reg   [0:0] empty_10_reg_291_pp0_iter41_reg;
reg   [0:0] empty_10_reg_291_pp0_iter42_reg;
reg   [0:0] empty_10_reg_291_pp0_iter43_reg;
reg   [0:0] empty_10_reg_291_pp0_iter44_reg;
reg   [0:0] empty_10_reg_291_pp0_iter45_reg;
reg   [0:0] empty_10_reg_291_pp0_iter46_reg;
reg   [0:0] empty_10_reg_291_pp0_iter47_reg;
reg   [0:0] empty_10_reg_291_pp0_iter48_reg;
reg   [0:0] empty_10_reg_291_pp0_iter49_reg;
reg   [0:0] empty_10_reg_291_pp0_iter50_reg;
reg   [0:0] empty_10_reg_291_pp0_iter51_reg;
reg   [0:0] empty_10_reg_291_pp0_iter52_reg;
reg   [0:0] empty_10_reg_291_pp0_iter53_reg;
reg   [0:0] empty_10_reg_291_pp0_iter54_reg;
reg   [0:0] empty_10_reg_291_pp0_iter55_reg;
reg   [0:0] empty_10_reg_291_pp0_iter56_reg;
reg   [0:0] empty_10_reg_291_pp0_iter57_reg;
reg   [0:0] empty_10_reg_291_pp0_iter58_reg;
reg   [0:0] empty_10_reg_291_pp0_iter59_reg;
reg   [0:0] empty_10_reg_291_pp0_iter60_reg;
reg   [0:0] empty_10_reg_291_pp0_iter61_reg;
reg   [0:0] empty_10_reg_291_pp0_iter62_reg;
reg   [0:0] empty_10_reg_291_pp0_iter63_reg;
reg   [0:0] empty_10_reg_291_pp0_iter64_reg;
reg   [0:0] empty_10_reg_291_pp0_iter65_reg;
reg   [0:0] empty_10_reg_291_pp0_iter66_reg;
reg   [30:0] i_fu_80;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_i_1;
wire   [30:0] i_2_fu_211_p2;
reg   [63:0] data_in_temp_V_fu_84;
wire   [63:0] grp_fu_162_p2;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] grp_fu_183_p2;
wire   [63:0] zext_ln217_1_fu_244_p1;
wire   [63:0] zext_ln217_fu_253_p1;
wire   [31:0] i_cast2_fu_201_p1;
wire   [31:0] grp_fu_168_p2;
wire   [31:0] ret_1_fu_240_p1;
wire   [31:0] ret_fu_249_p1;
reg    grp_fu_162_ce;
reg    grp_fu_168_ce;
reg    grp_fu_183_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_done_reg = 1'b0;
end

pixl_to_symbol_udiv_64ns_64s_64_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
udiv_64ns_64s_64_68_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_in_temp_V_fu_84),
    .din1(conv_i_i188_cast_reg_276),
    .ce(grp_fu_162_ce),
    .dout(grp_fu_162_p2)
);

pixl_to_symbol_urem_64ns_64s_32_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
urem_64ns_64s_32_68_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_in_temp_V_fu_84),
    .din1(conv_i_i188_cast_reg_276),
    .ce(grp_fu_168_ce),
    .dout(grp_fu_168_p2)
);

pixl_to_symbol_udiv_64ns_64s_64_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
udiv_64ns_64s_64_68_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_173),
    .din1(conv_i_i188_cast_reg_276),
    .ce(grp_fu_183_ce),
    .dout(grp_fu_183_p2)
);

pixl_to_symbol_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter67_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln46_fu_205_p2 == 1'd1) & (ap_start_int == 1'b1))) begin
            i_fu_80 <= i_2_fu_211_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 31'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_10_reg_291_pp0_iter10_reg <= empty_10_reg_291_pp0_iter9_reg;
        empty_10_reg_291_pp0_iter11_reg <= empty_10_reg_291_pp0_iter10_reg;
        empty_10_reg_291_pp0_iter12_reg <= empty_10_reg_291_pp0_iter11_reg;
        empty_10_reg_291_pp0_iter13_reg <= empty_10_reg_291_pp0_iter12_reg;
        empty_10_reg_291_pp0_iter14_reg <= empty_10_reg_291_pp0_iter13_reg;
        empty_10_reg_291_pp0_iter15_reg <= empty_10_reg_291_pp0_iter14_reg;
        empty_10_reg_291_pp0_iter16_reg <= empty_10_reg_291_pp0_iter15_reg;
        empty_10_reg_291_pp0_iter17_reg <= empty_10_reg_291_pp0_iter16_reg;
        empty_10_reg_291_pp0_iter18_reg <= empty_10_reg_291_pp0_iter17_reg;
        empty_10_reg_291_pp0_iter19_reg <= empty_10_reg_291_pp0_iter18_reg;
        empty_10_reg_291_pp0_iter20_reg <= empty_10_reg_291_pp0_iter19_reg;
        empty_10_reg_291_pp0_iter21_reg <= empty_10_reg_291_pp0_iter20_reg;
        empty_10_reg_291_pp0_iter22_reg <= empty_10_reg_291_pp0_iter21_reg;
        empty_10_reg_291_pp0_iter23_reg <= empty_10_reg_291_pp0_iter22_reg;
        empty_10_reg_291_pp0_iter24_reg <= empty_10_reg_291_pp0_iter23_reg;
        empty_10_reg_291_pp0_iter25_reg <= empty_10_reg_291_pp0_iter24_reg;
        empty_10_reg_291_pp0_iter26_reg <= empty_10_reg_291_pp0_iter25_reg;
        empty_10_reg_291_pp0_iter27_reg <= empty_10_reg_291_pp0_iter26_reg;
        empty_10_reg_291_pp0_iter28_reg <= empty_10_reg_291_pp0_iter27_reg;
        empty_10_reg_291_pp0_iter29_reg <= empty_10_reg_291_pp0_iter28_reg;
        empty_10_reg_291_pp0_iter2_reg <= empty_10_reg_291_pp0_iter1_reg;
        empty_10_reg_291_pp0_iter30_reg <= empty_10_reg_291_pp0_iter29_reg;
        empty_10_reg_291_pp0_iter31_reg <= empty_10_reg_291_pp0_iter30_reg;
        empty_10_reg_291_pp0_iter32_reg <= empty_10_reg_291_pp0_iter31_reg;
        empty_10_reg_291_pp0_iter33_reg <= empty_10_reg_291_pp0_iter32_reg;
        empty_10_reg_291_pp0_iter34_reg <= empty_10_reg_291_pp0_iter33_reg;
        empty_10_reg_291_pp0_iter35_reg <= empty_10_reg_291_pp0_iter34_reg;
        empty_10_reg_291_pp0_iter36_reg <= empty_10_reg_291_pp0_iter35_reg;
        empty_10_reg_291_pp0_iter37_reg <= empty_10_reg_291_pp0_iter36_reg;
        empty_10_reg_291_pp0_iter38_reg <= empty_10_reg_291_pp0_iter37_reg;
        empty_10_reg_291_pp0_iter39_reg <= empty_10_reg_291_pp0_iter38_reg;
        empty_10_reg_291_pp0_iter3_reg <= empty_10_reg_291_pp0_iter2_reg;
        empty_10_reg_291_pp0_iter40_reg <= empty_10_reg_291_pp0_iter39_reg;
        empty_10_reg_291_pp0_iter41_reg <= empty_10_reg_291_pp0_iter40_reg;
        empty_10_reg_291_pp0_iter42_reg <= empty_10_reg_291_pp0_iter41_reg;
        empty_10_reg_291_pp0_iter43_reg <= empty_10_reg_291_pp0_iter42_reg;
        empty_10_reg_291_pp0_iter44_reg <= empty_10_reg_291_pp0_iter43_reg;
        empty_10_reg_291_pp0_iter45_reg <= empty_10_reg_291_pp0_iter44_reg;
        empty_10_reg_291_pp0_iter46_reg <= empty_10_reg_291_pp0_iter45_reg;
        empty_10_reg_291_pp0_iter47_reg <= empty_10_reg_291_pp0_iter46_reg;
        empty_10_reg_291_pp0_iter48_reg <= empty_10_reg_291_pp0_iter47_reg;
        empty_10_reg_291_pp0_iter49_reg <= empty_10_reg_291_pp0_iter48_reg;
        empty_10_reg_291_pp0_iter4_reg <= empty_10_reg_291_pp0_iter3_reg;
        empty_10_reg_291_pp0_iter50_reg <= empty_10_reg_291_pp0_iter49_reg;
        empty_10_reg_291_pp0_iter51_reg <= empty_10_reg_291_pp0_iter50_reg;
        empty_10_reg_291_pp0_iter52_reg <= empty_10_reg_291_pp0_iter51_reg;
        empty_10_reg_291_pp0_iter53_reg <= empty_10_reg_291_pp0_iter52_reg;
        empty_10_reg_291_pp0_iter54_reg <= empty_10_reg_291_pp0_iter53_reg;
        empty_10_reg_291_pp0_iter55_reg <= empty_10_reg_291_pp0_iter54_reg;
        empty_10_reg_291_pp0_iter56_reg <= empty_10_reg_291_pp0_iter55_reg;
        empty_10_reg_291_pp0_iter57_reg <= empty_10_reg_291_pp0_iter56_reg;
        empty_10_reg_291_pp0_iter58_reg <= empty_10_reg_291_pp0_iter57_reg;
        empty_10_reg_291_pp0_iter59_reg <= empty_10_reg_291_pp0_iter58_reg;
        empty_10_reg_291_pp0_iter5_reg <= empty_10_reg_291_pp0_iter4_reg;
        empty_10_reg_291_pp0_iter60_reg <= empty_10_reg_291_pp0_iter59_reg;
        empty_10_reg_291_pp0_iter61_reg <= empty_10_reg_291_pp0_iter60_reg;
        empty_10_reg_291_pp0_iter62_reg <= empty_10_reg_291_pp0_iter61_reg;
        empty_10_reg_291_pp0_iter63_reg <= empty_10_reg_291_pp0_iter62_reg;
        empty_10_reg_291_pp0_iter64_reg <= empty_10_reg_291_pp0_iter63_reg;
        empty_10_reg_291_pp0_iter65_reg <= empty_10_reg_291_pp0_iter64_reg;
        empty_10_reg_291_pp0_iter66_reg <= empty_10_reg_291_pp0_iter65_reg;
        empty_10_reg_291_pp0_iter67_reg <= empty_10_reg_291_pp0_iter66_reg;
        empty_10_reg_291_pp0_iter6_reg <= empty_10_reg_291_pp0_iter5_reg;
        empty_10_reg_291_pp0_iter7_reg <= empty_10_reg_291_pp0_iter6_reg;
        empty_10_reg_291_pp0_iter8_reg <= empty_10_reg_291_pp0_iter7_reg;
        empty_10_reg_291_pp0_iter9_reg <= empty_10_reg_291_pp0_iter8_reg;
        empty_reg_287_pp0_iter10_reg <= empty_reg_287_pp0_iter9_reg;
        empty_reg_287_pp0_iter11_reg <= empty_reg_287_pp0_iter10_reg;
        empty_reg_287_pp0_iter12_reg <= empty_reg_287_pp0_iter11_reg;
        empty_reg_287_pp0_iter13_reg <= empty_reg_287_pp0_iter12_reg;
        empty_reg_287_pp0_iter14_reg <= empty_reg_287_pp0_iter13_reg;
        empty_reg_287_pp0_iter15_reg <= empty_reg_287_pp0_iter14_reg;
        empty_reg_287_pp0_iter16_reg <= empty_reg_287_pp0_iter15_reg;
        empty_reg_287_pp0_iter17_reg <= empty_reg_287_pp0_iter16_reg;
        empty_reg_287_pp0_iter18_reg <= empty_reg_287_pp0_iter17_reg;
        empty_reg_287_pp0_iter19_reg <= empty_reg_287_pp0_iter18_reg;
        empty_reg_287_pp0_iter20_reg <= empty_reg_287_pp0_iter19_reg;
        empty_reg_287_pp0_iter21_reg <= empty_reg_287_pp0_iter20_reg;
        empty_reg_287_pp0_iter22_reg <= empty_reg_287_pp0_iter21_reg;
        empty_reg_287_pp0_iter23_reg <= empty_reg_287_pp0_iter22_reg;
        empty_reg_287_pp0_iter24_reg <= empty_reg_287_pp0_iter23_reg;
        empty_reg_287_pp0_iter25_reg <= empty_reg_287_pp0_iter24_reg;
        empty_reg_287_pp0_iter26_reg <= empty_reg_287_pp0_iter25_reg;
        empty_reg_287_pp0_iter27_reg <= empty_reg_287_pp0_iter26_reg;
        empty_reg_287_pp0_iter28_reg <= empty_reg_287_pp0_iter27_reg;
        empty_reg_287_pp0_iter29_reg <= empty_reg_287_pp0_iter28_reg;
        empty_reg_287_pp0_iter2_reg <= empty_reg_287_pp0_iter1_reg;
        empty_reg_287_pp0_iter30_reg <= empty_reg_287_pp0_iter29_reg;
        empty_reg_287_pp0_iter31_reg <= empty_reg_287_pp0_iter30_reg;
        empty_reg_287_pp0_iter32_reg <= empty_reg_287_pp0_iter31_reg;
        empty_reg_287_pp0_iter33_reg <= empty_reg_287_pp0_iter32_reg;
        empty_reg_287_pp0_iter34_reg <= empty_reg_287_pp0_iter33_reg;
        empty_reg_287_pp0_iter35_reg <= empty_reg_287_pp0_iter34_reg;
        empty_reg_287_pp0_iter36_reg <= empty_reg_287_pp0_iter35_reg;
        empty_reg_287_pp0_iter37_reg <= empty_reg_287_pp0_iter36_reg;
        empty_reg_287_pp0_iter38_reg <= empty_reg_287_pp0_iter37_reg;
        empty_reg_287_pp0_iter39_reg <= empty_reg_287_pp0_iter38_reg;
        empty_reg_287_pp0_iter3_reg <= empty_reg_287_pp0_iter2_reg;
        empty_reg_287_pp0_iter40_reg <= empty_reg_287_pp0_iter39_reg;
        empty_reg_287_pp0_iter41_reg <= empty_reg_287_pp0_iter40_reg;
        empty_reg_287_pp0_iter42_reg <= empty_reg_287_pp0_iter41_reg;
        empty_reg_287_pp0_iter43_reg <= empty_reg_287_pp0_iter42_reg;
        empty_reg_287_pp0_iter44_reg <= empty_reg_287_pp0_iter43_reg;
        empty_reg_287_pp0_iter45_reg <= empty_reg_287_pp0_iter44_reg;
        empty_reg_287_pp0_iter46_reg <= empty_reg_287_pp0_iter45_reg;
        empty_reg_287_pp0_iter47_reg <= empty_reg_287_pp0_iter46_reg;
        empty_reg_287_pp0_iter48_reg <= empty_reg_287_pp0_iter47_reg;
        empty_reg_287_pp0_iter49_reg <= empty_reg_287_pp0_iter48_reg;
        empty_reg_287_pp0_iter4_reg <= empty_reg_287_pp0_iter3_reg;
        empty_reg_287_pp0_iter50_reg <= empty_reg_287_pp0_iter49_reg;
        empty_reg_287_pp0_iter51_reg <= empty_reg_287_pp0_iter50_reg;
        empty_reg_287_pp0_iter52_reg <= empty_reg_287_pp0_iter51_reg;
        empty_reg_287_pp0_iter53_reg <= empty_reg_287_pp0_iter52_reg;
        empty_reg_287_pp0_iter54_reg <= empty_reg_287_pp0_iter53_reg;
        empty_reg_287_pp0_iter55_reg <= empty_reg_287_pp0_iter54_reg;
        empty_reg_287_pp0_iter56_reg <= empty_reg_287_pp0_iter55_reg;
        empty_reg_287_pp0_iter57_reg <= empty_reg_287_pp0_iter56_reg;
        empty_reg_287_pp0_iter58_reg <= empty_reg_287_pp0_iter57_reg;
        empty_reg_287_pp0_iter59_reg <= empty_reg_287_pp0_iter58_reg;
        empty_reg_287_pp0_iter5_reg <= empty_reg_287_pp0_iter4_reg;
        empty_reg_287_pp0_iter60_reg <= empty_reg_287_pp0_iter59_reg;
        empty_reg_287_pp0_iter61_reg <= empty_reg_287_pp0_iter60_reg;
        empty_reg_287_pp0_iter62_reg <= empty_reg_287_pp0_iter61_reg;
        empty_reg_287_pp0_iter63_reg <= empty_reg_287_pp0_iter62_reg;
        empty_reg_287_pp0_iter64_reg <= empty_reg_287_pp0_iter63_reg;
        empty_reg_287_pp0_iter65_reg <= empty_reg_287_pp0_iter64_reg;
        empty_reg_287_pp0_iter66_reg <= empty_reg_287_pp0_iter65_reg;
        empty_reg_287_pp0_iter67_reg <= empty_reg_287_pp0_iter66_reg;
        empty_reg_287_pp0_iter6_reg <= empty_reg_287_pp0_iter5_reg;
        empty_reg_287_pp0_iter7_reg <= empty_reg_287_pp0_iter6_reg;
        empty_reg_287_pp0_iter8_reg <= empty_reg_287_pp0_iter7_reg;
        empty_reg_287_pp0_iter9_reg <= empty_reg_287_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv_i_i188_cast_reg_276 <= conv_i_i188_cast_fu_189_p1;
        empty_10_reg_291_pp0_iter1_reg <= empty_10_reg_291;
        empty_reg_287_pp0_iter1_reg <= empty_reg_287;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (empty_10_fu_221_p1 == 1'd0) & (qam_num_2_reload == 32'd16) & (icmp_ln46_fu_205_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (empty_fu_217_p1 == 2'd0) & (qam_num_2_reload == 32'd4) & (icmp_ln46_fu_205_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_in_temp_V_fu_84 <= data_in_TDATA;
        reg_173 <= data_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_fu_205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_10_reg_291 <= empty_10_fu_221_p1;
        empty_reg_287 <= empty_fu_217_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln46_fu_205_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter67_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 31'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_80;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op111_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op105_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_in_TDATA_blk_n = data_in_TVALID;
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op111_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op105_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_in_TREADY = 1'b1;
    end else begin
        data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op542_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        data_out_TDATA = zext_ln217_fu_253_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op534_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        data_out_TDATA = zext_ln217_1_fu_244_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op537_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op529_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)))) begin
        data_out_TDATA = grp_fu_183_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op526_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op523_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)))) begin
        data_out_TDATA = grp_fu_162_p2;
    end else begin
        data_out_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op542_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op537_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op534_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op529_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op526_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op523_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)))) begin
        data_out_TDATA_blk_n = data_out_TREADY;
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op542_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op537_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op534_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op529_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op526_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op523_write_state69 == 1'b1) & (ap_enable_reg_pp0_iter68 == 1'b1)))) begin
        data_out_TVALID = 1'b1;
    end else begin
        data_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_162_ce = 1'b1;
    end else begin
        grp_fu_162_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_168_ce = 1'b1;
    end else begin
        grp_fu_168_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_183_ce = 1'b1;
    end else begin
        grp_fu_183_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter68 == 1'b1) & (((ap_predicate_op542_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op537_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op534_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op529_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op526_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op523_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)))) | ((ap_start_int == 1'b1) & (((ap_predicate_op111_read_state1 == 1'b1) & (data_in_TVALID == 1'b0)) | ((ap_predicate_op105_read_state1 == 1'b1) & (data_in_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter68 == 1'b1) & ((1'b1 == ap_block_state69_io) | ((ap_predicate_op542_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op537_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op534_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op529_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op526_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op523_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)))) | ((ap_start_int == 1'b1) & (((ap_predicate_op111_read_state1 == 1'b1) & (data_in_TVALID == 1'b0)) | ((ap_predicate_op105_read_state1 == 1'b1) & (data_in_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter68 == 1'b1) & ((1'b1 == ap_block_state69_io) | ((ap_predicate_op542_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op537_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op534_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op529_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op526_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op523_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)))) | ((ap_start_int == 1'b1) & (((ap_predicate_op111_read_state1 == 1'b1) & (data_in_TVALID == 1'b0)) | ((ap_predicate_op105_read_state1 == 1'b1) & (data_in_TVALID == 1'b0)))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((ap_predicate_op111_read_state1 == 1'b1) & (data_in_TVALID == 1'b0)) | ((ap_predicate_op105_read_state1 == 1'b1) & (data_in_TVALID == 1'b0)));
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state69_io = (((ap_predicate_op542_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op537_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op534_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op529_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op526_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op523_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state69_pp0_stage0_iter68 = (((ap_predicate_op542_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op537_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op534_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op529_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op526_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)) | ((ap_predicate_op523_write_state69 == 1'b1) & (data_out_TREADY == 1'b0)));
end

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op105_read_state1 = ((empty_fu_217_p1 == 2'd0) & (qam_num_2_reload == 32'd4) & (icmp_ln46_fu_205_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op111_read_state1 = ((empty_10_fu_221_p1 == 1'd0) & (qam_num_2_reload == 32'd16) & (icmp_ln46_fu_205_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op523_write_state69 = ((empty_reg_287_pp0_iter67_reg == 2'd2) & (qam_num_2_reload == 32'd4));
end

always @ (*) begin
    ap_predicate_op526_write_state69 = ((empty_reg_287_pp0_iter67_reg == 2'd1) & (qam_num_2_reload == 32'd4));
end

always @ (*) begin
    ap_predicate_op529_write_state69 = ((empty_reg_287_pp0_iter67_reg == 2'd0) & (qam_num_2_reload == 32'd4));
end

always @ (*) begin
    ap_predicate_op534_write_state69 = ((empty_reg_287_pp0_iter67_reg == 2'd3) & (qam_num_2_reload == 32'd4));
end

always @ (*) begin
    ap_predicate_op537_write_state69 = ((empty_10_reg_291_pp0_iter67_reg == 1'd0) & (qam_num_2_reload == 32'd16));
end

always @ (*) begin
    ap_predicate_op542_write_state69 = ((empty_10_reg_291_pp0_iter67_reg == 1'd1) & (qam_num_2_reload == 32'd16));
end

assign conv_i_i188_cast_fu_189_p1 = $signed(conv_i_i188);

assign data_out_TDEST = 1'd0;

assign data_out_TID = 1'd0;

assign data_out_TKEEP = 8'd0;

assign data_out_TLAST = 1'd0;

assign data_out_TSTRB = 8'd0;

assign data_out_TUSER = 1'd0;

assign empty_10_fu_221_p1 = ap_sig_allocacmp_i_1[0:0];

assign empty_fu_217_p1 = ap_sig_allocacmp_i_1[1:0];

assign i_2_fu_211_p2 = (ap_sig_allocacmp_i_1 + 31'd1);

assign i_cast2_fu_201_p1 = ap_sig_allocacmp_i_1;

assign icmp_ln46_fu_205_p2 = (($signed(i_cast2_fu_201_p1) < $signed(shl_ln)) ? 1'b1 : 1'b0);

assign ret_1_fu_240_p1 = grp_fu_168_p2[31:0];

assign ret_fu_249_p1 = grp_fu_168_p2[31:0];

assign zext_ln217_1_fu_244_p1 = ret_1_fu_240_p1;

assign zext_ln217_fu_253_p1 = ret_fu_249_p1;

endmodule //pixl_to_symbol_pixl_to_symbol_Pipeline_VITIS_LOOP_46_2
