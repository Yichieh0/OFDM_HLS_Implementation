// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pilot_insertion_pilot_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_in_TVALID,
        data_out_TREADY,
        bound,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TKEEP,
        data_out_TSTRB,
        data_out_TUSER,
        data_out_TLAST,
        data_out_TID,
        data_out_TDEST,
        pilot_width_3_reload,
        data_in_TDATA,
        data_in_TREADY,
        data_in_TKEEP,
        data_in_TSTRB,
        data_in_TUSER,
        data_in_TLAST,
        data_in_TID,
        data_in_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   data_in_TVALID;
input   data_out_TREADY;
input  [37:0] bound;
output  [63:0] data_out_TDATA;
output   data_out_TVALID;
output  [7:0] data_out_TKEEP;
output  [7:0] data_out_TSTRB;
output  [0:0] data_out_TUSER;
output  [0:0] data_out_TLAST;
output  [0:0] data_out_TID;
output  [0:0] data_out_TDEST;
input  [31:0] pilot_width_3_reload;
input  [63:0] data_in_TDATA;
output   data_in_TREADY;
input  [7:0] data_in_TKEEP;
input  [7:0] data_in_TSTRB;
input  [0:0] data_in_TUSER;
input  [0:0] data_in_TLAST;
input  [0:0] data_in_TID;
input  [0:0] data_in_TDEST;

reg ap_idle;
reg[63:0] data_out_TDATA;
reg data_out_TVALID;
reg data_in_TREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
reg   [0:0] icmp_ln57_reg_628;
reg    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln55_fu_232_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    data_out_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    data_in_TDATA_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln57_fu_289_p2;
reg   [6:0] t_fu_114;
wire   [6:0] t_3_fu_269_p2;
wire    ap_loop_init;
reg   [37:0] indvar_flatten_fu_118;
wire   [37:0] add_ln55_fu_237_p2;
reg   [31:0] p_Val2_2_fu_122;
wire   [31:0] p_Result_4_fu_487_p5;
reg   [31:0] p_Val2_3_fu_126;
wire   [31:0] p_Result_3_fu_475_p5;
reg   [31:0] p_Val2_s_fu_130;
wire   [31:0] p_Result_s_fu_524_p5;
reg   [31:0] p_Val2_1_fu_134;
wire   [31:0] p_Result_1_fu_536_p5;
wire   [63:0] p_Result_5_fu_499_p3;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] p_Result_2_fu_548_p3;
wire   [0:0] icmp_ln56_fu_246_p2;
wire   [6:0] select_ln10_fu_252_p3;
wire   [7:0] grp_fu_264_p0;
wire   [7:0] grp_fu_264_p2;
wire   [7:0] trunc_ln57_fu_285_p1;
wire   [21:0] tmp_s_fu_305_p4;
wire  signed [36:0] t_1_fu_315_p3;
wire   [38:0] mul_ln1201_fu_327_p1;
wire   [74:0] mul_ln1201_fu_327_p2;
wire   [74:0] sub_ln1201_fu_333_p2;
wire   [0:0] tmp_2_fu_339_p3;
wire   [20:0] tmp_3_fu_347_p4;
wire   [20:0] tmp_4_fu_357_p4;
wire   [20:0] select_ln1201_fu_367_p3;
wire  signed [21:0] sext_ln1201_1_fu_375_p1;
wire   [21:0] sub_ln1201_1_fu_379_p2;
wire   [21:0] trunc_ln737_fu_393_p1;
wire  signed [36:0] t_2_fu_397_p3;
wire   [38:0] mul_ln1201_1_fu_409_p1;
wire   [74:0] mul_ln1201_1_fu_409_p2;
wire   [74:0] sub_ln1201_2_fu_415_p2;
wire   [0:0] tmp_5_fu_421_p3;
wire   [20:0] tmp_6_fu_429_p4;
wire   [20:0] tmp_7_fu_439_p4;
wire   [20:0] select_ln1201_2_fu_449_p3;
wire  signed [21:0] sext_ln1201_3_fu_457_p1;
wire   [21:0] sub_ln1201_3_fu_461_p2;
wire   [21:0] select_ln1201_1_fu_385_p3;
wire   [21:0] select_ln1201_3_fu_467_p3;
reg    grp_fu_264_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [31:0] grp_fu_264_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_done_reg = 1'b0;
end

pilot_insertion_srem_8ns_32ns_8_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
srem_8ns_32ns_8_12_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_264_p0),
    .din1(pilot_width_3_reload),
    .ce(grp_fu_264_ce),
    .dout(grp_fu_264_p2)
);

pilot_insertion_mul_37s_39ns_75_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 39 ),
    .dout_WIDTH( 75 ))
mul_37s_39ns_75_1_1_U19(
    .din0(t_1_fu_315_p3),
    .din1(mul_ln1201_fu_327_p1),
    .dout(mul_ln1201_fu_327_p2)
);

pilot_insertion_mul_37s_39ns_75_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 39 ),
    .dout_WIDTH( 75 ))
mul_37s_39ns_75_1_1_U20(
    .din0(t_2_fu_397_p3),
    .din1(mul_ln1201_1_fu_409_p1),
    .dout(mul_ln1201_1_fu_409_p2)
);

pilot_insertion_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_118 <= 38'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln55_fu_232_p2 == 1'd0))) begin
            indvar_flatten_fu_118 <= add_ln55_fu_237_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_1_fu_134 <= 32'd0;
        end else if (((icmp_ln57_reg_628 == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
            p_Val2_1_fu_134 <= p_Result_1_fu_536_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_2_fu_122 <= 32'd0;
        end else if (((icmp_ln57_reg_628 == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
            p_Val2_2_fu_122 <= p_Result_4_fu_487_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_3_fu_126 <= 32'd0;
        end else if (((icmp_ln57_reg_628 == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
            p_Val2_3_fu_126 <= p_Result_3_fu_475_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_s_fu_130 <= 32'd0;
        end else if (((icmp_ln57_reg_628 == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
            p_Val2_s_fu_130 <= p_Result_s_fu_524_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            t_fu_114 <= 7'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln55_fu_232_p2 == 1'd0))) begin
            t_fu_114 <= t_3_fu_269_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln57_reg_628 <= icmp_ln57_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln55_fu_232_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln57_reg_628 == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        data_in_TDATA_blk_n = data_in_TVALID;
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln57_reg_628 == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_in_TREADY = 1'b1;
    end else begin
        data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((icmp_ln57_reg_628 == 1'd1)) begin
            data_out_TDATA = p_Result_2_fu_548_p3;
        end else if ((icmp_ln57_reg_628 == 1'd0)) begin
            data_out_TDATA = p_Result_5_fu_499_p3;
        end else begin
            data_out_TDATA = 'bx;
        end
    end else begin
        data_out_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln57_reg_628 == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln57_reg_628 == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        data_out_TDATA_blk_n = data_out_TREADY;
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln57_reg_628 == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln57_reg_628 == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        data_out_TVALID = 1'b1;
    end else begin
        data_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_264_ce = 1'b1;
    end else begin
        grp_fu_264_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_fu_237_p2 = (indvar_flatten_fu_118 + 38'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd1)) | ((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd0)) | ((icmp_ln57_reg_628 == 1'd0) & (data_in_TVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter13 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd1)) | ((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd0)) | ((icmp_ln57_reg_628 == 1'd0) & (data_in_TVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter13 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd1)) | ((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd0)) | ((icmp_ln57_reg_628 == 1'd0) & (data_in_TVALID == 1'b0))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = (((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd1)) | ((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd0)));
end

always @ (*) begin
    ap_block_state14_pp0_stage0_iter13 = (((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd1)) | ((data_out_TREADY == 1'b0) & (icmp_ln57_reg_628 == 1'd0)) | ((icmp_ln57_reg_628 == 1'd0) & (data_in_TVALID == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign data_out_TDEST = 1'd0;

assign data_out_TID = 1'd0;

assign data_out_TKEEP = 8'd0;

assign data_out_TLAST = 1'd0;

assign data_out_TSTRB = 8'd0;

assign data_out_TUSER = 1'd0;

assign grp_fu_264_p0 = grp_fu_264_p00;

assign grp_fu_264_p00 = select_ln10_fu_252_p3;

assign icmp_ln55_fu_232_p2 = ((indvar_flatten_fu_118 == bound) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_246_p2 = ((t_fu_114 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_289_p2 = ((trunc_ln57_fu_285_p1 == 8'd0) ? 1'b1 : 1'b0);

assign mul_ln1201_1_fu_409_p1 = 75'd173848915852;

assign mul_ln1201_fu_327_p1 = 75'd173848915852;

assign p_Result_1_fu_536_p5 = {{p_Val2_1_fu_134[31:22]}, {7'd0}, {p_Val2_1_fu_134[14:0]}};

assign p_Result_2_fu_548_p3 = {{p_Result_s_fu_524_p5}, {p_Result_1_fu_536_p5}};

assign p_Result_3_fu_475_p5 = {{p_Val2_3_fu_126[31:22]}, {select_ln1201_1_fu_385_p3}};

assign p_Result_4_fu_487_p5 = {{p_Val2_2_fu_122[31:22]}, {select_ln1201_3_fu_467_p3}};

assign p_Result_5_fu_499_p3 = {{p_Result_3_fu_475_p5}, {p_Result_4_fu_487_p5}};

assign p_Result_s_fu_524_p5 = {{p_Val2_s_fu_130[31:22]}, {7'd1}, {p_Val2_s_fu_130[14:0]}};

assign select_ln10_fu_252_p3 = ((icmp_ln56_fu_246_p2[0:0] == 1'b1) ? 7'd0 : t_fu_114);

assign select_ln1201_1_fu_385_p3 = ((tmp_2_fu_339_p3[0:0] == 1'b1) ? sub_ln1201_1_fu_379_p2 : sext_ln1201_1_fu_375_p1);

assign select_ln1201_2_fu_449_p3 = ((tmp_5_fu_421_p3[0:0] == 1'b1) ? tmp_6_fu_429_p4 : tmp_7_fu_439_p4);

assign select_ln1201_3_fu_467_p3 = ((tmp_5_fu_421_p3[0:0] == 1'b1) ? sub_ln1201_3_fu_461_p2 : sext_ln1201_3_fu_457_p1);

assign select_ln1201_fu_367_p3 = ((tmp_2_fu_339_p3[0:0] == 1'b1) ? tmp_3_fu_347_p4 : tmp_4_fu_357_p4);

assign sext_ln1201_1_fu_375_p1 = $signed(select_ln1201_fu_367_p3);

assign sext_ln1201_3_fu_457_p1 = $signed(select_ln1201_2_fu_449_p3);

assign sub_ln1201_1_fu_379_p2 = ($signed(22'd0) - $signed(sext_ln1201_1_fu_375_p1));

assign sub_ln1201_2_fu_415_p2 = (75'd0 - mul_ln1201_1_fu_409_p2);

assign sub_ln1201_3_fu_461_p2 = ($signed(22'd0) - $signed(sext_ln1201_3_fu_457_p1));

assign sub_ln1201_fu_333_p2 = (75'd0 - mul_ln1201_fu_327_p2);

assign t_1_fu_315_p3 = {{tmp_s_fu_305_p4}, {15'd0}};

assign t_2_fu_397_p3 = {{trunc_ln737_fu_393_p1}, {15'd0}};

assign t_3_fu_269_p2 = (select_ln10_fu_252_p3 + 7'd1);

assign tmp_2_fu_339_p3 = data_in_TDATA[32'd53];

assign tmp_3_fu_347_p4 = {{sub_ln1201_fu_333_p2[74:54]}};

assign tmp_4_fu_357_p4 = {{mul_ln1201_fu_327_p2[74:54]}};

assign tmp_5_fu_421_p3 = data_in_TDATA[32'd21];

assign tmp_6_fu_429_p4 = {{sub_ln1201_2_fu_415_p2[74:54]}};

assign tmp_7_fu_439_p4 = {{mul_ln1201_1_fu_409_p2[74:54]}};

assign tmp_s_fu_305_p4 = {{data_in_TDATA[53:32]}};

assign trunc_ln57_fu_285_p1 = grp_fu_264_p2[7:0];

assign trunc_ln737_fu_393_p1 = data_in_TDATA[21:0];

endmodule //pilot_insertion_pilot_insertion_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3
