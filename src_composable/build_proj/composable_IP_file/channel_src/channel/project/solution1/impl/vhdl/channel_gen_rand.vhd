-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity channel_gen_rand is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    random_num3769_din : OUT STD_LOGIC_VECTOR (19 downto 0);
    random_num3769_full_n : IN STD_LOGIC;
    random_num3769_write : OUT STD_LOGIC );
end;


architecture behav of channel_gen_rand is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (51 downto 0) := "0000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (51 downto 0) := "0000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (51 downto 0) := "0000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (51 downto 0) := "0000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (51 downto 0) := "0000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (51 downto 0) := "0000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (51 downto 0) := "0001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (51 downto 0) := "0010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (51 downto 0) := "0100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (51 downto 0) := "1000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_3E38F5C3 : STD_LOGIC_VECTOR (31 downto 0) := "00111110001110001111010111000011";
    constant ap_const_lv32_BF000000 : STD_LOGIC_VECTOR (31 downto 0) := "10111111000000000000000000000000";
    constant ap_const_lv32_BFCCCCCD : STD_LOGIC_VECTOR (31 downto 0) := "10111111110011001100110011001101";
    constant ap_const_lv32_C0A00000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000101000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_3D99999A : STD_LOGIC_VECTOR (31 downto 0) := "00111101100110011001100110011010";
    constant ap_const_lv32_3F6CCCCD : STD_LOGIC_VECTOR (31 downto 0) := "00111111011011001100110011001101";
    constant ap_const_lv32_40A00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000101000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_18E : STD_LOGIC_VECTOR (9 downto 0) := "0110001110";
    constant ap_const_lv10_270 : STD_LOGIC_VECTOR (9 downto 0) := "1001110000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_9908B0DF : STD_LOGIC_VECTOR (31 downto 0) := "10011001000010001011000011011111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_3E2E52ED : STD_LOGIC_VECTOR (31 downto 0) := "00111110001011100101001011101101";
    constant ap_const_lv32_3C8E06C1 : STD_LOGIC_VECTOR (31 downto 0) := "00111100100011100000011011000001";
    constant ap_const_lv32_426C7000 : STD_LOGIC_VECTOR (31 downto 0) := "01000010011011000111000000000000";
    constant ap_const_lv32_3FA742E1 : STD_LOGIC_VECTOR (31 downto 0) := "00111111101001110100001011100001";
    constant ap_const_lv32_3EDB7C55 : STD_LOGIC_VECTOR (31 downto 0) := "00111110110110110111110001010101";
    constant ap_const_lv32_431F4A88 : STD_LOGIC_VECTOR (31 downto 0) := "01000011000111110100101010001000";
    constant ap_const_lv32_3DF6315C : STD_LOGIC_VECTOR (31 downto 0) := "00111101111101100011000101011100";
    constant ap_const_lv32_3C48D6A1 : STD_LOGIC_VECTOR (31 downto 0) := "00111100010010001101011010100001";
    constant ap_const_lv32_42866008 : STD_LOGIC_VECTOR (31 downto 0) := "01000010100001100110000000001000";
    constant ap_const_lv32_3F3CAC24 : STD_LOGIC_VECTOR (31 downto 0) := "00111111001111001010110000100100";
    constant ap_const_lv32_3E77C954 : STD_LOGIC_VECTOR (31 downto 0) := "00111110011101111100100101010100";
    constant ap_const_lv32_429D83F9 : STD_LOGIC_VECTOR (31 downto 0) := "01000010100111011000001111111001";
    constant ap_const_lv32_40306FAA : STD_LOGIC_VECTOR (31 downto 0) := "01000000001100000110111110101010";
    constant ap_const_lv32_404532D0 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010001010011001011010000";
    constant ap_const_lv32_4249BCB2 : STD_LOGIC_VECTOR (31 downto 0) := "01000010010010011011110010110010";
    constant ap_const_lv32_418F294F : STD_LOGIC_VECTOR (31 downto 0) := "01000001100011110010100101001111";
    constant ap_const_lv32_3FB63331 : STD_LOGIC_VECTOR (31 downto 0) := "00111111101101100011001100110001";
    constant ap_const_lv32_40D50D8F : STD_LOGIC_VECTOR (31 downto 0) := "01000000110101010000110110001111";
    constant ap_const_lv32_4058C6C8 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010110001100011011001000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_FF1 : STD_LOGIC_VECTOR (11 downto 0) := "111111110001";
    constant ap_const_lv12_F : STD_LOGIC_VECTOR (11 downto 0) := "000000001111";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv20_FFFFF : STD_LOGIC_VECTOR (19 downto 0) := "11111111111111111111";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal t : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : STD_LOGIC;
    signal rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : STD_LOGIC;
    signal rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_even_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_even_0_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 : STD_LOGIC;
    signal rngMT19937ICN_uniformRNG_mt_even_0_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : STD_LOGIC;
    signal rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : STD_LOGIC;
    signal rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_odd_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 : STD_LOGIC;
    signal rngMT19937ICN_uniformRNG_mt_odd_0_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rngMT19937ICN_uniformRNG_x_k_p_0_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rngMT19937ICN_uniformRNG_x_k_p_1_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rngMT19937ICN_uniformRNG_x_k_p_2_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rngMT19937ICN_uniformRNG_x_k_p_m_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rngMT19937ICN_uniformRNG_addr_head_V : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal random_num3769_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_440 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_fu_411_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_448 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal reg_453 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal trunc_ln223_fu_479_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln223_reg_1669 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ret_6_fu_573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_6_reg_1673 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_uniform_fu_1153_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_uniform_reg_1699 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal or_ln314_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln314_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal is_lower_tail_V_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_lower_tail_V_reg_1713 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_fu_1202_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_reg_1720 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_435_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_1727 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal or_ln314_1_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln314_1_reg_1737 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1751 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln324_1_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln324_1_reg_1758 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_4_fu_1284_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_4_reg_1770 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_407_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_13_reg_1775 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal r_11_fu_1297_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_11_reg_1780 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal p3_fu_1311_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p2_fu_1326_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal q3_fu_1341_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal q2_fu_1356_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_fu_1371_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal q1_fu_1379_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p0_fu_1394_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_415_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal select_ln389_fu_1416_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal p_Result_8_reg_1830 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal exp_tmp_reg_1835 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln574_fu_1449_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln574_reg_1840 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln580_fu_1453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln580_reg_1845 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_seedInitialization_fu_375_ap_start : STD_LOGIC;
    signal grp_seedInitialization_fu_375_ap_done : STD_LOGIC;
    signal grp_seedInitialization_fu_375_ap_idle : STD_LOGIC;
    signal grp_seedInitialization_fu_375_ap_ready : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_0_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_1_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_2_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_m_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld : STD_LOGIC;
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_addr_head_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_addr_head_V_ap_vld : STD_LOGIC;
    signal result_reg_365 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_fu_375_ap_start_reg : STD_LOGIC := '0';
    signal t_load_load_fu_465_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln573_fu_627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln573_1_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln573_2_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln870_fu_501_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_397_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_397_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_411_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_415_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal grp_fu_423_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_4_fu_517_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_533_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_fu_543_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_4_fu_529_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1028_fu_551_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln722_fu_555_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1529_fu_567_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal addr_head_p_3_V_fu_483_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_head_p_m_p_1_V_fu_489_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_head_p_n_V_fu_495_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_s_fu_597_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_1_fu_607_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_2_fu_617_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_fu_669_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1676_fu_678_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_2_fu_682_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_687_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_695_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_705_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_721_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_731_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_739_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_747_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1527_fu_757_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_fu_761_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_3_fu_801_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_807_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_817_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_fu_827_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_3_fu_837_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_4_fu_853_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_3_fu_859_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1676_1_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_fu_873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_fu_885_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_895_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln997_fu_907_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_913_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_919_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln1000_fu_935_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln1000_fu_939_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1000_fu_945_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1000_fu_949_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1002_fu_955_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1002_1_fu_961_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1002_fu_967_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_983_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln999_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1002_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_997_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1011_fu_1019_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1010_fu_979_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1011_fu_1025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln1002_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1012_fu_1041_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1012_fu_1047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1011_fu_1005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln999_fu_1011_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1002_1_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln1011_fu_1029_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1012_fu_1051_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1011_fu_1057_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_2_fu_1065_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1014_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_3_fu_1077_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_4_fu_1083_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln996_fu_903_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1018_fu_1105_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_1097_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1017_fu_1111_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1017_fu_1117_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1015_fu_1093_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_1125_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_7_fu_1133_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_1145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln988_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln751_fu_1149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln314_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1164_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln314_fu_1174_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln314_1_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln314_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln323_fu_1208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln323_fu_1211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln314_1_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln324_fu_1232_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1235_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln324_fu_1245_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln324_1_fu_1255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln324_fu_1249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln324_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln324_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_3_fu_1278_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_10_fu_1290_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln324_6_fu_1304_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln324_4_fu_1319_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln324_11_fu_1334_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln324_9_fu_1349_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln324_2_fu_1364_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln324_fu_1387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln390_fu_1402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln390_fu_1406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln390_1_fu_1412_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_fu_419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_1423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln564_fu_1427_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_9_fu_1462_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln578_fu_1469_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_1473_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln494_fu_1459_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1486_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_fu_1492_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln590_fu_1502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln590_fu_1508_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln590_fu_1514_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_1520_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_1479_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln590_fu_1528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln595_fu_1548_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln595_fu_1552_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln709_fu_1562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1566_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln594_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_fu_1558_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln597_fu_1574_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln592_fu_1538_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln590cast_fu_1596_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln612_fu_1590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln613_fu_1600_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln591_fu_1532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln580_fu_1614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln591_fu_1619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln612_fu_1606_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal or_ln591_fu_1633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln591_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln594_fu_1582_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln591_fu_1625_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln590_fu_1650_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_397_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_423_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component channel_gen_seedInitialization IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_mt_even_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_mt_even_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_mt_odd_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_odd_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_x_k_p_0_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_x_k_p_1_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_x_k_p_2_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_x_k_p_m_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_addr_head_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        rngMT19937ICN_uniformRNG_addr_head_V_ap_vld : OUT STD_LOGIC );
    end component;


    component channel_gen_faddfsub_32ns_32ns_32_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component channel_gen_fmul_32ns_32ns_32_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component channel_gen_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component channel_gen_fdiv_32ns_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component channel_gen_fpext_32ns_64_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component channel_gen_fcmp_32ns_32ns_1_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component channel_gen_fsqrt_32ns_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component channel_gen_flog_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component channel_gen_rand_rngMT19937ICN_uniformRNG_mt_even_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    rngMT19937ICN_uniformRNG_mt_even_0_V_U : component channel_gen_rand_rngMT19937ICN_uniformRNG_mt_even_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rngMT19937ICN_uniformRNG_mt_even_0_V_address0,
        ce0 => rngMT19937ICN_uniformRNG_mt_even_0_V_ce0,
        we0 => rngMT19937ICN_uniformRNG_mt_even_0_V_we0,
        d0 => rngMT19937ICN_uniformRNG_mt_even_0_V_d0,
        q0 => rngMT19937ICN_uniformRNG_mt_even_0_V_q0,
        address1 => rngMT19937ICN_uniformRNG_mt_even_0_V_address1,
        ce1 => rngMT19937ICN_uniformRNG_mt_even_0_V_ce1,
        q1 => rngMT19937ICN_uniformRNG_mt_even_0_V_q1);

    rngMT19937ICN_uniformRNG_mt_odd_0_V_U : component channel_gen_rand_rngMT19937ICN_uniformRNG_mt_even_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rngMT19937ICN_uniformRNG_mt_odd_0_V_address0,
        ce0 => rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0,
        we0 => rngMT19937ICN_uniformRNG_mt_odd_0_V_we0,
        d0 => rngMT19937ICN_uniformRNG_mt_odd_0_V_d0,
        q0 => rngMT19937ICN_uniformRNG_mt_odd_0_V_q0,
        address1 => rngMT19937ICN_uniformRNG_mt_odd_0_V_address1,
        ce1 => rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1,
        q1 => rngMT19937ICN_uniformRNG_mt_odd_0_V_q1);

    grp_seedInitialization_fu_375 : component channel_gen_seedInitialization
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_seedInitialization_fu_375_ap_start,
        ap_done => grp_seedInitialization_fu_375_ap_done,
        ap_idle => grp_seedInitialization_fu_375_ap_idle,
        ap_ready => grp_seedInitialization_fu_375_ap_ready,
        rngMT19937ICN_uniformRNG_mt_even_0_V_address0 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_address0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_ce0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_we0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_d0 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_d0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_q0 => rngMT19937ICN_uniformRNG_mt_even_0_V_q0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_address1 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_address1,
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_ce1,
        rngMT19937ICN_uniformRNG_mt_even_0_V_q1 => rngMT19937ICN_uniformRNG_mt_even_0_V_q1,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_address0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_we0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_d0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_q0 => rngMT19937ICN_uniformRNG_mt_odd_0_V_q0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_address1,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_q1 => rngMT19937ICN_uniformRNG_mt_odd_0_V_q1,
        rngMT19937ICN_uniformRNG_x_k_p_0_V => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_0_V,
        rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld,
        rngMT19937ICN_uniformRNG_x_k_p_1_V => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_1_V,
        rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld,
        rngMT19937ICN_uniformRNG_x_k_p_2_V => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_2_V,
        rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld,
        rngMT19937ICN_uniformRNG_x_k_p_m_V => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_m_V,
        rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld,
        rngMT19937ICN_uniformRNG_addr_head_V => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_addr_head_V,
        rngMT19937ICN_uniformRNG_addr_head_V_ap_vld => grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_addr_head_V_ap_vld);

    faddfsub_32ns_32ns_32_2_no_dsp_1_U50 : component channel_gen_faddfsub_32ns_32ns_32_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_397_p0,
        din1 => grp_fu_397_p1,
        opcode => grp_fu_397_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_397_p2);

    fmul_32ns_32ns_32_2_full_dsp_1_U51 : component channel_gen_fmul_32ns_32ns_32_2_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_440,
        din1 => reg_440,
        ce => ap_const_logic_1,
        dout => grp_fu_407_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U52 : component channel_gen_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_411_p0,
        din1 => grp_fu_411_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_411_p2);

    fdiv_32ns_32ns_32_6_no_dsp_1_U53 : component channel_gen_fdiv_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_415_p0,
        din1 => reg_440,
        ce => ap_const_logic_1,
        dout => grp_fu_415_p2);

    fpext_32ns_64_1_no_dsp_1_U54 : component channel_gen_fpext_32ns_64_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => result_reg_365,
        dout => d_fu_419_p1);

    fcmp_32ns_32ns_1_1_no_dsp_1_U55 : component channel_gen_fcmp_32ns_32ns_1_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_423_p0,
        din1 => grp_fu_423_p1,
        opcode => grp_fu_423_opcode,
        dout => grp_fu_423_p2);

    fsqrt_32ns_32ns_32_6_no_dsp_1_U56 : component channel_gen_fsqrt_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => grp_fu_430_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_430_p2);

    flog_32ns_32ns_32_5_full_dsp_1_U57 : component channel_gen_flog_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => z_reg_1720,
        ce => ap_const_logic_1,
        dout => grp_fu_435_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_seedInitialization_fu_375_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_seedInitialization_fu_375_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (t_load_load_fu_465_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_seedInitialization_fu_375_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_seedInitialization_fu_375_ap_ready = ap_const_logic_1)) then 
                    grp_seedInitialization_fu_375_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    result_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                result_reg_365 <= grp_fu_415_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
                result_reg_365 <= select_ln389_fu_1416_p3;
            end if; 
        end if;
    end process;

    rngMT19937ICN_uniformRNG_addr_head_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                rngMT19937ICN_uniformRNG_addr_head_V <= add_ln870_fu_501_p2;
            elsif (((grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_addr_head_V_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                rngMT19937ICN_uniformRNG_addr_head_V <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_addr_head_V;
            end if; 
        end if;
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_0_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                rngMT19937ICN_uniformRNG_x_k_p_0_V <= rngMT19937ICN_uniformRNG_x_k_p_1_V;
            elsif (((grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                rngMT19937ICN_uniformRNG_x_k_p_0_V <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_0_V;
            end if; 
        end if;
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_1_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                rngMT19937ICN_uniformRNG_x_k_p_1_V <= rngMT19937ICN_uniformRNG_x_k_p_2_V;
            elsif (((grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                rngMT19937ICN_uniformRNG_x_k_p_1_V <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_1_V;
            end if; 
        end if;
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_2_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln223_reg_1669 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                rngMT19937ICN_uniformRNG_x_k_p_2_V <= rngMT19937ICN_uniformRNG_mt_even_0_V_q0;
            elsif (((trunc_ln223_reg_1669 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                rngMT19937ICN_uniformRNG_x_k_p_2_V <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q0;
            elsif (((grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                rngMT19937ICN_uniformRNG_x_k_p_2_V <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_2_V;
            end if; 
        end if;
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_m_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln223_reg_1669 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                rngMT19937ICN_uniformRNG_x_k_p_m_V <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
            elsif (((trunc_ln223_reg_1669 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                rngMT19937ICN_uniformRNG_x_k_p_m_V <= rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
            elsif (((grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                rngMT19937ICN_uniformRNG_x_k_p_m_V <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_x_k_p_m_V;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                and_ln324_1_reg_1758 <= and_ln324_1_fu_1273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                exp_tmp_reg_1835 <= ireg_fu_1423_p1(62 downto 52);
                icmp_ln580_reg_1845 <= icmp_ln580_fu_1453_p2;
                p_Result_8_reg_1830 <= ireg_fu_1423_p1(63 downto 63);
                trunc_ln574_reg_1840 <= trunc_ln574_fu_1449_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                is_lower_tail_V_reg_1713 <= is_lower_tail_V_fu_1196_p2;
                or_ln314_reg_1708 <= or_ln314_fu_1190_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                or_ln314_1_reg_1737 <= or_ln314_1_fu_1227_p2;
                tmp_9_reg_1751 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                r_11_reg_1780 <= r_11_fu_1297_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln324_1_reg_1758) and (or_ln314_1_reg_1737 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                r_13_reg_1775 <= grp_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state19))) then
                reg_440 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state25))) then
                reg_448 <= grp_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state29))) then
                reg_453 <= grp_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state31))) then
                reg_459 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                ret_6_reg_1673 <= ret_6_fu_573_p2;
                trunc_ln223_reg_1669 <= trunc_ln223_fu_479_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_seedInitialization_fu_375_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                t <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                tmp_i_reg_1727 <= grp_fu_435_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_uniform_reg_1699 <= tmp_uniform_fu_1153_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                z_4_reg_1770 <= z_4_fu_1284_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                z_reg_1720 <= z_fu_1202_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, random_num3769_full_n, ap_CS_fsm_state52, ap_CS_fsm_state35, or_ln314_1_reg_1737, grp_seedInitialization_fu_375_ap_done, t_load_load_fu_465_p1, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (t_load_load_fu_465_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_start = ap_const_logic_1) and (t_load_load_fu_465_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_seedInitialization_fu_375_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((or_ln314_1_reg_1737 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((random_num3769_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_1486_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln494_fu_1459_p1));
    LD_fu_1145_p1 <= p_Result_7_fu_1133_p5(32 - 1 downto 0);
    add_ln1011_fu_1019_p2 <= std_logic_vector(unsigned(sub_ln997_fu_907_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln1017_fu_1111_p2 <= std_logic_vector(unsigned(sub_ln1018_fu_1105_p2) + unsigned(ap_const_lv8_1));
    add_ln590_fu_1508_p2 <= std_logic_vector(unsigned(F2_fu_1486_p2) + unsigned(ap_const_lv12_FF1));
    add_ln870_fu_501_p2 <= std_logic_vector(unsigned(rngMT19937ICN_uniformRNG_addr_head_V) + unsigned(ap_const_lv10_1));
    addr_head_p_3_V_fu_483_p2 <= std_logic_vector(unsigned(rngMT19937ICN_uniformRNG_addr_head_V) + unsigned(ap_const_lv10_3));
    addr_head_p_m_p_1_V_fu_489_p2 <= std_logic_vector(unsigned(rngMT19937ICN_uniformRNG_addr_head_V) + unsigned(ap_const_lv10_18E));
    addr_head_p_n_V_fu_495_p2 <= std_logic_vector(unsigned(rngMT19937ICN_uniformRNG_addr_head_V) + unsigned(ap_const_lv10_270));
    and_ln1002_1_fu_1035_p2 <= (xor_ln1002_fu_991_p2 and p_Result_6_fu_997_p3);
    and_ln1002_fu_967_p2 <= (pre_result_V_fu_873_p2 and or_ln1002_1_fu_961_p2);
    and_ln314_1_fu_1222_p2 <= (or_ln314_reg_1708 and grp_fu_423_p2);
    and_ln324_1_fu_1273_p2 <= (or_ln314_1_reg_1737 and and_ln324_fu_1267_p2);
    and_ln324_fu_1267_p2 <= (or_ln324_fu_1261_p2 and grp_fu_423_p2);
    and_ln590_fu_1644_p2 <= (xor_ln591_fu_1638_p2 and icmp_ln590_fu_1502_p2);
    and_ln591_fu_1619_p2 <= (xor_ln580_fu_1614_p2 and icmp_ln591_fu_1532_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_seedInitialization_fu_375_ap_done)
    begin
        if ((grp_seedInitialization_fu_375_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;

    ap_ST_fsm_state52_blk_assign_proc : process(random_num3769_full_n)
    begin
        if ((random_num3769_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state52_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state52_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, random_num3769_full_n, ap_CS_fsm_state52)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((random_num3769_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(random_num3769_full_n, ap_CS_fsm_state52)
    begin
        if (((random_num3769_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln595_fu_1552_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_1479_p3),to_integer(unsigned('0' & zext_ln595_fu_1548_p1(31-1 downto 0)))));
    bitcast_ln314_fu_1161_p1 <= tmp_uniform_reg_1699;
    bitcast_ln323_fu_1208_p1 <= tmp_i_reg_1727;
    bitcast_ln324_fu_1232_p1 <= tmp_9_reg_1751;
    bitcast_ln390_1_fu_1412_p1 <= xor_ln390_fu_1406_p2;
    bitcast_ln390_fu_1402_p1 <= grp_fu_415_p2;
    bitcast_ln709_fu_1562_p1 <= result_reg_365;
    bitcast_ln751_fu_1149_p1 <= LD_fu_1145_p1;

    grp_fu_397_opcode_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, ap_CS_fsm_state29, ap_CS_fsm_state33, ap_CS_fsm_state37, is_lower_tail_V_reg_1713, or_ln314_1_reg_1737, ap_CS_fsm_state18, and_ln324_1_reg_1758, ap_CS_fsm_state26, ap_CS_fsm_state6, ap_CS_fsm_state22)
    begin
        if ((((ap_const_lv1_0 = and_ln324_1_reg_1758) and (or_ln314_1_reg_1737 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((is_lower_tail_V_reg_1713 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_fu_397_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state30) or ((ap_const_lv1_1 = and_ln324_1_reg_1758) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_0 = and_ln324_1_reg_1758) and (or_ln314_1_reg_1737 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            grp_fu_397_opcode <= ap_const_lv2_0;
        else 
            grp_fu_397_opcode <= "XX";
        end if; 
    end process;


    grp_fu_397_p0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, reg_448, reg_453, ap_CS_fsm_state29, ap_CS_fsm_state33, ap_CS_fsm_state37, tmp_uniform_reg_1699, or_ln314_1_reg_1737, ap_CS_fsm_state18, tmp_9_reg_1751, and_ln324_1_reg_1758, ap_CS_fsm_state26, ap_CS_fsm_state6, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_397_p0 <= reg_453;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_397_p0 <= reg_448;
        elsif ((((ap_const_lv1_1 = and_ln324_1_reg_1758) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_0 = and_ln324_1_reg_1758) and (or_ln314_1_reg_1737 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            grp_fu_397_p0 <= tmp_9_reg_1751;
        elsif (((ap_const_lv1_0 = and_ln324_1_reg_1758) and (or_ln314_1_reg_1737 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_397_p0 <= ap_const_lv32_3E38F5C3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_397_p0 <= tmp_uniform_reg_1699;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_397_p0 <= ap_const_lv32_3F800000;
        else 
            grp_fu_397_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_397_p1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, ap_CS_fsm_state29, ap_CS_fsm_state33, ap_CS_fsm_state37, tmp_uniform_reg_1699, or_ln314_1_reg_1737, ap_CS_fsm_state18, and_ln324_1_reg_1758, r_13_reg_1775, p2_fu_1326_p3, ap_CS_fsm_state26, q2_fu_1356_p3, p1_fu_1371_p3, q1_fu_1379_p3, p0_fu_1394_p3, ap_CS_fsm_state6, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_397_p1 <= ap_const_lv32_3F800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_397_p1 <= p0_fu_1394_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fu_397_p1 <= q1_fu_1379_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_397_p1 <= p1_fu_1371_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_397_p1 <= q2_fu_1356_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_397_p1 <= p2_fu_1326_p3;
        elsif (((ap_const_lv1_0 = and_ln324_1_reg_1758) and (or_ln314_1_reg_1737 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_397_p1 <= ap_const_lv32_C0A00000;
        elsif (((ap_const_lv1_1 = and_ln324_1_reg_1758) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_397_p1 <= ap_const_lv32_BFCCCCCD;
        elsif (((ap_const_lv1_0 = and_ln324_1_reg_1758) and (or_ln314_1_reg_1737 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_397_p1 <= r_13_reg_1775;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_397_p1 <= ap_const_lv32_BF000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_397_p1 <= tmp_uniform_reg_1699;
        else 
            grp_fu_397_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_411_p0_assign_proc : process(reg_440, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state32, ap_CS_fsm_state36, reg_459, ap_CS_fsm_state31, ap_CS_fsm_state35, p3_fu_1311_p3, ap_CS_fsm_state24, q3_fu_1341_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            grp_fu_411_p0 <= reg_459;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            grp_fu_411_p0 <= reg_440;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_411_p0 <= q3_fu_1341_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_411_p0 <= p3_fu_1311_p3;
        else 
            grp_fu_411_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_411_p1_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state32, ap_CS_fsm_state36, ap_CS_fsm_state31, ap_CS_fsm_state35, z_4_reg_1770, r_11_reg_1780, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_411_p1 <= z_4_reg_1770;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            grp_fu_411_p1 <= r_11_reg_1780;
        else 
            grp_fu_411_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_415_p0_assign_proc : process(reg_453, reg_459, ap_CS_fsm_state39, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_415_p0 <= reg_459;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_415_p0 <= reg_453;
        else 
            grp_fu_415_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_423_opcode_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_423_opcode <= ap_const_lv5_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_423_opcode <= ap_const_lv5_4;
        else 
            grp_fu_423_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_423_p0_assign_proc : process(ap_CS_fsm_state19, tmp_uniform_reg_1699, ap_CS_fsm_state5, ap_CS_fsm_state18, tmp_9_reg_1751)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_423_p0 <= tmp_9_reg_1751;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_fu_423_p0 <= tmp_uniform_reg_1699;
        else 
            grp_fu_423_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_423_p1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_423_p1 <= ap_const_lv32_40A00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_423_p1 <= ap_const_lv32_3F6CCCCD;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_423_p1 <= ap_const_lv32_3D99999A;
        else 
            grp_fu_423_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_430_p1 <= xor_ln323_fu_1211_p2;
    grp_seedInitialization_fu_375_ap_start <= grp_seedInitialization_fu_375_ap_start_reg;
    icmp_ln1002_fu_973_p2 <= "0" when (and_ln1002_fu_967_p2 = ap_const_lv32_0) else "1";
    icmp_ln1011_fu_1005_p2 <= "1" when (signed(lsb_index_fu_913_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln314_1_fu_1184_p2 <= "1" when (trunc_ln314_fu_1174_p1 = ap_const_lv23_0) else "0";
    icmp_ln314_fu_1178_p2 <= "0" when (tmp_1_fu_1164_p4 = ap_const_lv8_FF) else "1";
    icmp_ln324_1_fu_1255_p2 <= "1" when (trunc_ln324_fu_1245_p1 = ap_const_lv23_0) else "0";
    icmp_ln324_fu_1249_p2 <= "0" when (tmp_7_fu_1235_p4 = ap_const_lv8_FF) else "1";
    icmp_ln580_fu_1453_p2 <= "1" when (trunc_ln564_fu_1427_p1 = ap_const_lv63_0) else "0";
    icmp_ln590_fu_1502_p2 <= "1" when (signed(tmp_23_fu_1492_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln591_fu_1532_p2 <= "1" when (F2_fu_1486_p2 = ap_const_lv12_F) else "0";
    icmp_ln594_fu_1542_p2 <= "1" when (unsigned(sh_amt_fu_1520_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln612_fu_1590_p2 <= "1" when (unsigned(sh_amt_fu_1520_p3) < unsigned(ap_const_lv12_14)) else "0";
    icmp_ln988_fu_879_p2 <= "1" when (zext_ln1676_1_fu_869_p1 = pre_result_V_4_fu_853_p2) else "0";
    icmp_ln999_fu_929_p2 <= "1" when (signed(tmp_19_fu_919_p4) > signed(ap_const_lv31_0)) else "0";
    ireg_fu_1423_p1 <= d_fu_419_p1;
    is_lower_tail_V_fu_1196_p2 <= (or_ln314_fu_1190_p2 and grp_fu_423_p2);
    
    l_fu_895_p3_proc : process(p_Result_5_fu_885_p4)
    begin
        l_fu_895_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_5_fu_885_p4(i) = '1' then
                l_fu_895_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_913_p2 <= std_logic_vector(unsigned(sub_ln997_fu_907_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln1000_fu_949_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln1000_fu_945_p1(31-1 downto 0)))));
    lshr_ln1011_fu_1029_p2 <= std_logic_vector(shift_right(unsigned(zext_ln1010_fu_979_p1),to_integer(unsigned('0' & zext_ln1011_fu_1025_p1(31-1 downto 0)))));
    m_2_fu_1065_p3 <= 
        lshr_ln1011_fu_1029_p2 when (icmp_ln1011_fu_1005_p2(0) = '1') else 
        shl_ln1012_fu_1051_p2;
    m_3_fu_1077_p2 <= std_logic_vector(unsigned(m_2_fu_1065_p3) + unsigned(zext_ln1014_fu_1073_p1));
    m_4_fu_1083_p4 <= m_3_fu_1077_p2(63 downto 1);
    man_V_1_fu_1473_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln578_fu_1469_p1));
    man_V_2_fu_1479_p3 <= 
        man_V_1_fu_1473_p2 when (p_Result_8_reg_1830(0) = '1') else 
        zext_ln578_fu_1469_p1;
    or_ln1002_1_fu_961_p2 <= (shl_ln1002_fu_955_p2 or lshr_ln1000_fu_949_p2);
    or_ln314_1_fu_1227_p2 <= (is_lower_tail_V_reg_1713 or and_ln314_1_fu_1222_p2);
    or_ln314_fu_1190_p2 <= (icmp_ln314_fu_1178_p2 or icmp_ln314_1_fu_1184_p2);
    or_ln324_fu_1261_p2 <= (icmp_ln324_fu_1249_p2 or icmp_ln324_1_fu_1255_p2);
    or_ln591_fu_1633_p2 <= (icmp_ln591_fu_1532_p2 or icmp_ln580_reg_1845);
    p0_fu_1394_p3 <= 
        select_ln324_fu_1387_p3 when (or_ln314_1_reg_1737(0) = '1') else 
        ap_const_lv32_4058C6C8;
    p1_fu_1371_p3 <= 
        select_ln324_2_fu_1364_p3 when (or_ln314_1_reg_1737(0) = '1') else 
        ap_const_lv32_4249BCB2;
    p2_fu_1326_p3 <= 
        select_ln324_4_fu_1319_p3 when (or_ln314_1_reg_1737(0) = '1') else 
        ap_const_lv32_431F4A88;
    p3_fu_1311_p3 <= 
        select_ln324_6_fu_1304_p3 when (or_ln314_1_reg_1737(0) = '1') else 
        ap_const_lv32_426C7000;
    p_Result_4_fu_529_p1 <= rngMT19937ICN_uniformRNG_x_k_p_1_V(1 - 1 downto 0);
    
    p_Result_5_fu_885_p4_proc : process(pre_result_V_fu_873_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_5_fu_885_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := pre_result_V_fu_873_p2;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_5_fu_885_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_5_fu_885_p4_i) := pre_result_V_fu_873_p2(32-1-p_Result_5_fu_885_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_5_fu_885_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_6_fu_997_p3 <= pre_result_V_fu_873_p2(to_integer(unsigned(lsb_index_fu_913_p2)) downto to_integer(unsigned(lsb_index_fu_913_p2))) when (to_integer(unsigned(lsb_index_fu_913_p2))>= 0 and to_integer(unsigned(lsb_index_fu_913_p2))<=31) else "-";
    p_Result_7_fu_1133_p5 <= (zext_ln1015_fu_1093_p1(63 downto 32) & tmp_fu_1125_p3 & zext_ln1015_fu_1093_p1(22 downto 0));
    p_Result_9_fu_1462_p3 <= (ap_const_lv1_1 & trunc_ln574_reg_1840);
    p_Result_s_fu_1097_p3 <= m_3_fu_1077_p2(25 downto 25);
    pre_result_V_2_fu_682_p2 <= (zext_ln1676_fu_678_p1 xor ret_6_reg_1673);
    pre_result_V_3_fu_801_p2 <= (ret_fu_761_p19 xor pre_result_V_2_fu_682_p2);
    pre_result_V_4_fu_853_p2 <= (ret_3_fu_837_p7 xor pre_result_V_3_fu_801_p2);
    pre_result_V_fu_873_p2 <= (zext_ln1676_1_fu_869_p1 xor pre_result_V_4_fu_853_p2);
    q1_fu_1379_p3 <= 
        ap_const_lv32_3F800000 when (or_ln314_1_reg_1737(0) = '1') else 
        ap_const_lv32_418F294F;
    q2_fu_1356_p3 <= 
        select_ln324_9_fu_1349_p3 when (or_ln314_1_reg_1737(0) = '1') else 
        ap_const_lv32_429D83F9;
    q3_fu_1341_p3 <= 
        select_ln324_11_fu_1334_p3 when (or_ln314_1_reg_1737(0) = '1') else 
        ap_const_lv32_42866008;
    r_10_fu_1290_p3 <= 
        grp_fu_397_p2 when (or_ln314_1_reg_1737(0) = '1') else 
        grp_fu_397_p2;
    r_11_fu_1297_p3 <= 
        grp_fu_397_p2 when (and_ln324_1_reg_1758(0) = '1') else 
        r_10_fu_1290_p3;
    r_1_fu_607_p4 <= addr_head_p_m_p_1_V_fu_489_p2(9 downto 1);
    r_2_fu_617_p4 <= addr_head_p_n_V_fu_495_p2(9 downto 1);
    r_3_fu_859_p4 <= pre_result_V_4_fu_853_p2(31 downto 18);
    r_fu_669_p4 <= ret_6_reg_1673(31 downto 11);
    r_s_fu_597_p4 <= addr_head_p_3_V_fu_483_p2(9 downto 1);

    random_num3769_blk_n_assign_proc : process(random_num3769_full_n, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            random_num3769_blk_n <= random_num3769_full_n;
        else 
            random_num3769_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    random_num3769_din <= 
        ap_const_lv20_0 when (icmp_ln580_reg_1845(0) = '1') else 
        select_ln590_fu_1650_p3;

    random_num3769_write_assign_proc : process(random_num3769_full_n, ap_CS_fsm_state52)
    begin
        if (((random_num3769_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            random_num3769_write <= ap_const_logic_1;
        else 
            random_num3769_write <= ap_const_logic_0;
        end if; 
    end process;

    ret_3_fu_837_p7 <= (((((tmp_15_fu_807_p4 & ap_const_lv1_0) & tmp_17_fu_817_p4) & ap_const_lv3_0) & tmp_18_fu_827_p4) & ap_const_lv17_0);
    ret_6_fu_573_p2 <= (xor_ln1529_fu_567_p2 xor rngMT19937ICN_uniformRNG_x_k_p_m_V);
    ret_fu_761_p19 <= (((((((((((((((((tmp_10_fu_687_p3 & ap_const_lv2_0) & tmp_6_fu_695_p4) & ap_const_lv1_0) & tmp_11_fu_705_p3) & ap_const_lv2_0) & tmp_13_fu_713_p3) & ap_const_lv1_0) & tmp_s_fu_721_p4) & ap_const_lv3_0) & tmp_14_fu_731_p3) & ap_const_lv1_0) & tmp_16_fu_739_p3) & ap_const_lv1_0) & tmp_12_fu_747_p4) & ap_const_lv1_0) & trunc_ln1527_fu_757_p1) & ap_const_lv7_0);

    rngMT19937ICN_uniformRNG_mt_even_0_V_address0_assign_proc : process(trunc_ln223_fu_479_p1, ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_address0, ap_CS_fsm_state2, zext_ln573_fu_627_p1, zext_ln573_2_fu_639_p1)
    begin
        if (((trunc_ln223_fu_479_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= zext_ln573_fu_627_p1(9 - 1 downto 0);
        elsif (((trunc_ln223_fu_479_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= zext_ln573_2_fu_639_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_address0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_address1_assign_proc : process(ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_address1, ap_CS_fsm_state2, zext_ln573_1_fu_633_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= zext_ln573_1_fu_633_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_address1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0_assign_proc : process(trunc_ln223_fu_479_p1, ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_ce0, ap_CS_fsm_state2)
    begin
        if ((((trunc_ln223_fu_479_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((trunc_ln223_fu_479_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_ce0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1_assign_proc : process(ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_ce1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_d0_assign_proc : process(trunc_ln223_fu_479_p1, ap_CS_fsm_state3, ret_6_fu_573_p2, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_d0, ap_CS_fsm_state2)
    begin
        if (((trunc_ln223_fu_479_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= ret_6_fu_573_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_d0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_we0_assign_proc : process(trunc_ln223_fu_479_p1, ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_we0, ap_CS_fsm_state2)
    begin
        if (((trunc_ln223_fu_479_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_even_0_V_we0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0_assign_proc : process(trunc_ln223_fu_479_p1, ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_address0, ap_CS_fsm_state2, zext_ln573_fu_627_p1, zext_ln573_2_fu_639_p1)
    begin
        if (((trunc_ln223_fu_479_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= zext_ln573_2_fu_639_p1(9 - 1 downto 0);
        elsif (((trunc_ln223_fu_479_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= zext_ln573_fu_627_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_address0;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1_assign_proc : process(ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_address1, ap_CS_fsm_state2, zext_ln573_1_fu_633_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= zext_ln573_1_fu_633_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_address1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0_assign_proc : process(trunc_ln223_fu_479_p1, ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0, ap_CS_fsm_state2)
    begin
        if ((((trunc_ln223_fu_479_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((trunc_ln223_fu_479_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1_assign_proc : process(ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0_assign_proc : process(trunc_ln223_fu_479_p1, ap_CS_fsm_state3, ret_6_fu_573_p2, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_d0, ap_CS_fsm_state2)
    begin
        if (((trunc_ln223_fu_479_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 <= ret_6_fu_573_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_d0;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0_assign_proc : process(trunc_ln223_fu_479_p1, ap_CS_fsm_state3, grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_we0, ap_CS_fsm_state2)
    begin
        if (((trunc_ln223_fu_479_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= grp_seedInitialization_fu_375_rngMT19937ICN_uniformRNG_mt_odd_0_V_we0;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1011_fu_1057_p3 <= 
        select_ln999_fu_1011_p3 when (icmp_ln1011_fu_1005_p2(0) = '1') else 
        and_ln1002_1_fu_1035_p2;
    select_ln1017_fu_1117_p3 <= 
        add_ln1017_fu_1111_p2 when (p_Result_s_fu_1097_p3(0) = '1') else 
        sub_ln1018_fu_1105_p2;
    select_ln324_11_fu_1334_p3 <= 
        ap_const_lv32_3DF6315C when (and_ln324_1_reg_1758(0) = '1') else 
        ap_const_lv32_3C48D6A1;
    select_ln324_2_fu_1364_p3 <= 
        ap_const_lv32_40306FAA when (and_ln324_1_reg_1758(0) = '1') else 
        ap_const_lv32_404532D0;
    select_ln324_4_fu_1319_p3 <= 
        ap_const_lv32_3FA742E1 when (and_ln324_1_reg_1758(0) = '1') else 
        ap_const_lv32_3EDB7C55;
    select_ln324_6_fu_1304_p3 <= 
        ap_const_lv32_3E2E52ED when (and_ln324_1_reg_1758(0) = '1') else 
        ap_const_lv32_3C8E06C1;
    select_ln324_9_fu_1349_p3 <= 
        ap_const_lv32_3F3CAC24 when (and_ln324_1_reg_1758(0) = '1') else 
        ap_const_lv32_3E77C954;
    select_ln324_fu_1387_p3 <= 
        ap_const_lv32_3FB63331 when (and_ln324_1_reg_1758(0) = '1') else 
        ap_const_lv32_40D50D8F;
    select_ln389_fu_1416_p3 <= 
        bitcast_ln390_1_fu_1412_p1 when (is_lower_tail_V_reg_1713(0) = '1') else 
        grp_fu_415_p2;
    select_ln590_fu_1650_p3 <= 
        select_ln594_fu_1582_p3 when (and_ln590_fu_1644_p2(0) = '1') else 
        select_ln591_fu_1625_p3;
    select_ln591_fu_1625_p3 <= 
        trunc_ln592_fu_1538_p1 when (and_ln591_fu_1619_p2(0) = '1') else 
        select_ln612_fu_1606_p3;
    select_ln594_fu_1582_p3 <= 
        trunc_ln595_fu_1558_p1 when (icmp_ln594_fu_1542_p2(0) = '1') else 
        select_ln597_fu_1574_p3;
    select_ln597_fu_1574_p3 <= 
        ap_const_lv20_FFFFF when (tmp_24_fu_1566_p3(0) = '1') else 
        ap_const_lv20_0;
    select_ln612_fu_1606_p3 <= 
        shl_ln613_fu_1600_p2 when (icmp_ln612_fu_1590_p2(0) = '1') else 
        ap_const_lv20_0;
    select_ln722_fu_555_p3 <= 
        ap_const_lv32_9908B0DF when (p_Result_4_fu_529_p1(0) = '1') else 
        ap_const_lv32_0;
    select_ln999_fu_1011_p3 <= 
        icmp_ln1002_fu_973_p2 when (icmp_ln999_fu_929_p2(0) = '1') else 
        p_Result_6_fu_997_p3;
        sext_ln590_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_1520_p3),32));

    sext_ln590cast_fu_1596_p1 <= sext_ln590_fu_1528_p1(20 - 1 downto 0);
    sh_amt_fu_1520_p3 <= 
        add_ln590_fu_1508_p2 when (icmp_ln590_fu_1502_p2(0) = '1') else 
        sub_ln590_fu_1514_p2;
    shl_ln1002_fu_955_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_913_p2(31-1 downto 0)))));
    shl_ln1012_fu_1051_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1010_fu_979_p1),to_integer(unsigned('0' & zext_ln1012_fu_1047_p1(31-1 downto 0)))));
    shl_ln613_fu_1600_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln592_fu_1538_p1),to_integer(unsigned('0' & sext_ln590cast_fu_1596_p1(20-1 downto 0)))));
    sub_ln1000_fu_939_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln1000_fu_935_p1));
    sub_ln1012_fu_1041_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln997_fu_907_p2));
    sub_ln1018_fu_1105_p2 <= std_logic_vector(unsigned(ap_const_lv8_7E) - unsigned(trunc_ln996_fu_903_p1));
    sub_ln590_fu_1514_p2 <= std_logic_vector(unsigned(ap_const_lv12_F) - unsigned(F2_fu_1486_p2));
    sub_ln997_fu_907_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_895_p3));
    t_load_load_fu_465_p1 <= t;
    tmp_10_fu_687_p3 <= pre_result_V_2_fu_682_p2(24 downto 24);
    tmp_11_fu_705_p3 <= pre_result_V_2_fu_682_p2(17 downto 17);
    tmp_12_fu_747_p4 <= pre_result_V_2_fu_682_p2(3 downto 2);
    tmp_13_fu_713_p3 <= pre_result_V_2_fu_682_p2(14 downto 14);
    tmp_14_fu_731_p3 <= pre_result_V_2_fu_682_p2(7 downto 7);
    tmp_15_fu_807_p4 <= pre_result_V_3_fu_801_p2(16 downto 14);
    tmp_16_fu_739_p3 <= pre_result_V_2_fu_682_p2(5 downto 5);
    tmp_17_fu_817_p4 <= pre_result_V_3_fu_801_p2(12 downto 7);
    tmp_18_fu_827_p4 <= pre_result_V_3_fu_801_p2(3 downto 2);
    tmp_19_fu_919_p4 <= lsb_index_fu_913_p2(31 downto 1);
    tmp_1_fu_1164_p4 <= bitcast_ln314_fu_1161_p1(30 downto 23);
    tmp_20_fu_983_p3 <= lsb_index_fu_913_p2(31 downto 31);
    tmp_23_fu_1492_p4 <= F2_fu_1486_p2(11 downto 4);
    tmp_24_fu_1566_p3 <= bitcast_ln709_fu_1562_p1(31 downto 31);
    tmp_3_fu_533_p4 <= rngMT19937ICN_uniformRNG_x_k_p_1_V(30 downto 1);
    tmp_4_fu_517_p3 <= rngMT19937ICN_uniformRNG_x_k_p_0_V(31 downto 31);
    tmp_6_fu_695_p4 <= pre_result_V_2_fu_682_p2(21 downto 19);
    tmp_7_fu_1235_p4 <= bitcast_ln324_fu_1232_p1(30 downto 23);
    tmp_V_fu_543_p3 <= (tmp_4_fu_517_p3 & tmp_3_fu_533_p4);
    tmp_fu_1125_p3 <= (ap_const_lv1_0 & select_ln1017_fu_1117_p3);
    tmp_s_fu_721_p4 <= pre_result_V_2_fu_682_p2(12 downto 11);
    tmp_uniform_fu_1153_p3 <= 
        ap_const_lv32_0 when (icmp_ln988_fu_879_p2(0) = '1') else 
        bitcast_ln751_fu_1149_p1;
    trunc_ln1000_fu_935_p1 <= sub_ln997_fu_907_p2(6 - 1 downto 0);
    trunc_ln1527_fu_757_p1 <= pre_result_V_2_fu_682_p2(1 - 1 downto 0);
    trunc_ln223_fu_479_p1 <= rngMT19937ICN_uniformRNG_addr_head_V(1 - 1 downto 0);
    trunc_ln314_fu_1174_p1 <= bitcast_ln314_fu_1161_p1(23 - 1 downto 0);
    trunc_ln324_fu_1245_p1 <= bitcast_ln324_fu_1232_p1(23 - 1 downto 0);
    trunc_ln564_fu_1427_p1 <= ireg_fu_1423_p1(63 - 1 downto 0);
    trunc_ln574_fu_1449_p1 <= ireg_fu_1423_p1(52 - 1 downto 0);
    trunc_ln592_fu_1538_p1 <= man_V_2_fu_1479_p3(20 - 1 downto 0);
    trunc_ln595_fu_1558_p1 <= ashr_ln595_fu_1552_p2(20 - 1 downto 0);
    trunc_ln996_fu_903_p1 <= l_fu_895_p3(8 - 1 downto 0);
    xor_ln1002_fu_991_p2 <= (tmp_20_fu_983_p3 xor ap_const_lv1_1);
    xor_ln1529_fu_567_p2 <= (zext_ln1028_fu_551_p1 xor select_ln722_fu_555_p3);
    xor_ln323_fu_1211_p2 <= (bitcast_ln323_fu_1208_p1 xor ap_const_lv32_80000000);
    xor_ln390_fu_1406_p2 <= (bitcast_ln390_fu_1402_p1 xor ap_const_lv32_80000000);
    xor_ln580_fu_1614_p2 <= (icmp_ln580_reg_1845 xor ap_const_lv1_1);
    xor_ln591_fu_1638_p2 <= (or_ln591_fu_1633_p2 xor ap_const_lv1_1);
    z_3_fu_1278_p3 <= 
        z_reg_1720 when (or_ln314_1_reg_1737(0) = '1') else 
        reg_440;
    z_4_fu_1284_p3 <= 
        z_reg_1720 when (and_ln324_1_reg_1758(0) = '1') else 
        z_3_fu_1278_p3;
    z_fu_1202_p3 <= 
        tmp_uniform_reg_1699 when (is_lower_tail_V_reg_1713(0) = '1') else 
        grp_fu_397_p2;
    zext_ln1000_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1000_fu_939_p2),32));
    zext_ln1010_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pre_result_V_fu_873_p2),64));
    zext_ln1011_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1011_fu_1019_p2),64));
    zext_ln1012_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1012_fu_1041_p2),64));
    zext_ln1014_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1011_fu_1057_p3),64));
    zext_ln1015_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_4_fu_1083_p4),64));
    zext_ln1028_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_543_p3),32));
    zext_ln1676_1_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_3_fu_859_p4),32));
    zext_ln1676_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_669_p4),32));
    zext_ln494_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_reg_1835),12));
    zext_ln573_1_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_1_fu_607_p4),64));
    zext_ln573_2_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_2_fu_617_p4),64));
    zext_ln573_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_s_fu_597_p4),64));
    zext_ln578_fu_1469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_fu_1462_p3),54));
    zext_ln595_fu_1548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln590_fu_1528_p1),54));
end behav;
