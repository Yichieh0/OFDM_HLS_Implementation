// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module channel_gen_channel_gen_Pipeline_VITIS_LOOP_207_15 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_i_i_i131_le3933,
        conv_i_i_i205_le3926,
        TAPS_NUM_5_reload,
        n_9taps_V_address0,
        n_9taps_V_ce0,
        n_9taps_V_q0,
        x_real_9taps_V_address0,
        x_real_9taps_V_ce0,
        x_real_9taps_V_q0,
        x_imag_9taps_V_address0,
        x_imag_9taps_V_ce0,
        x_imag_9taps_V_q0,
        lhs_V_6_out,
        lhs_V_6_out_ap_vld,
        lhs_V_out,
        lhs_V_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [19:0] conv_i_i_i131_le3933;
input  [19:0] conv_i_i_i205_le3926;
input  [30:0] TAPS_NUM_5_reload;
output  [3:0] n_9taps_V_address0;
output   n_9taps_V_ce0;
input  [19:0] n_9taps_V_q0;
output  [3:0] x_real_9taps_V_address0;
output   x_real_9taps_V_ce0;
input  [19:0] x_real_9taps_V_q0;
output  [3:0] x_imag_9taps_V_address0;
output   x_imag_9taps_V_ce0;
input  [19:0] x_imag_9taps_V_q0;
output  [19:0] lhs_V_6_out;
output   lhs_V_6_out_ap_vld;
output  [19:0] lhs_V_out;
output   lhs_V_out_ap_vld;

reg ap_idle;
reg n_9taps_V_ce0;
reg x_real_9taps_V_ce0;
reg x_imag_9taps_V_ce0;
reg lhs_V_6_out_ap_vld;
reg lhs_V_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1057_fu_182_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] weight_9taps_address0;
reg    weight_9taps_ce0;
wire   [14:0] weight_9taps_q0;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln573_fu_194_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_V_fu_60;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_V_3;
wire   [3:0] i_V_4_fu_188_p2;
reg   [19:0] lhs_V_fu_64;
reg   [19:0] lhs_V_6_fu_68;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] zext_ln1057_fu_178_p1;
wire   [31:0] TAPS_NUM_5_reload_cast_fu_156_p1;
wire   [19:0] zext_ln712_fu_213_p1;
wire   [19:0] r_V_fu_217_p2;
wire  signed [19:0] mul_ln1245_fu_239_p1;
wire  signed [34:0] sext_ln1171_1_fu_227_p1;
wire   [34:0] lhs_V_5_fu_231_p3;
wire   [34:0] mul_ln1245_fu_239_p2;
wire   [34:0] ret_V_fu_245_p2;
wire  signed [19:0] mul_ln1245_1_fu_273_p1;
wire   [34:0] lhs_V_7_fu_265_p3;
wire   [34:0] mul_ln1245_1_fu_273_p2;
wire   [34:0] ret_V_12_fu_279_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

channel_gen_channel_gen_Pipeline_VITIS_LOOP_207_15_weight_9taps #(
    .DataWidth( 15 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_9taps_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_9taps_address0),
    .ce0(weight_9taps_ce0),
    .q0(weight_9taps_q0)
);

channel_gen_mul_20s_20s_35_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 35 ))
mul_20s_20s_35_1_1_U150(
    .din0(x_real_9taps_V_q0),
    .din1(mul_ln1245_fu_239_p1),
    .dout(mul_ln1245_fu_239_p2)
);

channel_gen_mul_20s_20s_35_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 35 ))
mul_20s_20s_35_1_1_U151(
    .din0(x_imag_9taps_V_q0),
    .din1(mul_ln1245_1_fu_273_p1),
    .dout(mul_ln1245_1_fu_273_p2)
);

channel_gen_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1057_fu_182_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_V_fu_60 <= i_V_4_fu_188_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_fu_60 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            lhs_V_6_fu_68 <= conv_i_i_i131_le3933;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            lhs_V_6_fu_68 <= {{ret_V_12_fu_279_p2[34:15]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            lhs_V_fu_64 <= conv_i_i_i205_le3926;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            lhs_V_fu_64 <= {{ret_V_fu_245_p2[34:15]}};
        end
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_182_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_V_3 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_V_3 = i_V_fu_60;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_182_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lhs_V_6_out_ap_vld = 1'b1;
    end else begin
        lhs_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_182_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lhs_V_out_ap_vld = 1'b1;
    end else begin
        lhs_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_9taps_V_ce0 = 1'b1;
    end else begin
        n_9taps_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_9taps_ce0 = 1'b1;
    end else begin
        weight_9taps_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_imag_9taps_V_ce0 = 1'b1;
    end else begin
        x_imag_9taps_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_real_9taps_V_ce0 = 1'b1;
    end else begin
        x_real_9taps_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign TAPS_NUM_5_reload_cast_fu_156_p1 = TAPS_NUM_5_reload;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign i_V_4_fu_188_p2 = (ap_sig_allocacmp_i_V_3 + 4'd1);

assign icmp_ln1057_fu_182_p2 = ((zext_ln1057_fu_178_p1 < TAPS_NUM_5_reload_cast_fu_156_p1) ? 1'b1 : 1'b0);

assign lhs_V_5_fu_231_p3 = {{lhs_V_fu_64}, {15'd0}};

assign lhs_V_6_out = lhs_V_6_fu_68;

assign lhs_V_7_fu_265_p3 = {{lhs_V_6_fu_68}, {15'd0}};

assign lhs_V_out = lhs_V_fu_64;

assign mul_ln1245_1_fu_273_p1 = sext_ln1171_1_fu_227_p1;

assign mul_ln1245_fu_239_p1 = sext_ln1171_1_fu_227_p1;

assign n_9taps_V_address0 = zext_ln573_fu_194_p1;

assign r_V_fu_217_p2 = (n_9taps_V_q0 + zext_ln712_fu_213_p1);

assign ret_V_12_fu_279_p2 = (lhs_V_7_fu_265_p3 + mul_ln1245_1_fu_273_p2);

assign ret_V_fu_245_p2 = (lhs_V_5_fu_231_p3 + mul_ln1245_fu_239_p2);

assign sext_ln1171_1_fu_227_p1 = $signed(r_V_fu_217_p2);

assign weight_9taps_address0 = zext_ln573_fu_194_p1;

assign x_imag_9taps_V_address0 = zext_ln573_fu_194_p1;

assign x_real_9taps_V_address0 = zext_ln573_fu_194_p1;

assign zext_ln1057_fu_178_p1 = ap_sig_allocacmp_i_V_3;

assign zext_ln573_fu_194_p1 = ap_sig_allocacmp_i_V_3;

assign zext_ln712_fu_213_p1 = weight_9taps_q0;

endmodule //channel_gen_channel_gen_Pipeline_VITIS_LOOP_207_15
