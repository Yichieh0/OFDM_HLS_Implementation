-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity channel_gen_seedInitialization is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_0_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_x_k_p_1_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_x_k_p_2_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_x_k_p_m_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_addr_head_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    rngMT19937ICN_uniformRNG_addr_head_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of channel_gen_seedInitialization is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_10DD0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000110111010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_C6 : STD_LOGIC_VECTOR (8 downto 0) := "011000110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal rngMT19937ICN_uniformRNG_mt_even_1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal rngMT19937ICN_uniformRNG_mt_even_1_V_ce0 : STD_LOGIC;
    signal rngMT19937ICN_uniformRNG_mt_even_1_V_we0 : STD_LOGIC;
    signal rngMT19937ICN_uniformRNG_mt_even_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_done : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_idle : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_ready : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_ce0 : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_we0 : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : STD_LOGIC;
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm_state2 : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component channel_gen_seedInitialization_Pipeline_SEED_INIT_LOOP IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_mt_even_1_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        rngMT19937ICN_uniformRNG_mt_even_1_V_ce0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_1_V_we0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_even_1_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : OUT STD_LOGIC;
        rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component channel_gen_seedInitialization_Pipeline_SEED_INIT_LOOP_rngMT19937ICN_uniformRNG_mt_odd_1_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    rngMT19937ICN_uniformRNG_mt_even_1_V_U : component channel_gen_seedInitialization_Pipeline_SEED_INIT_LOOP_rngMT19937ICN_uniformRNG_mt_odd_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rngMT19937ICN_uniformRNG_mt_even_1_V_address0,
        ce0 => rngMT19937ICN_uniformRNG_mt_even_1_V_ce0,
        we0 => rngMT19937ICN_uniformRNG_mt_even_1_V_we0,
        d0 => rngMT19937ICN_uniformRNG_mt_even_1_V_d0);

    grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65 : component channel_gen_seedInitialization_Pipeline_SEED_INIT_LOOP
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start,
        ap_done => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_done,
        ap_idle => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_idle,
        ap_ready => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_ready,
        rngMT19937ICN_uniformRNG_mt_even_0_V_address0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_address0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_ce0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_we0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_d0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_d0,
        rngMT19937ICN_uniformRNG_mt_even_1_V_address0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_address0,
        rngMT19937ICN_uniformRNG_mt_even_1_V_ce0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_ce0,
        rngMT19937ICN_uniformRNG_mt_even_1_V_we0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_we0,
        rngMT19937ICN_uniformRNG_mt_even_1_V_d0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_d0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_address0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_we0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 => grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_ready = ap_const_logic_1)) then 
                    grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_NS_fsm_state2 <= ap_NS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_done)
    begin
        if ((grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_ap_start_reg;
    rngMT19937ICN_uniformRNG_addr_head_V <= ap_const_lv10_0;

    rngMT19937ICN_uniformRNG_addr_head_V_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rngMT19937ICN_uniformRNG_addr_head_V_ap_vld <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_addr_head_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_address0_assign_proc : process(ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_address0, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= ap_const_lv9_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= ap_const_lv9_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_address0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= ap_const_lv9_0;

    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_ce0, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_ce0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_d0_assign_proc : process(ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_d0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= ap_const_lv32_10DD0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_d0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_0_V_we0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_1_V_address0_assign_proc : process(ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rngMT19937ICN_uniformRNG_mt_even_1_V_address0 <= ap_const_lv9_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_1_V_address0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_address0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_1_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_1_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_ce0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            rngMT19937ICN_uniformRNG_mt_even_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_1_V_ce0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_ce0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_1_V_d0_assign_proc : process(ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_d0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rngMT19937ICN_uniformRNG_mt_even_1_V_d0 <= ap_const_lv32_10DD0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_1_V_d0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_d0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_1_V_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            rngMT19937ICN_uniformRNG_mt_even_1_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_even_1_V_we0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_even_1_V_we0;
        else 
            rngMT19937ICN_uniformRNG_mt_even_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0_assign_proc : process(grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_address0, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= ap_const_lv9_C6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_address0;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= ap_const_lv9_0;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0_assign_proc : process(grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_d0;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= grp_seedInitialization_Pipeline_SEED_INIT_LOOP_fu_65_rngMT19937ICN_uniformRNG_mt_odd_0_V_we0;
    rngMT19937ICN_uniformRNG_x_k_p_0_V <= rngMT19937ICN_uniformRNG_mt_even_0_V_q1;

    rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_x_k_p_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_1_V <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;

    rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_x_k_p_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_2_V <= rngMT19937ICN_uniformRNG_mt_even_0_V_q0;

    rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_x_k_p_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_m_V <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q0;

    rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_x_k_p_m_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
