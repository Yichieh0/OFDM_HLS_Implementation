-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity channel_gen_pow_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    exp : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of channel_gen_pow_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv122_935D8DDDAAA8AC16E : STD_LOGIC_VECTOR (121 downto 0) := "00000000000000000000000000000000000000000000000000000010010011010111011000110111011101101010101010100010101100000101101110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv71_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (70 downto 0) := "10110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv58_10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_16_fu_267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_16_reg_1273 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Result_16_reg_1273_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_16_reg_1273_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_16_reg_1273_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_16_reg_1273_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1280_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1280_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1280_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1280_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_reg_1286 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_reg_1286_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_reg_1286_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_reg_1286_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_reg_1286_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_1_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_1_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_1_reg_1292_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_1_reg_1292_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_1_reg_1292_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1003_1_reg_1292_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal m_frac_l_V_fu_343_p2 : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1298 : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1298_pp0_iter1_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1298_pp0_iter2_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1298_pp0_iter3_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1298_pp0_iter4_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal p_Result_18_reg_1303 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_18_reg_1303_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_reg_1313 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln_reg_1313_pp0_iter1_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln_reg_1313_pp0_iter2_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal icmp_ln657_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1318_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1318_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1318_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1318_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_reg_1323_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_reg_1323_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_reg_1323_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_reg_1323_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_8_fu_631_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1333 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1333_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal m_diff_hi_V_reg_1339 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_fu_674_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1344 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_fu_684_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1350 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_fu_694_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_reg_1355 : STD_LOGIC_VECTOR (34 downto 0);
    signal exp_Z1P_m_1_V_reg_1380 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln527_1_fu_708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln527_2_fu_713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln527_3_fu_718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln527_fu_723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_275_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln510_fu_289_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_38_fu_285_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_17_fu_317_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_1_fu_325_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_2_fu_331_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal m_frac_l_V_fu_343_p1 : STD_LOGIC_VECTOR (68 downto 0);
    signal m_exp_fu_293_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1364_fu_365_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_fu_357_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1364_fu_371_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_fu_375_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1340_fu_383_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1340cast_fu_391_p1 : STD_LOGIC_VECTOR (121 downto 0);
    signal r_V_fu_395_p2 : STD_LOGIC_VECTOR (121 downto 0);
    signal sext_ln568_fu_349_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal zext_ln1340_fu_387_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal r_V_1_fu_405_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal sext_ln1339_fu_401_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal trunc_ln1339_1_fu_411_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal m_fix_l_fu_415_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal zext_ln1306_fu_423_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_2_fu_427_p2 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_3_fu_433_p2 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln1306_fu_455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1306_1_fu_459_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal r_V_5_fu_463_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal isNeg_1_fu_473_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_2_fu_481_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1306_1_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1306_2_fu_493_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal r_V_6_fu_497_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal sext_ln1306_1cast_fu_507_p1 : STD_LOGIC_VECTOR (121 downto 0);
    signal r_V_7_fu_511_p2 : STD_LOGIC_VECTOR (121 downto 0);
    signal trunc_ln1305_fu_503_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln1305_fu_517_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal tmp_28_fu_447_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_8_fu_521_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal trunc_ln1339_2_fu_469_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal select_ln578_fu_529_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal m_fix_hi_V_fu_537_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_17_fu_439_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln568_1_fu_353_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal rhs_fu_581_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1262_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln856_fu_608_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_cast_fu_592_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln856_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_617_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_s_fu_601_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln855_fu_623_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_12_fu_643_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal trunc_ln666_1_fu_649_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal m_diff_V_fu_659_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal Z4_ind_fu_698_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_fu_727_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln666_fu_737_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln666_1_fu_740_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_10_fu_750_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_9_fu_744_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_14_fu_771_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_14_fu_771_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_14_fu_771_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal trunc_ln666_4_fu_777_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln666_2_fu_787_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln666_fu_791_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln666_3_fu_797_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1199_fu_759_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_20_fu_807_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal exp_Z2_m_1_V_fu_817_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal exp_Z2P_m_1_V_fu_801_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_15_fu_834_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_15_fu_834_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal lhs_V_1_fu_840_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_15_fu_834_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal trunc_ln666_5_fu_855_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln666_4_fu_865_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln666_2_fu_869_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln666_5_fu_875_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln1199_1_fu_851_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_V_fu_879_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal xor_ln1007_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_NaN_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_Z1_hi_V_fu_931_p4 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_19_fu_954_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_19_fu_954_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_11_fu_941_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal r_V_19_fu_954_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln1199_fu_976_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal trunc_ln1199_2_fu_992_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal lhs_V_4_fu_960_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln1199_2_fu_968_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal trunc_ln1199_1_fu_996_p3 : STD_LOGIC_VECTOR (104 downto 0);
    signal zext_ln1199_4_fu_988_p1 : STD_LOGIC_VECTOR (104 downto 0);
    signal trunc_ln1_fu_980_p3 : STD_LOGIC_VECTOR (105 downto 0);
    signal zext_ln1199_3_fu_972_p1 : STD_LOGIC_VECTOR (105 downto 0);
    signal ret_V_6_fu_1004_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_33_fu_1022_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_1030_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_2_fu_1035_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_34_fu_1046_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln657_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1068_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1199_2_fu_1016_p2 : STD_LOGIC_VECTOR (105 downto 0);
    signal add_ln1199_1_fu_1010_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal tmp_fu_1089_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_s_fu_1099_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln177_fu_1117_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_exp_V_fu_1121_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_39_fu_1109_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_19_fu_1127_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln407_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln460_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln407_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln467_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_1_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln460_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_2_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln657_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln657_1_fu_1176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln658_fu_1075_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln521_fu_1137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln407_fu_914_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln657_fu_1182_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln964_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln460_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1023_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln657_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_1_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_3_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1023_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln460_1_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1023_1_fu_1248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1023_1_fu_1240_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln407_1_fu_1190_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1262_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal r_V_14_fu_771_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_14_fu_771_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_15_fu_834_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal r_V_15_fu_834_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal r_V_19_fu_954_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_19_fu_954_p10 : STD_LOGIC_VECTOR (99 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component channel_gen_mul_54s_69ns_122_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (53 downto 0);
        din1 : IN STD_LOGIC_VECTOR (68 downto 0);
        dout : OUT STD_LOGIC_VECTOR (121 downto 0) );
    end component;


    component channel_gen_mul_13s_71s_71_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (70 downto 0);
        dout : OUT STD_LOGIC_VECTOR (70 downto 0) );
    end component;


    component channel_gen_mul_43ns_36ns_79_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component channel_gen_mul_49ns_44ns_93_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (48 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component channel_gen_mul_50ns_50ns_100_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component channel_gen_mac_muladd_16s_15ns_19s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component channel_gen_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component channel_gen_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component channel_gen_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component channel_gen_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58bkb
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component channel_gen_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0cud
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0,
        address1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1,
        ce1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1,
        q1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component channel_gen_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0dEe
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    mul_54s_69ns_122_1_1_U21 : component channel_gen_mul_54s_69ns_122_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 54,
        din1_WIDTH => 69,
        dout_WIDTH => 122)
    port map (
        din0 => e_frac_V_2_fu_331_p3,
        din1 => m_frac_l_V_fu_343_p1,
        dout => m_frac_l_V_fu_343_p2);

    mul_13s_71s_71_1_1_U22 : component channel_gen_mul_13s_71s_71_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 71,
        dout_WIDTH => 71)
    port map (
        din0 => ret_V_8_fu_631_p3,
        din1 => ap_const_lv71_58B90BFBE8E7BCD5E4,
        dout => r_V_12_fu_643_p2);

    mul_43ns_36ns_79_1_1_U23 : component channel_gen_mul_43ns_36ns_79_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 43,
        din1_WIDTH => 36,
        dout_WIDTH => 79)
    port map (
        din0 => r_V_14_fu_771_p0,
        din1 => r_V_14_fu_771_p1,
        dout => r_V_14_fu_771_p2);

    mul_49ns_44ns_93_1_1_U24 : component channel_gen_mul_49ns_44ns_93_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 49,
        din1_WIDTH => 44,
        dout_WIDTH => 93)
    port map (
        din0 => r_V_15_fu_834_p0,
        din1 => r_V_15_fu_834_p1,
        dout => r_V_15_fu_834_p2);

    mul_50ns_50ns_100_1_1_U25 : component channel_gen_mul_50ns_50ns_100_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        din0 => r_V_19_fu_954_p0,
        din1 => r_V_19_fu_954_p1,
        dout => r_V_19_fu_954_p2);

    mac_muladd_16s_15ns_19s_31_4_1_U26 : component channel_gen_mac_muladd_16s_15ns_19s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_V_fu_537_p4,
        din1 => grp_fu_1262_p1,
        din2 => rhs_fu_581_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1262_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_V_reg_1344 <= m_diff_V_fu_659_p2(50 downto 43);
                Z3_V_reg_1350 <= m_diff_V_fu_659_p2(42 downto 35);
                Z4_reg_1355 <= Z4_fu_694_p1;
                exp_Z1P_m_1_V_reg_1380 <= exp_Z1P_m_1_l_V_fu_879_p2(51 downto 2);
                icmp_ln1003_1_reg_1292_pp0_iter2_reg <= icmp_ln1003_1_reg_1292_pp0_iter1_reg;
                icmp_ln1003_1_reg_1292_pp0_iter3_reg <= icmp_ln1003_1_reg_1292_pp0_iter2_reg;
                icmp_ln1003_1_reg_1292_pp0_iter4_reg <= icmp_ln1003_1_reg_1292_pp0_iter3_reg;
                icmp_ln1003_reg_1286_pp0_iter2_reg <= icmp_ln1003_reg_1286_pp0_iter1_reg;
                icmp_ln1003_reg_1286_pp0_iter3_reg <= icmp_ln1003_reg_1286_pp0_iter2_reg;
                icmp_ln1003_reg_1286_pp0_iter4_reg <= icmp_ln1003_reg_1286_pp0_iter3_reg;
                icmp_ln1506_reg_1323_pp0_iter2_reg <= icmp_ln1506_reg_1323_pp0_iter1_reg;
                icmp_ln1506_reg_1323_pp0_iter3_reg <= icmp_ln1506_reg_1323_pp0_iter2_reg;
                icmp_ln1506_reg_1323_pp0_iter4_reg <= icmp_ln1506_reg_1323_pp0_iter3_reg;
                icmp_ln657_reg_1318_pp0_iter2_reg <= icmp_ln657_reg_1318_pp0_iter1_reg;
                icmp_ln657_reg_1318_pp0_iter3_reg <= icmp_ln657_reg_1318_pp0_iter2_reg;
                icmp_ln657_reg_1318_pp0_iter4_reg <= icmp_ln657_reg_1318_pp0_iter3_reg;
                m_diff_hi_V_reg_1339 <= m_diff_V_fu_659_p2(58 downto 51);
                m_frac_l_V_reg_1298_pp0_iter2_reg <= m_frac_l_V_reg_1298_pp0_iter1_reg;
                m_frac_l_V_reg_1298_pp0_iter3_reg <= m_frac_l_V_reg_1298_pp0_iter2_reg;
                m_frac_l_V_reg_1298_pp0_iter4_reg <= m_frac_l_V_reg_1298_pp0_iter3_reg;
                p_Result_16_reg_1273_pp0_iter2_reg <= p_Result_16_reg_1273_pp0_iter1_reg;
                p_Result_16_reg_1273_pp0_iter3_reg <= p_Result_16_reg_1273_pp0_iter2_reg;
                p_Result_16_reg_1273_pp0_iter4_reg <= p_Result_16_reg_1273_pp0_iter3_reg;
                ret_V_8_reg_1333 <= ret_V_8_fu_631_p3;
                ret_V_8_reg_1333_pp0_iter4_reg <= ret_V_8_reg_1333;
                trunc_ln_reg_1313_pp0_iter2_reg <= trunc_ln_reg_1313_pp0_iter1_reg;
                y_is_0_reg_1280_pp0_iter2_reg <= y_is_0_reg_1280_pp0_iter1_reg;
                y_is_0_reg_1280_pp0_iter3_reg <= y_is_0_reg_1280_pp0_iter2_reg;
                y_is_0_reg_1280_pp0_iter4_reg <= y_is_0_reg_1280_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1003_1_reg_1292 <= icmp_ln1003_1_fu_311_p2;
                icmp_ln1003_1_reg_1292_pp0_iter1_reg <= icmp_ln1003_1_reg_1292;
                icmp_ln1003_reg_1286 <= icmp_ln1003_fu_305_p2;
                icmp_ln1003_reg_1286_pp0_iter1_reg <= icmp_ln1003_reg_1286;
                icmp_ln1506_reg_1323 <= icmp_ln1506_fu_575_p2;
                icmp_ln1506_reg_1323_pp0_iter1_reg <= icmp_ln1506_reg_1323;
                icmp_ln657_reg_1318 <= icmp_ln657_fu_569_p2;
                icmp_ln657_reg_1318_pp0_iter1_reg <= icmp_ln657_reg_1318;
                m_frac_l_V_reg_1298 <= m_frac_l_V_fu_343_p2;
                m_frac_l_V_reg_1298_pp0_iter1_reg <= m_frac_l_V_reg_1298;
                p_Result_16_reg_1273 <= data_V_fu_263_p1(63 downto 63);
                p_Result_16_reg_1273_pp0_iter1_reg <= p_Result_16_reg_1273;
                p_Result_18_reg_1303 <= select_ln578_fu_529_p3(129 downto 129);
                p_Result_18_reg_1303_pp0_iter1_reg <= p_Result_18_reg_1303;
                trunc_ln_reg_1313 <= select_ln578_fu_529_p3(117 downto 59);
                trunc_ln_reg_1313_pp0_iter1_reg <= trunc_ln_reg_1313;
                y_is_0_reg_1280 <= y_is_0_fu_299_p2;
                y_is_0_reg_1280_pp0_iter1_reg <= y_is_0_reg_1280;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z2_V_fu_674_p4 <= m_diff_V_fu_659_p2(50 downto 43);
    Z3_V_fu_684_p4 <= m_diff_V_fu_659_p2(42 downto 35);
    Z4_fu_694_p1 <= m_diff_V_fu_659_p2(35 - 1 downto 0);
    Z4_ind_fu_698_p4 <= m_diff_V_fu_659_p2(34 downto 27);
    add_ln1199_1_fu_1010_p2 <= std_logic_vector(unsigned(trunc_ln1199_1_fu_996_p3) + unsigned(zext_ln1199_4_fu_988_p1));
    add_ln1199_2_fu_1016_p2 <= std_logic_vector(unsigned(trunc_ln1_fu_980_p3) + unsigned(zext_ln1199_3_fu_972_p1));
    add_ln666_2_fu_869_p2 <= std_logic_vector(unsigned(exp_Z2P_m_1_V_fu_801_p2) + unsigned(zext_ln666_4_fu_865_p1));
    add_ln666_fu_791_p2 <= std_logic_vector(unsigned(ret_V_9_fu_744_p2) + unsigned(zext_ln666_2_fu_787_p1));
    and_ln1023_1_fu_1228_p2 <= (and_ln467_2_fu_1170_p2 and and_ln1023_fu_1222_p2);
    and_ln1023_fu_1222_p2 <= (xor_ln657_fu_1216_p2 and icmp_ln1023_fu_1083_p2);
    and_ln460_1_fu_1204_p2 <= (y_is_inf_fu_895_p2 and and_ln460_fu_1198_p2);
    and_ln460_fu_1198_p2 <= (xor_ln964_fu_921_p2 and xor_ln407_fu_1141_p2);
    and_ln467_1_fu_1164_p2 <= (xor_ln467_fu_1158_p2 and xor_ln407_fu_1141_p2);
    and_ln467_2_fu_1170_p2 <= (or_ln460_fu_1153_p2 and and_ln467_1_fu_1164_p2);
    and_ln467_3_fu_1210_p2 <= (xor_ln407_fu_1141_p2 and and_ln467_fu_926_p2);
    and_ln467_fu_926_p2 <= (y_is_inf_fu_895_p2 and p_Result_16_reg_1273_pp0_iter4_reg);
    and_ln657_1_fu_1176_p2 <= (or_ln657_fu_1062_p2 and and_ln467_2_fu_1170_p2);
    and_ln657_fu_1042_p2 <= (icmp_ln657_reg_1318_pp0_iter4_reg and icmp_ln1506_reg_1323_pp0_iter4_reg);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_idle_pp0_0to4 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        select_ln1023_1_fu_1240_p3 when (or_ln1023_1_fu_1248_p2(0) = '1') else 
        select_ln407_1_fu_1190_p3;
    bitcast_ln521_fu_1137_p1 <= p_Result_19_fu_1127_p4;
    data_V_fu_263_p1 <= exp;
    e_frac_V_1_fu_325_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_17_fu_317_p3));
    e_frac_V_2_fu_331_p3 <= 
        e_frac_V_1_fu_325_p2 when (p_Result_16_fu_267_p3(0) = '1') else 
        p_Result_17_fu_317_p3;
    exp_Z1P_m_1_l_V_fu_879_p2 <= std_logic_vector(unsigned(zext_ln666_5_fu_875_p1) + unsigned(zext_ln1199_1_fu_851_p1));
    exp_Z1_hi_V_fu_931_p4 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(57 downto 8);
    exp_Z2P_m_1_V_fu_801_p2 <= std_logic_vector(unsigned(zext_ln666_3_fu_797_p1) + unsigned(zext_ln1199_fu_759_p1));
    exp_Z2_m_1_V_fu_817_p4 <= ((Z2_V_reg_1344 & ap_const_lv1_0) & tmp_20_fu_807_p4);
    grp_fu_1262_p1 <= ap_const_lv31_5C55(15 - 1 downto 0);
    icmp_ln1003_1_fu_311_p2 <= "1" when (tmp_38_fu_285_p1 = ap_const_lv52_0) else "0";
    icmp_ln1003_fu_305_p2 <= "1" when (tmp_37_fu_275_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln1019_fu_1056_p2 <= "1" when (signed(tmp_34_fu_1046_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln1023_fu_1083_p2 <= "1" when (signed(r_exp_V_2_fu_1035_p3) < signed(ap_const_lv13_1C02)) else "0";
    icmp_ln1506_fu_575_p2 <= "0" when (r_V_17_fu_439_p3 = sext_ln568_1_fu_353_p1) else "1";
    icmp_ln657_fu_569_p2 <= "1" when (signed(m_exp_fu_293_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln856_fu_611_p2 <= "1" when (trunc_ln856_fu_608_p1 = ap_const_lv18_0) else "0";
    isNeg_1_fu_473_p3 <= sub_ln1364_fu_365_p2(10 downto 10);
    isNeg_fu_357_p3 <= m_exp_fu_293_p2(11 downto 11);
    lhs_V_1_fu_840_p5 <= (((Z2_V_reg_1344 & ap_const_lv1_0) & tmp_20_fu_807_p4) & ap_const_lv2_0);
    lhs_V_4_fu_960_p3 <= (ret_V_11_fu_941_p2 & ap_const_lv49_0);
    m_diff_V_fu_659_p2 <= std_logic_vector(unsigned(trunc_ln_reg_1313_pp0_iter2_reg) - unsigned(trunc_ln666_1_fu_649_p4));
    m_exp_fu_293_p2 <= std_logic_vector(unsigned(zext_ln510_fu_289_p1) + unsigned(ap_const_lv12_C01));
    m_fix_hi_V_fu_537_p4 <= select_ln578_fu_529_p3(129 downto 114);
    m_fix_l_fu_415_p3 <= 
        sext_ln1339_fu_401_p1 when (isNeg_fu_357_p3(0) = '1') else 
        trunc_ln1339_1_fu_411_p1;
    m_frac_l_V_fu_343_p1 <= ap_const_lv122_935D8DDDAAA8AC16E(69 - 1 downto 0);
    or_ln1023_1_fu_1248_p2 <= (or_ln1023_fu_1234_p2 or and_ln460_1_fu_1204_p2);
    or_ln1023_fu_1234_p2 <= (and_ln467_3_fu_1210_p2 or and_ln1023_1_fu_1228_p2);
    or_ln407_fu_909_p2 <= (y_is_NaN_fu_904_p2 or y_is_0_reg_1280_pp0_iter4_reg);
    or_ln460_fu_1153_p2 <= (xor_ln460_fu_1147_p2 or p_Result_16_reg_1273_pp0_iter4_reg);
    or_ln657_fu_1062_p2 <= (icmp_ln1019_fu_1056_p2 or and_ln657_fu_1042_p2);
    out_exp_V_fu_1121_p2 <= std_logic_vector(unsigned(trunc_ln177_fu_1117_p1) + unsigned(ap_const_lv11_3FF));
    p_Result_16_fu_267_p3 <= data_V_fu_263_p1(63 downto 63);
    p_Result_17_fu_317_p3 <= (ap_const_lv2_1 & tmp_38_fu_285_p1);
    p_Result_19_fu_1127_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_1121_p2) & tmp_39_fu_1109_p3);
    p_Result_s_fu_601_p3 <= grp_fu_1262_p3(30 downto 30);
    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln527_fu_723_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln527_3_fu_718_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln527_2_fu_713_p1(8 - 1 downto 0);
    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 <= zext_ln527_1_fu_708_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_14_fu_771_p0 <= r_V_14_fu_771_p00(43 - 1 downto 0);
    r_V_14_fu_771_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_10_fu_750_p4),79));
    r_V_14_fu_771_p1 <= r_V_14_fu_771_p10(36 - 1 downto 0);
    r_V_14_fu_771_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_9_fu_744_p2),79));
    r_V_15_fu_834_p0 <= r_V_15_fu_834_p00(49 - 1 downto 0);
    r_V_15_fu_834_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2_m_1_V_fu_817_p4),93));
    r_V_15_fu_834_p1 <= r_V_15_fu_834_p10(44 - 1 downto 0);
    r_V_15_fu_834_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_V_fu_801_p2),93));
    r_V_17_fu_439_p3 <= 
        r_V_2_fu_427_p2 when (isNeg_fu_357_p3(0) = '1') else 
        r_V_3_fu_433_p2;
    r_V_19_fu_954_p0 <= r_V_19_fu_954_p00(50 - 1 downto 0);
    r_V_19_fu_954_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1380),100));
    r_V_19_fu_954_p1 <= r_V_19_fu_954_p10(50 - 1 downto 0);
    r_V_19_fu_954_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_fu_931_p4),100));
    r_V_1_fu_405_p2 <= std_logic_vector(shift_left(unsigned(sext_ln568_fu_349_p1),to_integer(unsigned('0' & zext_ln1340_fu_387_p1(31-1 downto 0)))));
    r_V_2_fu_427_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_fu_415_p3),to_integer(unsigned('0' & zext_ln1306_fu_423_p1(31-1 downto 0)))));
    r_V_3_fu_433_p2 <= std_logic_vector(shift_right(signed(m_fix_l_fu_415_p3),to_integer(unsigned('0' & zext_ln1306_fu_423_p1(31-1 downto 0)))));
    r_V_5_fu_463_p2 <= std_logic_vector(shift_left(unsigned(sext_ln568_fu_349_p1),to_integer(unsigned('0' & zext_ln1306_1_fu_459_p1(31-1 downto 0)))));
    r_V_6_fu_497_p2 <= std_logic_vector(shift_left(unsigned(sext_ln568_fu_349_p1),to_integer(unsigned('0' & zext_ln1306_2_fu_493_p1(31-1 downto 0)))));
    r_V_7_fu_511_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_fu_343_p2),to_integer(unsigned('0' & sext_ln1306_1cast_fu_507_p1(31-1 downto 0)))));
    r_V_8_fu_521_p3 <= 
        trunc_ln1305_fu_503_p1 when (isNeg_1_fu_473_p3(0) = '1') else 
        sext_ln1305_fu_517_p1;
    r_V_fu_395_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_fu_343_p2),to_integer(unsigned('0' & sext_ln1340cast_fu_391_p1(31-1 downto 0)))));
    r_exp_V_2_fu_1035_p3 <= 
        ret_V_8_reg_1333_pp0_iter4_reg when (tmp_33_fu_1022_p3(0) = '1') else 
        r_exp_V_fu_1030_p2;
    r_exp_V_fu_1030_p2 <= std_logic_vector(signed(ret_V_8_reg_1333_pp0_iter4_reg) + signed(ap_const_lv13_1FFF));
    r_fu_727_p4 <= pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1(25 downto 16);
    ret_V_10_fu_750_p4 <= ((Z3_V_reg_1350 & ap_const_lv9_0) & pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);
    ret_V_11_fu_941_p2 <= std_logic_vector(unsigned(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0) + unsigned(ap_const_lv58_10));
    ret_V_6_fu_1004_p2 <= std_logic_vector(unsigned(lhs_V_4_fu_960_p3) + unsigned(zext_ln1199_2_fu_968_p1));
    ret_V_8_fu_631_p3 <= 
        select_ln855_fu_623_p3 when (p_Result_s_fu_601_p3(0) = '1') else 
        ret_V_cast_fu_592_p4;
    ret_V_9_fu_744_p2 <= std_logic_vector(unsigned(zext_ln666_fu_737_p1) + unsigned(zext_ln666_1_fu_740_p1));
    ret_V_cast_fu_592_p4 <= grp_fu_1262_p3(30 downto 18);
    ret_V_fu_617_p2 <= std_logic_vector(unsigned(ret_V_cast_fu_592_p4) + unsigned(ap_const_lv13_1));
    rhs_fu_581_p3 <= (p_Result_18_reg_1303_pp0_iter1_reg & ap_const_lv18_20000);
    select_ln1023_1_fu_1240_p3 <= 
        ap_const_lv64_0 when (or_ln1023_fu_1234_p2(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln407_1_fu_1190_p3 <= 
        select_ln407_fu_914_p3 when (or_ln407_fu_909_p2(0) = '1') else 
        select_ln657_fu_1182_p3;
    select_ln407_fu_914_p3 <= 
        ap_const_lv64_3FF0000000000000 when (y_is_0_reg_1280_pp0_iter4_reg(0) = '1') else 
        ap_const_lv64_7FFFFFFFFFFFFFFF;
    select_ln578_fu_529_p3 <= 
        r_V_8_fu_521_p3 when (tmp_28_fu_447_p3(0) = '1') else 
        trunc_ln1339_2_fu_469_p1;
    select_ln657_fu_1182_p3 <= 
        select_ln658_fu_1075_p3 when (and_ln657_1_fu_1176_p2(0) = '1') else 
        bitcast_ln521_fu_1137_p1;
    select_ln658_fu_1075_p3 <= 
        ap_const_lv64_0 when (tmp_35_fu_1068_p3(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln855_fu_623_p3 <= 
        ret_V_cast_fu_592_p4 when (icmp_ln856_fu_611_p2(0) = '1') else 
        ret_V_fu_617_p2;
        sext_ln1305_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_fu_511_p2),130));

        sext_ln1306_1_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_2_fu_481_p3),32));

    sext_ln1306_1cast_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1306_1_fu_489_p1),122));
        sext_ln1306_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_exp_fu_293_p2),32));

        sext_ln1339_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_395_p2),130));

        sext_ln1340_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_375_p3),32));

    sext_ln1340cast_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1340_fu_383_p1),122));
        sext_ln1364_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1364_fu_365_p2),12));

        sext_ln568_1_fu_353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_fu_343_p2),130));

        sext_ln568_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_fu_343_p2),131));

    sub_ln1364_fu_365_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_37_fu_275_p4));
    tmp_20_fu_807_p4 <= pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(41 downto 2);
    tmp_28_fu_447_p3 <= m_exp_fu_293_p2(11 downto 11);
    tmp_33_fu_1022_p3 <= ret_V_6_fu_1004_p2(106 downto 106);
    tmp_34_fu_1046_p4 <= r_exp_V_2_fu_1035_p3(12 downto 10);
    tmp_35_fu_1068_p3 <= m_frac_l_V_reg_1298_pp0_iter4_reg(121 downto 121);
    tmp_37_fu_275_p4 <= data_V_fu_263_p1(62 downto 52);
    tmp_38_fu_285_p1 <= data_V_fu_263_p1(52 - 1 downto 0);
    tmp_39_fu_1109_p3 <= 
        tmp_fu_1089_p4 when (tmp_33_fu_1022_p3(0) = '1') else 
        tmp_s_fu_1099_p4;
    tmp_fu_1089_p4 <= add_ln1199_2_fu_1016_p2(105 downto 54);
    tmp_s_fu_1099_p4 <= add_ln1199_1_fu_1010_p2(104 downto 53);
    trunc_ln1199_1_fu_996_p3 <= (trunc_ln1199_2_fu_992_p1 & ap_const_lv49_0);
    trunc_ln1199_2_fu_992_p1 <= ret_V_11_fu_941_p2(56 - 1 downto 0);
    trunc_ln1199_fu_976_p1 <= ret_V_11_fu_941_p2(57 - 1 downto 0);
    trunc_ln1305_fu_503_p1 <= r_V_6_fu_497_p2(130 - 1 downto 0);
    trunc_ln1339_1_fu_411_p1 <= r_V_1_fu_405_p2(130 - 1 downto 0);
    trunc_ln1339_2_fu_469_p1 <= r_V_5_fu_463_p2(130 - 1 downto 0);
    trunc_ln177_fu_1117_p1 <= r_exp_V_2_fu_1035_p3(11 - 1 downto 0);
    trunc_ln1_fu_980_p3 <= (trunc_ln1199_fu_976_p1 & ap_const_lv49_0);
    trunc_ln666_1_fu_649_p4 <= r_V_12_fu_643_p2(70 downto 12);
    trunc_ln666_4_fu_777_p4 <= r_V_14_fu_771_p2(78 downto 59);
    trunc_ln666_5_fu_855_p4 <= r_V_15_fu_834_p2(92 downto 57);
    trunc_ln856_fu_608_p1 <= grp_fu_1262_p3(18 - 1 downto 0);
    ush_2_fu_481_p3 <= 
        m_exp_fu_293_p2 when (isNeg_1_fu_473_p3(0) = '1') else 
        sext_ln1364_fu_371_p1;
    ush_fu_375_p3 <= 
        sext_ln1364_fu_371_p1 when (isNeg_fu_357_p3(0) = '1') else 
        m_exp_fu_293_p2;
    xor_ln1007_fu_899_p2 <= (icmp_ln1003_1_reg_1292_pp0_iter4_reg xor ap_const_lv1_1);
    xor_ln407_fu_1141_p2 <= (or_ln407_fu_909_p2 xor ap_const_lv1_1);
    xor_ln460_fu_1147_p2 <= (y_is_inf_fu_895_p2 xor ap_const_lv1_1);
    xor_ln467_fu_1158_p2 <= (ap_const_lv1_1 xor and_ln467_fu_926_p2);
    xor_ln657_fu_1216_p2 <= (or_ln657_fu_1062_p2 xor ap_const_lv1_1);
    xor_ln964_fu_921_p2 <= (p_Result_16_reg_1273_pp0_iter4_reg xor ap_const_lv1_1);
    y_is_0_fu_299_p2 <= "1" when (tmp_37_fu_275_p4 = ap_const_lv11_0) else "0";
    y_is_NaN_fu_904_p2 <= (xor_ln1007_fu_899_p2 and icmp_ln1003_reg_1286_pp0_iter4_reg);
    y_is_inf_fu_895_p2 <= (icmp_ln1003_reg_1286_pp0_iter4_reg and icmp_ln1003_1_reg_1292_pp0_iter4_reg);
    zext_ln1199_1_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_1_fu_840_p5),52));
    zext_ln1199_2_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_19_fu_954_p2),107));
    zext_ln1199_3_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_19_fu_954_p2),106));
    zext_ln1199_4_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_19_fu_954_p2),105));
    zext_ln1199_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_10_fu_750_p4),44));
    zext_ln1306_1_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1306_fu_455_p1),131));
    zext_ln1306_2_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1306_1_fu_489_p1),131));
    zext_ln1306_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1340_fu_383_p1),130));
    zext_ln1340_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1340_fu_383_p1),131));
    zext_ln510_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_275_p4),12));
    zext_ln527_1_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_fu_698_p4),64));
    zext_ln527_2_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_V_fu_684_p4),64));
    zext_ln527_3_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_V_fu_674_p4),64));
    zext_ln527_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_1339),64));
    zext_ln666_1_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_727_p4),36));
    zext_ln666_2_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln666_4_fu_777_p4),36));
    zext_ln666_3_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln666_fu_791_p2),44));
    zext_ln666_4_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln666_5_fu_855_p4),44));
    zext_ln666_5_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln666_2_fu_869_p2),52));
    zext_ln666_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_reg_1355),36));
end behav;
