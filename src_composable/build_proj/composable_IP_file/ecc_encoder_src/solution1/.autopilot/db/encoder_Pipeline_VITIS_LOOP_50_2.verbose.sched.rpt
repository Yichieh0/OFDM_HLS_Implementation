

================================================================
== Vitis HLS Report for 'encoder_Pipeline_VITIS_LOOP_50_2'
================================================================
* Date:           Mon Dec  5 17:41:12 2022

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
* Project:        ecc_encoder_src
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  20.00 ns|  1.433 ns|     5.40 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max   | min | max |   Type  |
    +---------+---------+-----------+----------+-----+-----+---------+
    |        3|        ?|  60.000 ns|         ?|    3|    ?|       no|
    +---------+---------+-----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_50_2  |        1|        ?|         2|          1|          1|  1 ~ ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.43>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%out_V = alloca i32 1"   --->   Operation 5 'alloca' 'out_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%part_set_i_i_lcssa276 = alloca i32 1"   --->   Operation 7 'alloca' 'part_set_i_i_lcssa276' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%data_in_temp_V = alloca i32 1"   --->   Operation 8 'alloca' 'data_in_temp_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%data_in_axiu_last_V = alloca i32 1"   --->   Operation 9 'alloca' 'data_in_axiu_last_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%data_in_axiu_strb_V = alloca i32 1"   --->   Operation 10 'alloca' 'data_in_axiu_strb_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%data_in_axiu_keep_V = alloca i32 1"   --->   Operation 11 'alloca' 'data_in_axiu_keep_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %data_out_V_last_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %data_out_V_strb_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %data_out_V_keep_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %data_out_V_data_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %data_in_V_last_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %data_in_V_strb_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %data_in_V_keep_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %data_in_V_data_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%mul_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %mul"   --->   Operation 20 'read' 'mul_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%s_V_load_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %s_V_load"   --->   Operation 21 'read' 's_V_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.42ns)   --->   "%store_ln0 = store i6 %s_V_load_read, i6 %part_set_i_i_lcssa276"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 23 [1/1] (0.42ns)   --->   "%store_ln0 = store i31 0, i31 %i"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln0 = store i8 0, i8 %out_V"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 25 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%i_1 = load i31 %i"   --->   Operation 26 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 27 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.99ns)   --->   "%icmp_ln50 = icmp_eq  i31 %i_1, i31 %mul_read" [ecc_encoder_src/src/encoder.cpp:50]   --->   Operation 28 'icmp' 'icmp_ln50' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 18446744073709551615, i64 0"   --->   Operation 29 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.00ns)   --->   "%i_2 = add i31 %i_1, i31 1" [ecc_encoder_src/src/encoder.cpp:50]   --->   Operation 30 'add' 'i_2' <Predicate = true> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln50 = br i1 %icmp_ln50, void %.split9, void %._crit_edge.loopexit.exitStub" [ecc_encoder_src/src/encoder.cpp:50]   --->   Operation 31 'br' 'br_ln50' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%empty_14 = trunc i31 %i_1"   --->   Operation 32 'trunc' 'empty_14' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specloopname_ln49 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [ecc_encoder_src/src/encoder.cpp:49]   --->   Operation 33 'specloopname' 'specloopname_ln49' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln52 = br i1 %empty_14, void, void %.split9._crit_edge" [ecc_encoder_src/src/encoder.cpp:52]   --->   Operation 34 'br' 'br_ln52' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%empty_15 = read i81 @_ssdm_op_Read.axis.volatile.i64P0A.i8P0A.i8P0A.i1P0A, i64 %data_in_V_data_V, i8 %data_in_V_keep_V, i8 %data_in_V_strb_V, i1 %data_in_V_last_V"   --->   Operation 35 'read' 'empty_15' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_16 = extractvalue i81 %empty_15"   --->   Operation 36 'extractvalue' 'tmp_16' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_17 = extractvalue i81 %empty_15"   --->   Operation 37 'extractvalue' 'tmp_17' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_18 = extractvalue i81 %empty_15"   --->   Operation 38 'extractvalue' 'tmp_18' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_19 = extractvalue i81 %empty_15"   --->   Operation 39 'extractvalue' 'tmp_19' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%store_ln57 = store i8 %tmp_17, i8 %data_in_axiu_keep_V" [ecc_encoder_src/src/encoder.cpp:57]   --->   Operation 40 'store' 'store_ln57' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%store_ln57 = store i8 %tmp_18, i8 %data_in_axiu_strb_V" [ecc_encoder_src/src/encoder.cpp:57]   --->   Operation 41 'store' 'store_ln57' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%store_ln57 = store i1 %tmp_19, i1 %data_in_axiu_last_V" [ecc_encoder_src/src/encoder.cpp:57]   --->   Operation 42 'store' 'store_ln57' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%store_ln57 = store i64 %tmp_16, i64 %data_in_temp_V" [ecc_encoder_src/src/encoder.cpp:57]   --->   Operation 43 'store' 'store_ln57' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln57 = br void %.split9._crit_edge" [ecc_encoder_src/src/encoder.cpp:57]   --->   Operation 44 'br' 'br_ln57' <Predicate = (!icmp_ln50 & !empty_14)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln50 = store i31 %i_2, i31 %i" [ecc_encoder_src/src/encoder.cpp:50]   --->   Operation 45 'store' 'store_ln50' <Predicate = (!icmp_ln50)> <Delay = 0.42>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%part_set_i_i_lcssa276_load_1 = load i6 %part_set_i_i_lcssa276"   --->   Operation 88 'load' 'part_set_i_i_lcssa276_load_1' <Predicate = (icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i6P0A, i6 %part_set_i_i_lcssa276_out, i6 %part_set_i_i_lcssa276_load_1"   --->   Operation 89 'write' 'write_ln0' <Predicate = (icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 90 'ret' 'ret_ln0' <Predicate = (icmp_ln50)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%out_V_load = load i8 %out_V"   --->   Operation 46 'load' 'out_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%part_set_i_i_lcssa276_load = load i6 %part_set_i_i_lcssa276"   --->   Operation 47 'load' 'part_set_i_i_lcssa276_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%p_Val2_s = load i64 %data_in_temp_V"   --->   Operation 48 'load' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_15 = load i1 %data_in_axiu_last_V"   --->   Operation 49 'load' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_14 = load i8 %data_in_axiu_strb_V"   --->   Operation 50 'load' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_13 = load i8 %data_in_axiu_keep_V"   --->   Operation 51 'load' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%mul1 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 %empty_14, i1 0"   --->   Operation 52 'bitconcatenate' 'mul1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i2 %mul1" [ecc_encoder_src/src/encoder.cpp:61]   --->   Operation 53 'zext' 'zext_ln61' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%p_Result_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i64, i64 %p_Val2_s, i64 %zext_ln61"   --->   Operation 54 'bitselect' 'p_Result_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %part_set_i_i_lcssa276_load, i32 5" [ecc_encoder_src/src/encoder.cpp:62]   --->   Operation 55 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %part_set_i_i_lcssa276_load, i32 1" [ecc_encoder_src/src/encoder.cpp:62]   --->   Operation 56 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %part_set_i_i_lcssa276_load, i32 2" [ecc_encoder_src/src/encoder.cpp:62]   --->   Operation 57 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %part_set_i_i_lcssa276_load, i32 4" [ecc_encoder_src/src/encoder.cpp:62]   --->   Operation 58 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844)   --->   "%xor_ln844_4 = xor i1 %tmp_4, i1 %tmp"   --->   Operation 59 'xor' 'xor_ln844_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.28ns)   --->   "%xor_ln844_5 = xor i1 %tmp_6, i1 %p_Result_3"   --->   Operation 60 'xor' 'xor_ln844_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844)   --->   "%xor_ln844_6 = xor i1 %xor_ln844_5, i1 %tmp_5"   --->   Operation 61 'xor' 'xor_ln844_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln844 = xor i1 %xor_ln844_6, i1 %xor_ln844_4"   --->   Operation 62 'xor' 'xor_ln844' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln63 = trunc i6 %part_set_i_i_lcssa276_load" [ecc_encoder_src/src/encoder.cpp:63]   --->   Operation 63 'trunc' 'trunc_ln63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_1)   --->   "%xor_ln844_7 = xor i1 %trunc_ln63, i1 %tmp"   --->   Operation 64 'xor' 'xor_ln844_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_1)   --->   "%xor_ln844_8 = xor i1 %tmp_5, i1 %p_Result_3"   --->   Operation 65 'xor' 'xor_ln844_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_1)   --->   "%xor_ln844_9 = xor i1 %xor_ln844_8, i1 %tmp_4"   --->   Operation 66 'xor' 'xor_ln844_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln844_1 = xor i1 %xor_ln844_9, i1 %xor_ln844_7"   --->   Operation 67 'xor' 'xor_ln844_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%or_ln62 = or i2 %mul1, i2 1" [ecc_encoder_src/src/encoder.cpp:62]   --->   Operation 68 'or' 'or_ln62' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln819 = zext i2 %or_ln62"   --->   Operation 69 'zext' 'zext_ln819' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%p_Result_3_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i64, i64 %p_Val2_s, i64 %zext_ln819"   --->   Operation 70 'bitselect' 'p_Result_3_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_2)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %part_set_i_i_lcssa276_load, i32 3" [ecc_encoder_src/src/encoder.cpp:62]   --->   Operation 71 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_2)   --->   "%xor_ln844_11 = xor i1 %tmp_4, i1 %tmp_7"   --->   Operation 72 'xor' 'xor_ln844_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_2)   --->   "%xor_ln844_10 = xor i1 %trunc_ln63, i1 %tmp_6"   --->   Operation 73 'xor' 'xor_ln844_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_2)   --->   "%xor_ln844_12 = xor i1 %xor_ln844_10, i1 %p_Result_3_1"   --->   Operation 74 'xor' 'xor_ln844_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln844_2 = xor i1 %xor_ln844_12, i1 %xor_ln844_11"   --->   Operation 75 'xor' 'xor_ln844_2' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_3)   --->   "%xor_ln844_13 = xor i1 %p_Result_3_1, i1 %tmp_4"   --->   Operation 76 'xor' 'xor_ln844_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node xor_ln844_3)   --->   "%xor_ln844_14 = xor i1 %xor_ln844_5, i1 %trunc_ln63"   --->   Operation 77 'xor' 'xor_ln844_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln844_3 = xor i1 %xor_ln844_14, i1 %xor_ln844_13"   --->   Operation 78 'xor' 'xor_ln844_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_8 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i1.i1.i1, i1 %xor_ln844_3, i1 %xor_ln844_2, i1 %xor_ln844_1, i1 %xor_ln844"   --->   Operation 79 'bitconcatenate' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%data_in_axiu_data_V = partset i8 @_ssdm_op_PartSet.i8.i8.i4.i32.i32, i8 %out_V_load, i4 %tmp_8, i32 0, i32 3"   --->   Operation 80 'partset' 'data_in_axiu_data_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln1676 = trunc i6 %part_set_i_i_lcssa276_load"   --->   Operation 81 'trunc' 'trunc_ln1676' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%p_Result_6_1 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i1.i1, i4 %trunc_ln1676, i1 %p_Result_3, i1 %p_Result_3_1"   --->   Operation 82 'bitconcatenate' 'p_Result_6_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln217 = zext i8 %data_in_axiu_data_V"   --->   Operation 83 'zext' 'zext_ln217' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i64P0A.i8P0A.i8P0A.i1P0A, i64 %data_out_V_data_V, i8 %data_out_V_keep_V, i8 %data_out_V_strb_V, i1 %data_out_V_last_V, i64 %zext_ln217, i8 %tmp_13, i8 %tmp_14, i1 %tmp_15"   --->   Operation 84 'write' 'write_ln304' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 85 [1/1] (0.42ns)   --->   "%store_ln849 = store i6 %p_Result_6_1, i6 %part_set_i_i_lcssa276"   --->   Operation 85 'store' 'store_ln849' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 86 [1/1] (0.42ns)   --->   "%store_ln844 = store i8 %data_in_axiu_data_V, i8 %out_V"   --->   Operation 86 'store' 'store_ln844' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 87 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 5.4ns.

 <State 1>: 1.43ns
The critical path consists of the following:
	'alloca' operation ('i') [13]  (0 ns)
	'load' operation ('i') on local variable 'i' [34]  (0 ns)
	'add' operation ('i', ecc_encoder_src/src/encoder.cpp:50) [38]  (1.01 ns)
	'store' operation ('store_ln50', ecc_encoder_src/src/encoder.cpp:50) of variable 'i', ecc_encoder_src/src/encoder.cpp:50 on local variable 'i' [96]  (0.427 ns)

 <State 2>: 1ns
The critical path consists of the following:
	'load' operation ('part_set_i_i_lcssa276_load') on local variable 'part_set_i_i_lcssa276' [57]  (0 ns)
	'xor' operation ('xor_ln844_5') [70]  (0.287 ns)
	'xor' operation ('xor_ln844_6') [71]  (0 ns)
	'xor' operation ('xor_ln844') [72]  (0.287 ns)
	'store' operation ('store_ln844') of variable 'data_in_axiu.data.V' on local variable 'out.V' [97]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
